'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'
'This source code was auto-generated by xsd, Version=2.0.50727.1432.
'

'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"), _
 Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("GalaxyInsertServiceCenterDs"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class GalaxyInsertServiceCenterDs
    Inherits Global.System.Data.DataSet

    Private tableGalaxyInsertServiceCenter As GalaxyInsertServiceCenterDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("GalaxyInsertServiceCenter")) Is Nothing) Then
                MyBase.Tables.Add(New GalaxyInsertServiceCenterDataTable(ds.Tables("GalaxyInsertServiceCenter")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property GalaxyInsertServiceCenter() As GalaxyInsertServiceCenterDataTable
        Get
            Return Me.tableGalaxyInsertServiceCenter
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(ByVal value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As GalaxyInsertServiceCenterDs = CType(MyBase.Clone, GalaxyInsertServiceCenterDs)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("GalaxyInsertServiceCenter")) Is Nothing) Then
                MyBase.Tables.Add(New GalaxyInsertServiceCenterDataTable(ds.Tables("GalaxyInsertServiceCenter")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableGalaxyInsertServiceCenter = CType(MyBase.Tables("GalaxyInsertServiceCenter"), GalaxyInsertServiceCenterDataTable)
        If (initTable = True) Then
            If (Not (Me.tableGalaxyInsertServiceCenter) Is Nothing) Then
                Me.tableGalaxyInsertServiceCenter.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Sub InitClass()
        Me.DataSetName = "GalaxyInsertServiceCenterDs"
        Me.Prefix = ""
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableGalaxyInsertServiceCenter = New GalaxyInsertServiceCenterDataTable
        MyBase.Tables.Add(Me.tableGalaxyInsertServiceCenter)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Function ShouldSerializeGalaxyInsertServiceCenter() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As GalaxyInsertServiceCenterDs = New GalaxyInsertServiceCenterDs
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    Public Delegate Sub GalaxyInsertServiceCenterRowChangeEventHandler(ByVal sender As Object, ByVal e As GalaxyInsertServiceCenterRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"), _
     Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class GalaxyInsertServiceCenterDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnSERVICE_CENTER_CODE As Global.System.Data.DataColumn

        Private columnSERVICE_CENTER_NAME As Global.System.Data.DataColumn

        Private columnADDRESS As Global.System.Data.DataColumn

        Private columnCITY As Global.System.Data.DataColumn

        Private columnREGION_CODE As Global.System.Data.DataColumn

        Private columnPOSTAL_CODE As Global.System.Data.DataColumn

        Private columnCOUNTRY_CODE As Global.System.Data.DataColumn

        Private columnSTATUS_CODE As Global.System.Data.DataColumn

        Private columnTAX_ID As Global.System.Data.DataColumn

        Private columnSERVICE_TYPE As Global.System.Data.DataColumn

        Private columnPHONE As Global.System.Data.DataColumn

        Private columnFAX As Global.System.Data.DataColumn

        Private columnCOMMENTS As Global.System.Data.DataColumn

        Private columnORIGINAL_DEALER_CODE As Global.System.Data.DataColumn

        Private columnRATING_CODE As Global.System.Data.DataColumn

        Private columnPAYMENT_METHOD As Global.System.Data.DataColumn

        Private columnACCOUNT_NAME As Global.System.Data.DataColumn

        Private columnBANK_ID As Global.System.Data.DataColumn

        Private columnACCOUNT_NUMBER As Global.System.Data.DataColumn

        Private columnBANK_COUNTRY_CODE As Global.System.Data.DataColumn

        Private columnIBAN_NUMBER As Global.System.Data.DataColumn

        Private columnSWIFT_CODE As Global.System.Data.DataColumn

        Private columnACCOUNT_TYPE As Global.System.Data.DataColumn

        Private columnREGISTRATION_NUMBER As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "GalaxyInsertServiceCenter"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property SERVICE_CENTER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICE_CENTER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property SERVICE_CENTER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICE_CENTER_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCITY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property REGION_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGION_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property POSTAL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTAL_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property COUNTRY_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNTRY_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property STATUS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property TAX_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAX_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property SERVICE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICE_TYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHONE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property COMMENTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMMENTS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ORIGINAL_DEALER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGINAL_DEALER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property RATING_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATING_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property PAYMENT_METHODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENT_METHOD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ACCOUNT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property BANK_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANK_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ACCOUNT_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property BANK_COUNTRY_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANK_COUNTRY_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property IBAN_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIBAN_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property SWIFT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSWIFT_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ACCOUNT_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_TYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property REGISTRATION_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGISTRATION_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As GalaxyInsertServiceCenterRow
            Get
                Return CType(Me.Rows(index), GalaxyInsertServiceCenterRow)
            End Get
        End Property

        Public Event GalaxyInsertServiceCenterRowChanging As GalaxyInsertServiceCenterRowChangeEventHandler

        Public Event GalaxyInsertServiceCenterRowChanged As GalaxyInsertServiceCenterRowChangeEventHandler

        Public Event GalaxyInsertServiceCenterRowDeleting As GalaxyInsertServiceCenterRowChangeEventHandler

        Public Event GalaxyInsertServiceCenterRowDeleted As GalaxyInsertServiceCenterRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Sub AddGalaxyInsertServiceCenterRow(ByVal row As GalaxyInsertServiceCenterRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Function AddGalaxyInsertServiceCenterRow( _
                    ByVal SERVICE_CENTER_CODE As String, _
                    ByVal SERVICE_CENTER_NAME As String, _
                    ByVal ADDRESS As String, _
                    ByVal CITY As String, _
                    ByVal REGION_CODE As String, _
                    ByVal POSTAL_CODE As String, _
                    ByVal COUNTRY_CODE As String, _
                    ByVal STATUS_CODE As String, _
                    ByVal TAX_ID As String, _
                    ByVal SERVICE_TYPE As String, _
                    ByVal PHONE As String, _
                    ByVal FAX As String, _
                    ByVal COMMENTS As String, _
                    ByVal ORIGINAL_DEALER_CODE As String, _
                    ByVal RATING_CODE As String, _
                    ByVal PAYMENT_METHOD As String, _
                    ByVal ACCOUNT_NAME As String, _
                    ByVal BANK_ID As String, _
                    ByVal ACCOUNT_NUMBER As String, _
                    ByVal BANK_COUNTRY_CODE As String, _
                    ByVal IBAN_NUMBER As String, _
                    ByVal SWIFT_CODE As String, _
                    ByVal ACCOUNT_TYPE As String, _
                    ByVal REGISTRATION_NUMBER As String) As GalaxyInsertServiceCenterRow
            Dim rowGalaxyInsertServiceCenterRow As GalaxyInsertServiceCenterRow = CType(Me.NewRow, GalaxyInsertServiceCenterRow)
            Dim columnValuesArray() As Object = New Object() {SERVICE_CENTER_CODE, SERVICE_CENTER_NAME, ADDRESS, CITY, REGION_CODE, POSTAL_CODE, COUNTRY_CODE, STATUS_CODE, TAX_ID, SERVICE_TYPE, PHONE, FAX, COMMENTS, ORIGINAL_DEALER_CODE, RATING_CODE, PAYMENT_METHOD, ACCOUNT_NAME, BANK_ID, ACCOUNT_NUMBER, BANK_COUNTRY_CODE, IBAN_NUMBER, SWIFT_CODE, ACCOUNT_TYPE, REGISTRATION_NUMBER}
            rowGalaxyInsertServiceCenterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGalaxyInsertServiceCenterRow)
            Return rowGalaxyInsertServiceCenterRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GalaxyInsertServiceCenterDataTable = CType(MyBase.Clone, GalaxyInsertServiceCenterDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GalaxyInsertServiceCenterDataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub InitVars()
            Me.columnSERVICE_CENTER_CODE = MyBase.Columns("SERVICE_CENTER_CODE")
            Me.columnSERVICE_CENTER_NAME = MyBase.Columns("SERVICE_CENTER_NAME")
            Me.columnADDRESS = MyBase.Columns("ADDRESS")
            Me.columnCITY = MyBase.Columns("CITY")
            Me.columnREGION_CODE = MyBase.Columns("REGION_CODE")
            Me.columnPOSTAL_CODE = MyBase.Columns("POSTAL_CODE")
            Me.columnCOUNTRY_CODE = MyBase.Columns("COUNTRY_CODE")
            Me.columnSTATUS_CODE = MyBase.Columns("STATUS_CODE")
            Me.columnTAX_ID = MyBase.Columns("TAX_ID")
            Me.columnSERVICE_TYPE = MyBase.Columns("SERVICE_TYPE")
            Me.columnPHONE = MyBase.Columns("PHONE")
            Me.columnFAX = MyBase.Columns("FAX")
            Me.columnCOMMENTS = MyBase.Columns("COMMENTS")
            Me.columnORIGINAL_DEALER_CODE = MyBase.Columns("ORIGINAL_DEALER_CODE")
            Me.columnRATING_CODE = MyBase.Columns("RATING_CODE")
            Me.columnPAYMENT_METHOD = MyBase.Columns("PAYMENT_METHOD")
            Me.columnACCOUNT_NAME = MyBase.Columns("ACCOUNT_NAME")
            Me.columnBANK_ID = MyBase.Columns("BANK_ID")
            Me.columnACCOUNT_NUMBER = MyBase.Columns("ACCOUNT_NUMBER")
            Me.columnBANK_COUNTRY_CODE = MyBase.Columns("BANK_COUNTRY_CODE")
            Me.columnIBAN_NUMBER = MyBase.Columns("IBAN_NUMBER")
            Me.columnSWIFT_CODE = MyBase.Columns("SWIFT_CODE")
            Me.columnACCOUNT_TYPE = MyBase.Columns("ACCOUNT_TYPE")
            Me.columnREGISTRATION_NUMBER = MyBase.Columns("REGISTRATION_NUMBER")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitClass()
            Me.columnSERVICE_CENTER_CODE = New Global.System.Data.DataColumn("SERVICE_CENTER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_CENTER_CODE)
            Me.columnSERVICE_CENTER_NAME = New Global.System.Data.DataColumn("SERVICE_CENTER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_CENTER_NAME)
            Me.columnADDRESS = New Global.System.Data.DataColumn("ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS)
            Me.columnCITY = New Global.System.Data.DataColumn("CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCITY)
            Me.columnREGION_CODE = New Global.System.Data.DataColumn("REGION_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGION_CODE)
            Me.columnPOSTAL_CODE = New Global.System.Data.DataColumn("POSTAL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTAL_CODE)
            Me.columnCOUNTRY_CODE = New Global.System.Data.DataColumn("COUNTRY_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRY_CODE)
            Me.columnSTATUS_CODE = New Global.System.Data.DataColumn("STATUS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS_CODE)
            Me.columnTAX_ID = New Global.System.Data.DataColumn("TAX_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAX_ID)
            Me.columnSERVICE_TYPE = New Global.System.Data.DataColumn("SERVICE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_TYPE)
            Me.columnPHONE = New Global.System.Data.DataColumn("PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHONE)
            Me.columnFAX = New Global.System.Data.DataColumn("FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX)
            Me.columnCOMMENTS = New Global.System.Data.DataColumn("COMMENTS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMMENTS)
            Me.columnORIGINAL_DEALER_CODE = New Global.System.Data.DataColumn("ORIGINAL_DEALER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGINAL_DEALER_CODE)
            Me.columnRATING_CODE = New Global.System.Data.DataColumn("RATING_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATING_CODE)
            Me.columnPAYMENT_METHOD = New Global.System.Data.DataColumn("PAYMENT_METHOD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENT_METHOD)
            Me.columnACCOUNT_NAME = New Global.System.Data.DataColumn("ACCOUNT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_NAME)
            Me.columnBANK_ID = New Global.System.Data.DataColumn("BANK_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_ID)
            Me.columnACCOUNT_NUMBER = New Global.System.Data.DataColumn("ACCOUNT_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_NUMBER)
            Me.columnBANK_COUNTRY_CODE = New Global.System.Data.DataColumn("BANK_COUNTRY_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_COUNTRY_CODE)
            Me.columnIBAN_NUMBER = New Global.System.Data.DataColumn("IBAN_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIBAN_NUMBER)
            Me.columnSWIFT_CODE = New Global.System.Data.DataColumn("SWIFT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSWIFT_CODE)
            Me.columnACCOUNT_TYPE = New Global.System.Data.DataColumn("ACCOUNT_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_TYPE)
            Me.columnREGISTRATION_NUMBER = New Global.System.Data.DataColumn("REGISTRATION_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGISTRATION_NUMBER)
            Me.columnSERVICE_CENTER_CODE.AllowDBNull = False
            Me.columnSERVICE_CENTER_NAME.AllowDBNull = False
            Me.columnADDRESS.AllowDBNull = False
            Me.columnCITY.AllowDBNull = False
            Me.columnREGION_CODE.AllowDBNull = False
            Me.columnPOSTAL_CODE.AllowDBNull = False
            Me.columnCOUNTRY_CODE.AllowDBNull = False
            Me.columnSTATUS_CODE.AllowDBNull = False
            Me.columnTAX_ID.AllowDBNull = False
            Me.columnSERVICE_TYPE.AllowDBNull = False
            Me.columnPAYMENT_METHOD.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function NewGalaxyInsertServiceCenterRow() As GalaxyInsertServiceCenterRow
            Return CType(Me.NewRow, GalaxyInsertServiceCenterRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GalaxyInsertServiceCenterRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GalaxyInsertServiceCenterRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GalaxyInsertServiceCenterRowChangedEvent) Is Nothing) Then
                RaiseEvent GalaxyInsertServiceCenterRowChanged(Me, New GalaxyInsertServiceCenterRowChangeEvent(CType(e.Row, GalaxyInsertServiceCenterRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GalaxyInsertServiceCenterRowChangingEvent) Is Nothing) Then
                RaiseEvent GalaxyInsertServiceCenterRowChanging(Me, New GalaxyInsertServiceCenterRowChangeEvent(CType(e.Row, GalaxyInsertServiceCenterRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GalaxyInsertServiceCenterRowDeletedEvent) Is Nothing) Then
                RaiseEvent GalaxyInsertServiceCenterRowDeleted(Me, New GalaxyInsertServiceCenterRowChangeEvent(CType(e.Row, GalaxyInsertServiceCenterRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GalaxyInsertServiceCenterRowDeletingEvent) Is Nothing) Then
                RaiseEvent GalaxyInsertServiceCenterRowDeleting(Me, New GalaxyInsertServiceCenterRowChangeEvent(CType(e.Row, GalaxyInsertServiceCenterRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub RemoveGalaxyInsertServiceCenterRow(ByVal row As GalaxyInsertServiceCenterRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GalaxyInsertServiceCenterDs = New GalaxyInsertServiceCenterDs
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GalaxyInsertServiceCenterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")> _
    Partial Public Class GalaxyInsertServiceCenterRow
        Inherits Global.System.Data.DataRow

        Private tableGalaxyInsertServiceCenter As GalaxyInsertServiceCenterDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGalaxyInsertServiceCenter = CType(Me.Table, GalaxyInsertServiceCenterDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property SERVICE_CENTER_CODE() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.SERVICE_CENTER_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.SERVICE_CENTER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property SERVICE_CENTER_NAME() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.SERVICE_CENTER_NAMEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.SERVICE_CENTER_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ADDRESS() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.ADDRESSColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.ADDRESSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property CITY() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.CITYColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.CITYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property REGION_CODE() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.REGION_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.REGION_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property POSTAL_CODE() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.POSTAL_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.POSTAL_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property COUNTRY_CODE() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.COUNTRY_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.COUNTRY_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property STATUS_CODE() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.STATUS_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.STATUS_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property TAX_ID() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.TAX_IDColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.TAX_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property SERVICE_TYPE() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.SERVICE_TYPEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.SERVICE_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property PHONE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.PHONEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHONE' in table 'GalaxyInsertServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.PHONEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property FAX() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.FAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAX' in table 'GalaxyInsertServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.FAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property COMMENTS() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.COMMENTSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMMENTS' in table 'GalaxyInsertServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.COMMENTSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ORIGINAL_DEALER_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.ORIGINAL_DEALER_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGINAL_DEALER_CODE' in table 'GalaxyInsertServiceCenter' " & _
                            "is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.ORIGINAL_DEALER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property RATING_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.RATING_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATING_CODE' in table 'GalaxyInsertServiceCenter' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.RATING_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property PAYMENT_METHOD() As String
            Get
                Return CType(Me(Me.tableGalaxyInsertServiceCenter.PAYMENT_METHODColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.PAYMENT_METHODColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ACCOUNT_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_NAME' in table 'GalaxyInsertServiceCenter' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property BANK_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.BANK_IDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANK_ID' in table 'GalaxyInsertServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.BANK_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ACCOUNT_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_NUMBER' in table 'GalaxyInsertServiceCenter' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property BANK_COUNTRY_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.BANK_COUNTRY_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANK_COUNTRY_CODE' in table 'GalaxyInsertServiceCenter' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.BANK_COUNTRY_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property IBAN_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.IBAN_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IBAN_NUMBER' in table 'GalaxyInsertServiceCenter' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.IBAN_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property SWIFT_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.SWIFT_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SWIFT_CODE' in table 'GalaxyInsertServiceCenter' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.SWIFT_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ACCOUNT_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_TYPEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_TYPE' in table 'GalaxyInsertServiceCenter' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property REGISTRATION_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyInsertServiceCenter.REGISTRATION_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REGISTRATION_NUMBER' in table 'GalaxyInsertServiceCenter' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyInsertServiceCenter.REGISTRATION_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsPHONENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.PHONEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetPHONENull()
            Me(Me.tableGalaxyInsertServiceCenter.PHONEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsFAXNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.FAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetFAXNull()
            Me(Me.tableGalaxyInsertServiceCenter.FAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsCOMMENTSNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.COMMENTSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetCOMMENTSNull()
            Me(Me.tableGalaxyInsertServiceCenter.COMMENTSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsORIGINAL_DEALER_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.ORIGINAL_DEALER_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetORIGINAL_DEALER_CODENull()
            Me(Me.tableGalaxyInsertServiceCenter.ORIGINAL_DEALER_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsRATING_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.RATING_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetRATING_CODENull()
            Me(Me.tableGalaxyInsertServiceCenter.RATING_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsACCOUNT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.ACCOUNT_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetACCOUNT_NAMENull()
            Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsBANK_IDNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.BANK_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetBANK_IDNull()
            Me(Me.tableGalaxyInsertServiceCenter.BANK_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsACCOUNT_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.ACCOUNT_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetACCOUNT_NUMBERNull()
            Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsBANK_COUNTRY_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.BANK_COUNTRY_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetBANK_COUNTRY_CODENull()
            Me(Me.tableGalaxyInsertServiceCenter.BANK_COUNTRY_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsIBAN_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.IBAN_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetIBAN_NUMBERNull()
            Me(Me.tableGalaxyInsertServiceCenter.IBAN_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsSWIFT_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.SWIFT_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetSWIFT_CODENull()
            Me(Me.tableGalaxyInsertServiceCenter.SWIFT_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsACCOUNT_TYPENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.ACCOUNT_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetACCOUNT_TYPENull()
            Me(Me.tableGalaxyInsertServiceCenter.ACCOUNT_TYPEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsREGISTRATION_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyInsertServiceCenter.REGISTRATION_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetREGISTRATION_NUMBERNull()
            Me(Me.tableGalaxyInsertServiceCenter.REGISTRATION_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")> _
    Public Class GalaxyInsertServiceCenterRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As GalaxyInsertServiceCenterRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub New(ByVal row As GalaxyInsertServiceCenterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Row() As GalaxyInsertServiceCenterRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
