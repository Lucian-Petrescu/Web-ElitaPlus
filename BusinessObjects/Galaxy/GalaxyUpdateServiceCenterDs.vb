'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.832
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System

'
'This source code was auto-generated by xsd, Version=2.0.50727.42.
'

<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"), _
 Serializable(), _
 System.ComponentModel.DesignerCategoryAttribute("code"), _
 System.ComponentModel.ToolboxItem(True), _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 System.Xml.Serialization.XmlRootAttribute("GalaxyUpdateServiceCenterDs"), _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class GalaxyUpdateServiceCenterDs
    Inherits System.Data.DataSet

    Private tableGalaxyUpdateServiceCenter As GalaxyUpdateServiceCenterDataTable

    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("GalaxyUpdateServiceCenter")) Is Nothing) Then
                MyBase.Tables.Add(New GalaxyUpdateServiceCenterDataTable(ds.Tables("GalaxyUpdateServiceCenter")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     System.ComponentModel.Browsable(False), _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property GalaxyUpdateServiceCenter() As GalaxyUpdateServiceCenterDataTable
        Get
            Return Me.tableGalaxyUpdateServiceCenter
        End Get
    End Property

    <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     System.ComponentModel.BrowsableAttribute(True), _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(ByVal value As System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As GalaxyUpdateServiceCenterDs = CType(MyBase.Clone, GalaxyUpdateServiceCenterDs)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("GalaxyUpdateServiceCenter")) Is Nothing) Then
                MyBase.Tables.Add(New GalaxyUpdateServiceCenterDataTable(ds.Tables("GalaxyUpdateServiceCenter")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableGalaxyUpdateServiceCenter = CType(MyBase.Tables("GalaxyUpdateServiceCenter"), GalaxyUpdateServiceCenterDataTable)
        If (initTable = True) Then
            If (Not (Me.tableGalaxyUpdateServiceCenter) Is Nothing) Then
                Me.tableGalaxyUpdateServiceCenter.InitVars()
            End If
        End If
    End Sub

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Sub InitClass()
        Me.DataSetName = "GalaxyUpdateServiceCenterDs"
        Me.Prefix = ""
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableGalaxyUpdateServiceCenter = New GalaxyUpdateServiceCenterDataTable
        MyBase.Tables.Add(Me.tableGalaxyUpdateServiceCenter)
    End Sub

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Function ShouldSerializeGalaxyUpdateServiceCenter() As Boolean
        Return False
    End Function

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As GalaxyUpdateServiceCenterDs = New GalaxyUpdateServiceCenterDs
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function

    Public Delegate Sub GalaxyUpdateServiceCenterRowChangeEventHandler(ByVal sender As Object, ByVal e As GalaxyUpdateServiceCenterRowChangeEvent)

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"), _
     System.Serializable(), _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class GalaxyUpdateServiceCenterDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable

        Private columnSERVICE_CENTER_CODE As System.Data.DataColumn

        Private columnSERVICE_CENTER_NAME As System.Data.DataColumn

        Private columnADDRESS As System.Data.DataColumn

        Private columnCITY As System.Data.DataColumn

        Private columnREGION_CODE As System.Data.DataColumn

        Private columnPOSTAL_CODE As System.Data.DataColumn

        Private columnCOUNTRY_CODE As System.Data.DataColumn

        Private columnSTATUS_CODE As System.Data.DataColumn

        Private columnTAX_ID As System.Data.DataColumn

        Private columnSERVICE_TYPE As System.Data.DataColumn

        Private columnPHONE As System.Data.DataColumn

        Private columnFAX As System.Data.DataColumn

        Private columnCOMMENTS As System.Data.DataColumn

        Private columnORIGINAL_DEALER_CODE As System.Data.DataColumn

        Private columnRATING_CODE As System.Data.DataColumn

        Private columnPAYMENT_METHOD As System.Data.DataColumn

        Private columnACCOUNT_NAME As System.Data.DataColumn

        Private columnBANK_ID As System.Data.DataColumn

        Private columnIBAN_NUMBER As System.Data.DataColumn

        Private columnACCOUNT_NUMBER As System.Data.DataColumn

        Private columnBANK_COUNTRY_CODE As System.Data.DataColumn

        Private columnSWIFT_CODE As System.Data.DataColumn

        Private columnACCOUNT_TYPE As System.Data.DataColumn

        Private columnREGISTRATION_NUMBER As System.Data.DataColumn

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "GalaxyUpdateServiceCenter"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property SERVICE_CENTER_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSERVICE_CENTER_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property SERVICE_CENTER_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSERVICE_CENTER_NAME
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ADDRESSColumn() As System.Data.DataColumn
            Get
                Return Me.columnADDRESS
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property CITYColumn() As System.Data.DataColumn
            Get
                Return Me.columnCITY
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property REGION_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnREGION_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property POSTAL_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnPOSTAL_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property COUNTRY_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnCOUNTRY_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property STATUS_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSTATUS_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property TAX_IDColumn() As System.Data.DataColumn
            Get
                Return Me.columnTAX_ID
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property SERVICE_TYPEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSERVICE_TYPE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property PHONEColumn() As System.Data.DataColumn
            Get
                Return Me.columnPHONE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property FAXColumn() As System.Data.DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property COMMENTSColumn() As System.Data.DataColumn
            Get
                Return Me.columnCOMMENTS
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ORIGINAL_DEALER_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnORIGINAL_DEALER_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property RATING_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnRATING_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property PAYMENT_METHODColumn() As System.Data.DataColumn
            Get
                Return Me.columnPAYMENT_METHOD
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ACCOUNT_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_NAME
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property BANK_IDColumn() As System.Data.DataColumn
            Get
                Return Me.columnBANK_ID
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property IBAN_NUMBERColumn() As System.Data.DataColumn
            Get
                Return Me.columnIBAN_NUMBER
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ACCOUNT_NUMBERColumn() As System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_NUMBER
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property BANK_COUNTRY_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnBANK_COUNTRY_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property SWIFT_CODEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSWIFT_CODE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property ACCOUNT_TYPEColumn() As System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_TYPE
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property REGISTRATION_NUMBERColumn() As System.Data.DataColumn
            Get
                Return Me.columnREGISTRATION_NUMBER
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As GalaxyUpdateServiceCenterRow
            Get
                Return CType(Me.Rows(index), GalaxyUpdateServiceCenterRow)
            End Get
        End Property

        Public Event GalaxyUpdateServiceCenterRowChanging As GalaxyUpdateServiceCenterRowChangeEventHandler

        Public Event GalaxyUpdateServiceCenterRowChanged As GalaxyUpdateServiceCenterRowChangeEventHandler

        Public Event GalaxyUpdateServiceCenterRowDeleting As GalaxyUpdateServiceCenterRowChangeEventHandler

        Public Event GalaxyUpdateServiceCenterRowDeleted As GalaxyUpdateServiceCenterRowChangeEventHandler

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Sub AddGalaxyUpdateServiceCenterRow(ByVal row As GalaxyUpdateServiceCenterRow)
            Me.Rows.Add(row)
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Function AddGalaxyUpdateServiceCenterRow( _
                    ByVal SERVICE_CENTER_CODE As String, _
                    ByVal SERVICE_CENTER_NAME As String, _
                    ByVal ADDRESS As String, _
                    ByVal CITY As String, _
                    ByVal REGION_CODE As String, _
                    ByVal POSTAL_CODE As String, _
                    ByVal COUNTRY_CODE As String, _
                    ByVal STATUS_CODE As String, _
                    ByVal TAX_ID As String, _
                    ByVal SERVICE_TYPE As String, _
                    ByVal PHONE As String, _
                    ByVal FAX As String, _
                    ByVal COMMENTS As String, _
                    ByVal ORIGINAL_DEALER_CODE As String, _
                    ByVal RATING_CODE As String, _
                    ByVal PAYMENT_METHOD As String, _
                    ByVal ACCOUNT_NAME As String, _
                    ByVal BANK_ID As String, _
                    ByVal IBAN_NUMBER As String, _
                    ByVal ACCOUNT_NUMBER As String, _
                    ByVal BANK_COUNTRY_CODE As String, _
                    ByVal SWIFT_CODE As String, _
                    ByVal ACCOUNT_TYPE As String, _
                    ByVal REGISTRATION_NUMBER As String) As GalaxyUpdateServiceCenterRow
            Dim rowGalaxyUpdateServiceCenterRow As GalaxyUpdateServiceCenterRow = CType(Me.NewRow, GalaxyUpdateServiceCenterRow)
            rowGalaxyUpdateServiceCenterRow.ItemArray = New Object() {SERVICE_CENTER_CODE, SERVICE_CENTER_NAME, ADDRESS, CITY, REGION_CODE, POSTAL_CODE, COUNTRY_CODE, STATUS_CODE, TAX_ID, SERVICE_TYPE, PHONE, FAX, COMMENTS, ORIGINAL_DEALER_CODE, RATING_CODE, PAYMENT_METHOD, ACCOUNT_NAME, BANK_ID, IBAN_NUMBER, ACCOUNT_NUMBER, BANK_COUNTRY_CODE, SWIFT_CODE, ACCOUNT_TYPE, REGISTRATION_NUMBER}
            Me.Rows.Add(rowGalaxyUpdateServiceCenterRow)
            Return rowGalaxyUpdateServiceCenterRow
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As GalaxyUpdateServiceCenterDataTable = CType(MyBase.Clone, GalaxyUpdateServiceCenterDataTable)
            cln.InitVars()
            Return cln
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New GalaxyUpdateServiceCenterDataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub InitVars()
            Me.columnSERVICE_CENTER_CODE = MyBase.Columns("SERVICE_CENTER_CODE")
            Me.columnSERVICE_CENTER_NAME = MyBase.Columns("SERVICE_CENTER_NAME")
            Me.columnADDRESS = MyBase.Columns("ADDRESS")
            Me.columnCITY = MyBase.Columns("CITY")
            Me.columnREGION_CODE = MyBase.Columns("REGION_CODE")
            Me.columnPOSTAL_CODE = MyBase.Columns("POSTAL_CODE")
            Me.columnCOUNTRY_CODE = MyBase.Columns("COUNTRY_CODE")
            Me.columnSTATUS_CODE = MyBase.Columns("STATUS_CODE")
            Me.columnTAX_ID = MyBase.Columns("TAX_ID")
            Me.columnSERVICE_TYPE = MyBase.Columns("SERVICE_TYPE")
            Me.columnPHONE = MyBase.Columns("PHONE")
            Me.columnFAX = MyBase.Columns("FAX")
            Me.columnCOMMENTS = MyBase.Columns("COMMENTS")
            Me.columnORIGINAL_DEALER_CODE = MyBase.Columns("ORIGINAL_DEALER_CODE")
            Me.columnRATING_CODE = MyBase.Columns("RATING_CODE")
            Me.columnPAYMENT_METHOD = MyBase.Columns("PAYMENT_METHOD")
            Me.columnACCOUNT_NAME = MyBase.Columns("ACCOUNT_NAME")
            Me.columnBANK_ID = MyBase.Columns("BANK_ID")
            Me.columnIBAN_NUMBER = MyBase.Columns("IBAN_NUMBER")
            Me.columnACCOUNT_NUMBER = MyBase.Columns("ACCOUNT_NUMBER")
            Me.columnBANK_COUNTRY_CODE = MyBase.Columns("BANK_COUNTRY_CODE")
            Me.columnSWIFT_CODE = MyBase.Columns("SWIFT_CODE")
            Me.columnACCOUNT_TYPE = MyBase.Columns("ACCOUNT_TYPE")
            Me.columnREGISTRATION_NUMBER = MyBase.Columns("REGISTRATION_NUMBER")
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitClass()
            Me.columnSERVICE_CENTER_CODE = New System.Data.DataColumn("SERVICE_CENTER_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_CENTER_CODE)
            Me.columnSERVICE_CENTER_NAME = New System.Data.DataColumn("SERVICE_CENTER_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_CENTER_NAME)
            Me.columnADDRESS = New System.Data.DataColumn("ADDRESS", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS)
            Me.columnCITY = New System.Data.DataColumn("CITY", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCITY)
            Me.columnREGION_CODE = New System.Data.DataColumn("REGION_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGION_CODE)
            Me.columnPOSTAL_CODE = New System.Data.DataColumn("POSTAL_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTAL_CODE)
            Me.columnCOUNTRY_CODE = New System.Data.DataColumn("COUNTRY_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRY_CODE)
            Me.columnSTATUS_CODE = New System.Data.DataColumn("STATUS_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS_CODE)
            Me.columnTAX_ID = New System.Data.DataColumn("TAX_ID", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAX_ID)
            Me.columnSERVICE_TYPE = New System.Data.DataColumn("SERVICE_TYPE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_TYPE)
            Me.columnPHONE = New System.Data.DataColumn("PHONE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHONE)
            Me.columnFAX = New System.Data.DataColumn("FAX", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX)
            Me.columnCOMMENTS = New System.Data.DataColumn("COMMENTS", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMMENTS)
            Me.columnORIGINAL_DEALER_CODE = New System.Data.DataColumn("ORIGINAL_DEALER_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGINAL_DEALER_CODE)
            Me.columnRATING_CODE = New System.Data.DataColumn("RATING_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATING_CODE)
            Me.columnPAYMENT_METHOD = New System.Data.DataColumn("PAYMENT_METHOD", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENT_METHOD)
            Me.columnACCOUNT_NAME = New System.Data.DataColumn("ACCOUNT_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_NAME)
            Me.columnBANK_ID = New System.Data.DataColumn("BANK_ID", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_ID)
            Me.columnIBAN_NUMBER = New System.Data.DataColumn("IBAN_NUMBER", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIBAN_NUMBER)
            Me.columnACCOUNT_NUMBER = New System.Data.DataColumn("ACCOUNT_NUMBER", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_NUMBER)
            Me.columnBANK_COUNTRY_CODE = New System.Data.DataColumn("BANK_COUNTRY_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_COUNTRY_CODE)
            Me.columnSWIFT_CODE = New System.Data.DataColumn("SWIFT_CODE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSWIFT_CODE)
            Me.columnACCOUNT_TYPE = New System.Data.DataColumn("ACCOUNT_TYPE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_TYPE)
            Me.columnREGISTRATION_NUMBER = New System.Data.DataColumn("REGISTRATION_NUMBER", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGISTRATION_NUMBER)
            Me.columnSERVICE_CENTER_CODE.AllowDBNull = False
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function NewGalaxyUpdateServiceCenterRow() As GalaxyUpdateServiceCenterRow
            Return CType(Me.NewRow, GalaxyUpdateServiceCenterRow)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New GalaxyUpdateServiceCenterRow(builder)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(GalaxyUpdateServiceCenterRow)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GalaxyUpdateServiceCenterRowChangedEvent) Is Nothing) Then
                RaiseEvent GalaxyUpdateServiceCenterRowChanged(Me, New GalaxyUpdateServiceCenterRowChangeEvent(CType(e.Row, GalaxyUpdateServiceCenterRow), e.Action))
            End If
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GalaxyUpdateServiceCenterRowChangingEvent) Is Nothing) Then
                RaiseEvent GalaxyUpdateServiceCenterRowChanging(Me, New GalaxyUpdateServiceCenterRowChangeEvent(CType(e.Row, GalaxyUpdateServiceCenterRow), e.Action))
            End If
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GalaxyUpdateServiceCenterRowDeletedEvent) Is Nothing) Then
                RaiseEvent GalaxyUpdateServiceCenterRowDeleted(Me, New GalaxyUpdateServiceCenterRowChangeEvent(CType(e.Row, GalaxyUpdateServiceCenterRow), e.Action))
            End If
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GalaxyUpdateServiceCenterRowDeletingEvent) Is Nothing) Then
                RaiseEvent GalaxyUpdateServiceCenterRowDeleting(Me, New GalaxyUpdateServiceCenterRowChangeEvent(CType(e.Row, GalaxyUpdateServiceCenterRow), e.Action))
            End If
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub RemoveGalaxyUpdateServiceCenterRow(ByVal row As GalaxyUpdateServiceCenterRow)
            Me.Rows.Remove(row)
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As GalaxyUpdateServiceCenterDs = New GalaxyUpdateServiceCenterDs
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GalaxyUpdateServiceCenterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")> _
    Partial Public Class GalaxyUpdateServiceCenterRow
        Inherits System.Data.DataRow

        Private tableGalaxyUpdateServiceCenter As GalaxyUpdateServiceCenterDataTable

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGalaxyUpdateServiceCenter = CType(Me.Table, GalaxyUpdateServiceCenterDataTable)
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property SERVICE_CENTER_CODE() As String
            Get
                Return CType(Me(Me.tableGalaxyUpdateServiceCenter.SERVICE_CENTER_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.SERVICE_CENTER_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property SERVICE_CENTER_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.SERVICE_CENTER_NAMEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'SERVICE_CENTER_NAME' in table 'GalaxyUpdateServiceCenter' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.SERVICE_CENTER_NAMEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ADDRESS() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.ADDRESSColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'ADDRESS' in table 'GalaxyUpdateServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.ADDRESSColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property CITY() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.CITYColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CITY' in table 'GalaxyUpdateServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.CITYColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property REGION_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.REGION_CODEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'REGION_CODE' in table 'GalaxyUpdateServiceCenter' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.REGION_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property POSTAL_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.POSTAL_CODEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'POSTAL_CODE' in table 'GalaxyUpdateServiceCenter' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.POSTAL_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property COUNTRY_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.COUNTRY_CODEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'COUNTRY_CODE' in table 'GalaxyUpdateServiceCenter' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.COUNTRY_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property STATUS_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.STATUS_CODEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'STATUS_CODE' in table 'GalaxyUpdateServiceCenter' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.STATUS_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property TAX_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.TAX_IDColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'TAX_ID' in table 'GalaxyUpdateServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.TAX_IDColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property SERVICE_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.SERVICE_TYPEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'SERVICE_TYPE' in table 'GalaxyUpdateServiceCenter' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.SERVICE_TYPEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property PHONE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.PHONEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PHONE' in table 'GalaxyUpdateServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.PHONEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property FAX() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.FAXColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'FAX' in table 'GalaxyUpdateServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.FAXColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property COMMENTS() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.COMMENTSColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'COMMENTS' in table 'GalaxyUpdateServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.COMMENTSColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ORIGINAL_DEALER_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.ORIGINAL_DEALER_CODEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'ORIGINAL_DEALER_CODE' in table 'GalaxyUpdateServiceCenter' " & _
                            "is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.ORIGINAL_DEALER_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property RATING_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.RATING_CODEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'RATING_CODE' in table 'GalaxyUpdateServiceCenter' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.RATING_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property PAYMENT_METHOD() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.PAYMENT_METHODColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PAYMENT_METHOD' in table 'GalaxyUpdateServiceCenter' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.PAYMENT_METHODColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ACCOUNT_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_NAMEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'ACCOUNT_NAME' in table 'GalaxyUpdateServiceCenter' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_NAMEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property BANK_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.BANK_IDColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'BANK_ID' in table 'GalaxyUpdateServiceCenter' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.BANK_IDColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property IBAN_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.IBAN_NUMBERColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'IBAN_NUMBER' in table 'GalaxyUpdateServiceCenter' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.IBAN_NUMBERColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ACCOUNT_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_NUMBERColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'ACCOUNT_NUMBER' in table 'GalaxyUpdateServiceCenter' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_NUMBERColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property BANK_COUNTRY_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.BANK_COUNTRY_CODEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'BANK_COUNTRY_CODE' in table 'GalaxyUpdateServiceCenter' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.BANK_COUNTRY_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property SWIFT_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.SWIFT_CODEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'SWIFT_CODE' in table 'GalaxyUpdateServiceCenter' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.SWIFT_CODEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ACCOUNT_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_TYPEColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'ACCOUNT_TYPE' in table 'GalaxyUpdateServiceCenter' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_TYPEColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property REGISTRATION_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableGalaxyUpdateServiceCenter.REGISTRATION_NUMBERColumn), String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'REGISTRATION_NUMBER' in table 'GalaxyUpdateServiceCenter' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGalaxyUpdateServiceCenter.REGISTRATION_NUMBERColumn) = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsSERVICE_CENTER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.SERVICE_CENTER_NAMEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetSERVICE_CENTER_NAMENull()
            Me(Me.tableGalaxyUpdateServiceCenter.SERVICE_CENTER_NAMEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.ADDRESSColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetADDRESSNull()
            Me(Me.tableGalaxyUpdateServiceCenter.ADDRESSColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsCITYNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.CITYColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetCITYNull()
            Me(Me.tableGalaxyUpdateServiceCenter.CITYColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsREGION_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.REGION_CODEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetREGION_CODENull()
            Me(Me.tableGalaxyUpdateServiceCenter.REGION_CODEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsPOSTAL_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.POSTAL_CODEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetPOSTAL_CODENull()
            Me(Me.tableGalaxyUpdateServiceCenter.POSTAL_CODEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsCOUNTRY_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.COUNTRY_CODEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetCOUNTRY_CODENull()
            Me(Me.tableGalaxyUpdateServiceCenter.COUNTRY_CODEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsSTATUS_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.STATUS_CODEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetSTATUS_CODENull()
            Me(Me.tableGalaxyUpdateServiceCenter.STATUS_CODEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsTAX_IDNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.TAX_IDColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetTAX_IDNull()
            Me(Me.tableGalaxyUpdateServiceCenter.TAX_IDColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsSERVICE_TYPENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.SERVICE_TYPEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetSERVICE_TYPENull()
            Me(Me.tableGalaxyUpdateServiceCenter.SERVICE_TYPEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsPHONENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.PHONEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetPHONENull()
            Me(Me.tableGalaxyUpdateServiceCenter.PHONEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsFAXNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.FAXColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetFAXNull()
            Me(Me.tableGalaxyUpdateServiceCenter.FAXColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsCOMMENTSNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.COMMENTSColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetCOMMENTSNull()
            Me(Me.tableGalaxyUpdateServiceCenter.COMMENTSColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsORIGINAL_DEALER_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.ORIGINAL_DEALER_CODEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetORIGINAL_DEALER_CODENull()
            Me(Me.tableGalaxyUpdateServiceCenter.ORIGINAL_DEALER_CODEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsRATING_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.RATING_CODEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetRATING_CODENull()
            Me(Me.tableGalaxyUpdateServiceCenter.RATING_CODEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsPAYMENT_METHODNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.PAYMENT_METHODColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetPAYMENT_METHODNull()
            Me(Me.tableGalaxyUpdateServiceCenter.PAYMENT_METHODColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsACCOUNT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_NAMEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetACCOUNT_NAMENull()
            Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_NAMEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsBANK_IDNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.BANK_IDColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetBANK_IDNull()
            Me(Me.tableGalaxyUpdateServiceCenter.BANK_IDColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsIBAN_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.IBAN_NUMBERColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetIBAN_NUMBERNull()
            Me(Me.tableGalaxyUpdateServiceCenter.IBAN_NUMBERColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsACCOUNT_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_NUMBERColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetACCOUNT_NUMBERNull()
            Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_NUMBERColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsBANK_COUNTRY_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.BANK_COUNTRY_CODEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetBANK_COUNTRY_CODENull()
            Me(Me.tableGalaxyUpdateServiceCenter.BANK_COUNTRY_CODEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsSWIFT_CODENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.SWIFT_CODEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetSWIFT_CODENull()
            Me(Me.tableGalaxyUpdateServiceCenter.SWIFT_CODEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsACCOUNT_TYPENull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_TYPEColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetACCOUNT_TYPENull()
            Me(Me.tableGalaxyUpdateServiceCenter.ACCOUNT_TYPEColumn) = System.Convert.DBNull
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsREGISTRATION_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableGalaxyUpdateServiceCenter.REGISTRATION_NUMBERColumn)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetREGISTRATION_NUMBERNull()
            Me(Me.tableGalaxyUpdateServiceCenter.REGISTRATION_NUMBERColumn) = System.Convert.DBNull
        End Sub
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")> _
    Public Class GalaxyUpdateServiceCenterRowChangeEvent
        Inherits System.EventArgs

        Private eventRow As GalaxyUpdateServiceCenterRow

        Private eventAction As System.Data.DataRowAction

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub New(ByVal row As GalaxyUpdateServiceCenterRow, ByVal action As System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Row() As GalaxyUpdateServiceCenterRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
