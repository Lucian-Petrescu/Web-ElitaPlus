'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1008
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'
'This source code was auto-generated by xsd, Version=4.0.30319.1.
'

'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("CancelCertificateDs"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class CancelCertificateDs
    Inherits Global.System.Data.DataSet

    Private tableCancelCertificate As CancelCertificateDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CancelCertificate")) Is Nothing) Then
                MyBase.Tables.Add(New CancelCertificateDataTable(ds.Tables("CancelCertificate")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property CancelCertificate() As CancelCertificateDataTable
        Get
            Return Me.tableCancelCertificate
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(ByVal value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As CancelCertificateDs = CType(MyBase.Clone, CancelCertificateDs)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CancelCertificate")) Is Nothing) Then
                MyBase.Tables.Add(New CancelCertificateDataTable(ds.Tables("CancelCertificate")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCancelCertificate = CType(MyBase.Tables("CancelCertificate"), CancelCertificateDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCancelCertificate) Is Nothing) Then
                Me.tableCancelCertificate.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "CancelCertificateDs"
        Me.Prefix = ""
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCancelCertificate = New CancelCertificateDataTable()
        MyBase.Tables.Add(Me.tableCancelCertificate)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCancelCertificate() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As CancelCertificateDs = New CancelCertificateDs()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CancelCertificateRowChangeEventHandler(ByVal sender As Object, ByVal e As CancelCertificateRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CancelCertificateDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnDEALER_CODE As Global.System.Data.DataColumn

        Private columnCERTIFICATE_NO As Global.System.Data.DataColumn

        Private columnSOURCE As Global.System.Data.DataColumn

        Private columnCANCELLATION_DATE As Global.System.Data.DataColumn

        Private columnPAYMENT_METHOD_CODE As Global.System.Data.DataColumn

        Private columnACCOUNT_NAME As Global.System.Data.DataColumn

        Private columnBANK_ID As Global.System.Data.DataColumn

        Private columnACCOUNT_NUMBER As Global.System.Data.DataColumn

        Private columnSWIFT_CODE As Global.System.Data.DataColumn

        Private columnIBAN_NUMBER As Global.System.Data.DataColumn

        Private columnACCOUNT_TYPE_CODE As Global.System.Data.DataColumn

        Private columnPAYMENT_REASON_CODE As Global.System.Data.DataColumn

        Private columnINVOICE_NUMBER As Global.System.Data.DataColumn

        Private columnCANCEL_ALL_BY_INVOICE As Global.System.Data.DataColumn

        Private columnCANCELLATION_REASON_CODE As Global.System.Data.DataColumn

        Private columnREFUND_AMOUNT As Global.System.Data.DataColumn

        Private columnCOMMENT_TYPE_CODE As Global.System.Data.DataColumn

        Private columnCOMMENTS As Global.System.Data.DataColumn

        Private columnBANK_NAME As Global.System.Data.DataColumn

        Private columnACCOUNT_DIGIT As Global.System.Data.DataColumn

        Private columnBRANCH_DIGIT As Global.System.Data.DataColumn

        Private columnBRANCH_NUMBER As Global.System.Data.DataColumn

        Private columnACTION As Global.System.Data.DataColumn

        Private columnINSTALLMENTS_PAID As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CancelCertificate"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DEALER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEALER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CERTIFICATE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATE_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SOURCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOURCE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CANCELLATION_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANCELLATION_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PAYMENT_METHOD_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENT_METHOD_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACCOUNT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BANK_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANK_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACCOUNT_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SWIFT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSWIFT_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IBAN_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIBAN_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACCOUNT_TYPE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_TYPE_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PAYMENT_REASON_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENT_REASON_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INVOICE_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVOICE_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CANCEL_ALL_BY_INVOICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANCEL_ALL_BY_INVOICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CANCELLATION_REASON_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANCELLATION_REASON_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REFUND_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFUND_AMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMMENT_TYPE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMMENT_TYPE_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMMENTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMMENTS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BANK_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANK_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACCOUNT_DIGITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_DIGIT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BRANCH_DIGITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANCH_DIGIT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BRANCH_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANCH_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INSTALLMENTS_PAIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTALLMENTS_PAID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CancelCertificateRow
            Get
                Return CType(Me.Rows(index), CancelCertificateRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CancelCertificateRowChanging As CancelCertificateRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CancelCertificateRowChanged As CancelCertificateRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CancelCertificateRowDeleting As CancelCertificateRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CancelCertificateRowDeleted As CancelCertificateRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCancelCertificateRow(ByVal row As CancelCertificateRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCancelCertificateRow( _
                    ByVal DEALER_CODE As String, _
                    ByVal CERTIFICATE_NO As String, _
                    ByVal SOURCE As String, _
                    ByVal CANCELLATION_DATE As Date, _
                    ByVal PAYMENT_METHOD_CODE As String, _
                    ByVal ACCOUNT_NAME As String, _
                    ByVal BANK_ID As String, _
                    ByVal ACCOUNT_NUMBER As String, _
                    ByVal SWIFT_CODE As String, _
                    ByVal IBAN_NUMBER As String, _
                    ByVal ACCOUNT_TYPE_CODE As String, _
                    ByVal PAYMENT_REASON_CODE As String, _
                    ByVal INVOICE_NUMBER As String, _
                    ByVal CANCEL_ALL_BY_INVOICE As String, _
                    ByVal CANCELLATION_REASON_CODE As String, _
                    ByVal REFUND_AMOUNT As Decimal, _
                    ByVal COMMENT_TYPE_CODE As String, _
                    ByVal COMMENTS As String, _
                    ByVal BANK_NAME As Long, _
                    ByVal ACCOUNT_DIGIT As Long, _
                    ByVal BRANCH_DIGIT As Long, _
                    ByVal BRANCH_NUMBER As Long, _
                    ByVal ACTION As String, _
                    ByVal INSTALLMENTS_PAID As Long) As CancelCertificateRow
            Dim rowCancelCertificateRow As CancelCertificateRow = CType(Me.NewRow, CancelCertificateRow)
            Dim columnValuesArray() As Object = New Object() {DEALER_CODE, CERTIFICATE_NO, SOURCE, CANCELLATION_DATE, PAYMENT_METHOD_CODE, ACCOUNT_NAME, BANK_ID, ACCOUNT_NUMBER, SWIFT_CODE, IBAN_NUMBER, ACCOUNT_TYPE_CODE, PAYMENT_REASON_CODE, INVOICE_NUMBER, CANCEL_ALL_BY_INVOICE, CANCELLATION_REASON_CODE, REFUND_AMOUNT, COMMENT_TYPE_CODE, COMMENTS, BANK_NAME, ACCOUNT_DIGIT, BRANCH_DIGIT, BRANCH_NUMBER, ACTION, INSTALLMENTS_PAID}
            rowCancelCertificateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCancelCertificateRow)
            Return rowCancelCertificateRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CancelCertificateDataTable = CType(MyBase.Clone, CancelCertificateDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CancelCertificateDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnDEALER_CODE = MyBase.Columns("DEALER_CODE")
            Me.columnCERTIFICATE_NO = MyBase.Columns("CERTIFICATE_NO")
            Me.columnSOURCE = MyBase.Columns("SOURCE")
            Me.columnCANCELLATION_DATE = MyBase.Columns("CANCELLATION_DATE")
            Me.columnPAYMENT_METHOD_CODE = MyBase.Columns("PAYMENT_METHOD_CODE")
            Me.columnACCOUNT_NAME = MyBase.Columns("ACCOUNT_NAME")
            Me.columnBANK_ID = MyBase.Columns("BANK_ID")
            Me.columnACCOUNT_NUMBER = MyBase.Columns("ACCOUNT_NUMBER")
            Me.columnSWIFT_CODE = MyBase.Columns("SWIFT_CODE")
            Me.columnIBAN_NUMBER = MyBase.Columns("IBAN_NUMBER")
            Me.columnACCOUNT_TYPE_CODE = MyBase.Columns("ACCOUNT_TYPE_CODE")
            Me.columnPAYMENT_REASON_CODE = MyBase.Columns("PAYMENT_REASON_CODE")
            Me.columnINVOICE_NUMBER = MyBase.Columns("INVOICE_NUMBER")
            Me.columnCANCEL_ALL_BY_INVOICE = MyBase.Columns("CANCEL_ALL_BY_INVOICE")
            Me.columnCANCELLATION_REASON_CODE = MyBase.Columns("CANCELLATION_REASON_CODE")
            Me.columnREFUND_AMOUNT = MyBase.Columns("REFUND_AMOUNT")
            Me.columnCOMMENT_TYPE_CODE = MyBase.Columns("COMMENT_TYPE_CODE")
            Me.columnCOMMENTS = MyBase.Columns("COMMENTS")
            Me.columnBANK_NAME = MyBase.Columns("BANK_NAME")
            Me.columnACCOUNT_DIGIT = MyBase.Columns("ACCOUNT_DIGIT")
            Me.columnBRANCH_DIGIT = MyBase.Columns("BRANCH_DIGIT")
            Me.columnBRANCH_NUMBER = MyBase.Columns("BRANCH_NUMBER")
            Me.columnACTION = MyBase.Columns("ACTION")
            Me.columnINSTALLMENTS_PAID = MyBase.Columns("INSTALLMENTS_PAID")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnDEALER_CODE = New Global.System.Data.DataColumn("DEALER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEALER_CODE)
            Me.columnCERTIFICATE_NO = New Global.System.Data.DataColumn("CERTIFICATE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATE_NO)
            Me.columnSOURCE = New Global.System.Data.DataColumn("SOURCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOURCE)
            Me.columnCANCELLATION_DATE = New Global.System.Data.DataColumn("CANCELLATION_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANCELLATION_DATE)
            Me.columnPAYMENT_METHOD_CODE = New Global.System.Data.DataColumn("PAYMENT_METHOD_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENT_METHOD_CODE)
            Me.columnACCOUNT_NAME = New Global.System.Data.DataColumn("ACCOUNT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_NAME)
            Me.columnBANK_ID = New Global.System.Data.DataColumn("BANK_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_ID)
            Me.columnACCOUNT_NUMBER = New Global.System.Data.DataColumn("ACCOUNT_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_NUMBER)
            Me.columnSWIFT_CODE = New Global.System.Data.DataColumn("SWIFT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSWIFT_CODE)
            Me.columnIBAN_NUMBER = New Global.System.Data.DataColumn("IBAN_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIBAN_NUMBER)
            Me.columnACCOUNT_TYPE_CODE = New Global.System.Data.DataColumn("ACCOUNT_TYPE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_TYPE_CODE)
            Me.columnPAYMENT_REASON_CODE = New Global.System.Data.DataColumn("PAYMENT_REASON_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENT_REASON_CODE)
            Me.columnINVOICE_NUMBER = New Global.System.Data.DataColumn("INVOICE_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVOICE_NUMBER)
            Me.columnCANCEL_ALL_BY_INVOICE = New Global.System.Data.DataColumn("CANCEL_ALL_BY_INVOICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANCEL_ALL_BY_INVOICE)
            Me.columnCANCELLATION_REASON_CODE = New Global.System.Data.DataColumn("CANCELLATION_REASON_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANCELLATION_REASON_CODE)
            Me.columnREFUND_AMOUNT = New Global.System.Data.DataColumn("REFUND_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFUND_AMOUNT)
            Me.columnCOMMENT_TYPE_CODE = New Global.System.Data.DataColumn("COMMENT_TYPE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMMENT_TYPE_CODE)
            Me.columnCOMMENTS = New Global.System.Data.DataColumn("COMMENTS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMMENTS)
            Me.columnBANK_NAME = New Global.System.Data.DataColumn("BANK_NAME", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_NAME)
            Me.columnACCOUNT_DIGIT = New Global.System.Data.DataColumn("ACCOUNT_DIGIT", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_DIGIT)
            Me.columnBRANCH_DIGIT = New Global.System.Data.DataColumn("BRANCH_DIGIT", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANCH_DIGIT)
            Me.columnBRANCH_NUMBER = New Global.System.Data.DataColumn("BRANCH_NUMBER", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANCH_NUMBER)
            Me.columnACTION = New Global.System.Data.DataColumn("ACTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTION)
            Me.columnINSTALLMENTS_PAID = New Global.System.Data.DataColumn("INSTALLMENTS_PAID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTALLMENTS_PAID)
            Me.columnDEALER_CODE.AllowDBNull = False
            Me.columnCERTIFICATE_NO.AllowDBNull = False
            Me.columnSOURCE.AllowDBNull = False
            Me.columnCANCELLATION_DATE.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCancelCertificateRow() As CancelCertificateRow
            Return CType(Me.NewRow, CancelCertificateRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CancelCertificateRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CancelCertificateRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CancelCertificateRowChangedEvent) Is Nothing) Then
                RaiseEvent CancelCertificateRowChanged(Me, New CancelCertificateRowChangeEvent(CType(e.Row, CancelCertificateRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CancelCertificateRowChangingEvent) Is Nothing) Then
                RaiseEvent CancelCertificateRowChanging(Me, New CancelCertificateRowChangeEvent(CType(e.Row, CancelCertificateRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CancelCertificateRowDeletedEvent) Is Nothing) Then
                RaiseEvent CancelCertificateRowDeleted(Me, New CancelCertificateRowChangeEvent(CType(e.Row, CancelCertificateRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CancelCertificateRowDeletingEvent) Is Nothing) Then
                RaiseEvent CancelCertificateRowDeleting(Me, New CancelCertificateRowChangeEvent(CType(e.Row, CancelCertificateRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCancelCertificateRow(ByVal row As CancelCertificateRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CancelCertificateDs = New CancelCertificateDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CancelCertificateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CancelCertificateRow
        Inherits Global.System.Data.DataRow

        Private tableCancelCertificate As CancelCertificateDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCancelCertificate = CType(Me.Table, CancelCertificateDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DEALER_CODE() As String
            Get
                Return CType(Me(Me.tableCancelCertificate.DEALER_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.DEALER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CERTIFICATE_NO() As String
            Get
                Return CType(Me(Me.tableCancelCertificate.CERTIFICATE_NOColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.CERTIFICATE_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SOURCE() As String
            Get
                Return CType(Me(Me.tableCancelCertificate.SOURCEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.SOURCEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CANCELLATION_DATE() As Date
            Get
                Return CType(Me(Me.tableCancelCertificate.CANCELLATION_DATEColumn), Date)
            End Get
            Set(ByVal value As Date)
                Me(Me.tableCancelCertificate.CANCELLATION_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAYMENT_METHOD_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.PAYMENT_METHOD_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAYMENT_METHOD_CODE' in table 'CancelCertificate' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.PAYMENT_METHOD_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACCOUNT_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.ACCOUNT_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_NAME' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.ACCOUNT_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BANK_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.BANK_IDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANK_ID' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.BANK_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACCOUNT_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.ACCOUNT_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_NUMBER' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.ACCOUNT_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SWIFT_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.SWIFT_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SWIFT_CODE' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.SWIFT_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IBAN_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.IBAN_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IBAN_NUMBER' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.IBAN_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACCOUNT_TYPE_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.ACCOUNT_TYPE_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_TYPE_CODE' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.ACCOUNT_TYPE_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAYMENT_REASON_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.PAYMENT_REASON_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAYMENT_REASON_CODE' in table 'CancelCertificate' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.PAYMENT_REASON_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INVOICE_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.INVOICE_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVOICE_NUMBER' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.INVOICE_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CANCEL_ALL_BY_INVOICE() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.CANCEL_ALL_BY_INVOICEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANCEL_ALL_BY_INVOICE' in table 'CancelCertificate' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.CANCEL_ALL_BY_INVOICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CANCELLATION_REASON_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.CANCELLATION_REASON_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANCELLATION_REASON_CODE' in table 'CancelCertificate' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.CANCELLATION_REASON_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REFUND_AMOUNT() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.REFUND_AMOUNTColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REFUND_AMOUNT' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableCancelCertificate.REFUND_AMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMMENT_TYPE_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.COMMENT_TYPE_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMMENT_TYPE_CODE' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.COMMENT_TYPE_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMMENTS() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.COMMENTSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMMENTS' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.COMMENTSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BANK_NAME() As Long
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.BANK_NAMEColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANK_NAME' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Long)
                Me(Me.tableCancelCertificate.BANK_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACCOUNT_DIGIT() As Long
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.ACCOUNT_DIGITColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_DIGIT' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Long)
                Me(Me.tableCancelCertificate.ACCOUNT_DIGITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BRANCH_DIGIT() As Long
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.BRANCH_DIGITColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANCH_DIGIT' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Long)
                Me(Me.tableCancelCertificate.BRANCH_DIGITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BRANCH_NUMBER() As Long
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.BRANCH_NUMBERColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANCH_NUMBER' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Long)
                Me(Me.tableCancelCertificate.BRANCH_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTION() As String
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.ACTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTION' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCancelCertificate.ACTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INSTALLMENTS_PAID() As Long
            Get
                Try
                    Return CType(Me(Me.tableCancelCertificate.INSTALLMENTS_PAIDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INSTALLMENTS_PAID' in table 'CancelCertificate' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Long)
                Me(Me.tableCancelCertificate.INSTALLMENTS_PAIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPAYMENT_METHOD_CODENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.PAYMENT_METHOD_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPAYMENT_METHOD_CODENull()
            Me(Me.tableCancelCertificate.PAYMENT_METHOD_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACCOUNT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.ACCOUNT_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACCOUNT_NAMENull()
            Me(Me.tableCancelCertificate.ACCOUNT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBANK_IDNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.BANK_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBANK_IDNull()
            Me(Me.tableCancelCertificate.BANK_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACCOUNT_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.ACCOUNT_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACCOUNT_NUMBERNull()
            Me(Me.tableCancelCertificate.ACCOUNT_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSWIFT_CODENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.SWIFT_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSWIFT_CODENull()
            Me(Me.tableCancelCertificate.SWIFT_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIBAN_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.IBAN_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIBAN_NUMBERNull()
            Me(Me.tableCancelCertificate.IBAN_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACCOUNT_TYPE_CODENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.ACCOUNT_TYPE_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACCOUNT_TYPE_CODENull()
            Me(Me.tableCancelCertificate.ACCOUNT_TYPE_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPAYMENT_REASON_CODENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.PAYMENT_REASON_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPAYMENT_REASON_CODENull()
            Me(Me.tableCancelCertificate.PAYMENT_REASON_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINVOICE_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.INVOICE_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINVOICE_NUMBERNull()
            Me(Me.tableCancelCertificate.INVOICE_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCANCEL_ALL_BY_INVOICENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.CANCEL_ALL_BY_INVOICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCANCEL_ALL_BY_INVOICENull()
            Me(Me.tableCancelCertificate.CANCEL_ALL_BY_INVOICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCANCELLATION_REASON_CODENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.CANCELLATION_REASON_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCANCELLATION_REASON_CODENull()
            Me(Me.tableCancelCertificate.CANCELLATION_REASON_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREFUND_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.REFUND_AMOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREFUND_AMOUNTNull()
            Me(Me.tableCancelCertificate.REFUND_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMMENT_TYPE_CODENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.COMMENT_TYPE_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMMENT_TYPE_CODENull()
            Me(Me.tableCancelCertificate.COMMENT_TYPE_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMMENTSNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.COMMENTSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMMENTSNull()
            Me(Me.tableCancelCertificate.COMMENTSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBANK_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.BANK_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBANK_NAMENull()
            Me(Me.tableCancelCertificate.BANK_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACCOUNT_DIGITNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.ACCOUNT_DIGITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACCOUNT_DIGITNull()
            Me(Me.tableCancelCertificate.ACCOUNT_DIGITColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBRANCH_DIGITNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.BRANCH_DIGITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBRANCH_DIGITNull()
            Me(Me.tableCancelCertificate.BRANCH_DIGITColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBRANCH_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.BRANCH_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBRANCH_NUMBERNull()
            Me(Me.tableCancelCertificate.BRANCH_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTIONNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.ACTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTIONNull()
            Me(Me.tableCancelCertificate.ACTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINSTALLMENTS_PAIDNull() As Boolean
            Return Me.IsNull(Me.tableCancelCertificate.INSTALLMENTS_PAIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINSTALLMENTS_PAIDNull()
            Me(Me.tableCancelCertificate.INSTALLMENTS_PAIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CancelCertificateRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CancelCertificateRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CancelCertificateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CancelCertificateRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
