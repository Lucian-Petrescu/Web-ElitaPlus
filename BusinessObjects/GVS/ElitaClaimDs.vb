'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.225
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'
'This source code was auto-generated by xsd, Version=4.0.30319.1.
'

'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("ElitaClaimDs"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class ElitaClaimDs
    Inherits Global.System.Data.DataSet

    Private tableElitaClaim As ElitaClaimDataTable

    Private tableTRANSACTION_HEADER As TRANSACTION_HEADERDataTable

    Private tableTRANSACTION_DATA_RECORD As TRANSACTION_DATA_RECORDDataTable

    Private tableEXTENDED_CLAIM_STATUS As EXTENDED_CLAIM_STATUSDataTable

    Private tablePARTS_LIST As PARTS_LISTDataTable

    Private tableFOLLOWUP As FOLLOWUPDataTable

    Private relationElitaClaim_TRANSACTION_HEADER As Global.System.Data.DataRelation

    Private relationElitaClaim_TRANSACTION_DATA_RECORD As Global.System.Data.DataRelation

    Private relationTRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS As Global.System.Data.DataRelation

    Private relationTRANSACTION_DATA_RECORD_PARTS_LIST As Global.System.Data.DataRelation

    Private relationTRANSACTION_DATA_RECORD_FOLLOWUP As Global.System.Data.DataRelation

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ElitaClaim")) Is Nothing) Then
                MyBase.Tables.Add(New ElitaClaimDataTable(ds.Tables("ElitaClaim")))
            End If
            If (Not (ds.Tables("TRANSACTION_HEADER")) Is Nothing) Then
                MyBase.Tables.Add(New TRANSACTION_HEADERDataTable(ds.Tables("TRANSACTION_HEADER")))
            End If
            If (Not (ds.Tables("TRANSACTION_DATA_RECORD")) Is Nothing) Then
                MyBase.Tables.Add(New TRANSACTION_DATA_RECORDDataTable(ds.Tables("TRANSACTION_DATA_RECORD")))
            End If
            If (Not (ds.Tables("EXTENDED_CLAIM_STATUS")) Is Nothing) Then
                MyBase.Tables.Add(New EXTENDED_CLAIM_STATUSDataTable(ds.Tables("EXTENDED_CLAIM_STATUS")))
            End If
            If (Not (ds.Tables("PARTS_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New PARTS_LISTDataTable(ds.Tables("PARTS_LIST")))
            End If
            If (Not (ds.Tables("FOLLOWUP")) Is Nothing) Then
                MyBase.Tables.Add(New FOLLOWUPDataTable(ds.Tables("FOLLOWUP")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property ElitaClaim() As ElitaClaimDataTable
        Get
            Return Me.tableElitaClaim
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property TRANSACTION_HEADER() As TRANSACTION_HEADERDataTable
        Get
            Return Me.tableTRANSACTION_HEADER
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property TRANSACTION_DATA_RECORD() As TRANSACTION_DATA_RECORDDataTable
        Get
            Return Me.tableTRANSACTION_DATA_RECORD
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property EXTENDED_CLAIM_STATUS() As EXTENDED_CLAIM_STATUSDataTable
        Get
            Return Me.tableEXTENDED_CLAIM_STATUS
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property PARTS_LIST() As PARTS_LISTDataTable
        Get
            Return Me.tablePARTS_LIST
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FOLLOWUP() As FOLLOWUPDataTable
        Get
            Return Me.tableFOLLOWUP
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(ByVal value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ElitaClaimDs = CType(MyBase.Clone, ElitaClaimDs)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ElitaClaim")) Is Nothing) Then
                MyBase.Tables.Add(New ElitaClaimDataTable(ds.Tables("ElitaClaim")))
            End If
            If (Not (ds.Tables("TRANSACTION_HEADER")) Is Nothing) Then
                MyBase.Tables.Add(New TRANSACTION_HEADERDataTable(ds.Tables("TRANSACTION_HEADER")))
            End If
            If (Not (ds.Tables("TRANSACTION_DATA_RECORD")) Is Nothing) Then
                MyBase.Tables.Add(New TRANSACTION_DATA_RECORDDataTable(ds.Tables("TRANSACTION_DATA_RECORD")))
            End If
            If (Not (ds.Tables("EXTENDED_CLAIM_STATUS")) Is Nothing) Then
                MyBase.Tables.Add(New EXTENDED_CLAIM_STATUSDataTable(ds.Tables("EXTENDED_CLAIM_STATUS")))
            End If
            If (Not (ds.Tables("PARTS_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New PARTS_LISTDataTable(ds.Tables("PARTS_LIST")))
            End If
            If (Not (ds.Tables("FOLLOWUP")) Is Nothing) Then
                MyBase.Tables.Add(New FOLLOWUPDataTable(ds.Tables("FOLLOWUP")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableElitaClaim = CType(MyBase.Tables("ElitaClaim"), ElitaClaimDataTable)
        If (initTable = True) Then
            If (Not (Me.tableElitaClaim) Is Nothing) Then
                Me.tableElitaClaim.InitVars()
            End If
        End If
        Me.tableTRANSACTION_HEADER = CType(MyBase.Tables("TRANSACTION_HEADER"), TRANSACTION_HEADERDataTable)
        If (initTable = True) Then
            If (Not (Me.tableTRANSACTION_HEADER) Is Nothing) Then
                Me.tableTRANSACTION_HEADER.InitVars()
            End If
        End If
        Me.tableTRANSACTION_DATA_RECORD = CType(MyBase.Tables("TRANSACTION_DATA_RECORD"), TRANSACTION_DATA_RECORDDataTable)
        If (initTable = True) Then
            If (Not (Me.tableTRANSACTION_DATA_RECORD) Is Nothing) Then
                Me.tableTRANSACTION_DATA_RECORD.InitVars()
            End If
        End If
        Me.tableEXTENDED_CLAIM_STATUS = CType(MyBase.Tables("EXTENDED_CLAIM_STATUS"), EXTENDED_CLAIM_STATUSDataTable)
        If (initTable = True) Then
            If (Not (Me.tableEXTENDED_CLAIM_STATUS) Is Nothing) Then
                Me.tableEXTENDED_CLAIM_STATUS.InitVars()
            End If
        End If
        Me.tablePARTS_LIST = CType(MyBase.Tables("PARTS_LIST"), PARTS_LISTDataTable)
        If (initTable = True) Then
            If (Not (Me.tablePARTS_LIST) Is Nothing) Then
                Me.tablePARTS_LIST.InitVars()
            End If
        End If
        Me.tableFOLLOWUP = CType(MyBase.Tables("FOLLOWUP"), FOLLOWUPDataTable)
        If (initTable = True) Then
            If (Not (Me.tableFOLLOWUP) Is Nothing) Then
                Me.tableFOLLOWUP.InitVars()
            End If
        End If
        Me.relationElitaClaim_TRANSACTION_HEADER = Me.Relations("ElitaClaim_TRANSACTION_HEADER")
        Me.relationElitaClaim_TRANSACTION_DATA_RECORD = Me.Relations("ElitaClaim_TRANSACTION_DATA_RECORD")
        Me.relationTRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS = Me.Relations("TRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS")
        Me.relationTRANSACTION_DATA_RECORD_PARTS_LIST = Me.Relations("TRANSACTION_DATA_RECORD_PARTS_LIST")
        Me.relationTRANSACTION_DATA_RECORD_FOLLOWUP = Me.Relations("TRANSACTION_DATA_RECORD_FOLLOWUP")
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "ElitaClaimDs"
        Me.Prefix = ""
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableElitaClaim = New ElitaClaimDataTable()
        MyBase.Tables.Add(Me.tableElitaClaim)
        Me.tableTRANSACTION_HEADER = New TRANSACTION_HEADERDataTable()
        MyBase.Tables.Add(Me.tableTRANSACTION_HEADER)
        Me.tableTRANSACTION_DATA_RECORD = New TRANSACTION_DATA_RECORDDataTable()
        MyBase.Tables.Add(Me.tableTRANSACTION_DATA_RECORD)
        Me.tableEXTENDED_CLAIM_STATUS = New EXTENDED_CLAIM_STATUSDataTable()
        MyBase.Tables.Add(Me.tableEXTENDED_CLAIM_STATUS)
        Me.tablePARTS_LIST = New PARTS_LISTDataTable()
        MyBase.Tables.Add(Me.tablePARTS_LIST)
        Me.tableFOLLOWUP = New FOLLOWUPDataTable()
        MyBase.Tables.Add(Me.tableFOLLOWUP)
        Dim fkc As Global.System.Data.ForeignKeyConstraint
        fkc = New Global.System.Data.ForeignKeyConstraint("ElitaClaim_TRANSACTION_HEADER", New Global.System.Data.DataColumn() {Me.tableElitaClaim.ElitaClaim_IdColumn}, New Global.System.Data.DataColumn() {Me.tableTRANSACTION_HEADER.ElitaClaim_IdColumn})
        Me.tableTRANSACTION_HEADER.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("ElitaClaim_TRANSACTION_DATA_RECORD", New Global.System.Data.DataColumn() {Me.tableElitaClaim.ElitaClaim_IdColumn}, New Global.System.Data.DataColumn() {Me.tableTRANSACTION_DATA_RECORD.ElitaClaim_IdColumn})
        Me.tableTRANSACTION_DATA_RECORD.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("TRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS", New Global.System.Data.DataColumn() {Me.tableTRANSACTION_DATA_RECORD.TRANSACTION_DATA_RECORD_IdColumn}, New Global.System.Data.DataColumn() {Me.tableEXTENDED_CLAIM_STATUS.TRANSACTION_DATA_RECORD_IdColumn})
        Me.tableEXTENDED_CLAIM_STATUS.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("TRANSACTION_DATA_RECORD_PARTS_LIST", New Global.System.Data.DataColumn() {Me.tableTRANSACTION_DATA_RECORD.TRANSACTION_DATA_RECORD_IdColumn}, New Global.System.Data.DataColumn() {Me.tablePARTS_LIST.TRANSACTION_DATA_RECORD_IdColumn})
        Me.tablePARTS_LIST.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("TRANSACTION_DATA_RECORD_FOLLOWUP", New Global.System.Data.DataColumn() {Me.tableTRANSACTION_DATA_RECORD.TRANSACTION_DATA_RECORD_IdColumn}, New Global.System.Data.DataColumn() {Me.tableFOLLOWUP.TRANSACTION_DATA_RECORD_IdColumn})
        Me.tableFOLLOWUP.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        Me.relationElitaClaim_TRANSACTION_HEADER = New Global.System.Data.DataRelation("ElitaClaim_TRANSACTION_HEADER", New Global.System.Data.DataColumn() {Me.tableElitaClaim.ElitaClaim_IdColumn}, New Global.System.Data.DataColumn() {Me.tableTRANSACTION_HEADER.ElitaClaim_IdColumn}, False)
        Me.relationElitaClaim_TRANSACTION_HEADER.Nested = True
        Me.Relations.Add(Me.relationElitaClaim_TRANSACTION_HEADER)
        Me.relationElitaClaim_TRANSACTION_DATA_RECORD = New Global.System.Data.DataRelation("ElitaClaim_TRANSACTION_DATA_RECORD", New Global.System.Data.DataColumn() {Me.tableElitaClaim.ElitaClaim_IdColumn}, New Global.System.Data.DataColumn() {Me.tableTRANSACTION_DATA_RECORD.ElitaClaim_IdColumn}, False)
        Me.relationElitaClaim_TRANSACTION_DATA_RECORD.Nested = True
        Me.Relations.Add(Me.relationElitaClaim_TRANSACTION_DATA_RECORD)
        Me.relationTRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS = New Global.System.Data.DataRelation("TRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS", New Global.System.Data.DataColumn() {Me.tableTRANSACTION_DATA_RECORD.TRANSACTION_DATA_RECORD_IdColumn}, New Global.System.Data.DataColumn() {Me.tableEXTENDED_CLAIM_STATUS.TRANSACTION_DATA_RECORD_IdColumn}, False)
        Me.relationTRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS.Nested = True
        Me.Relations.Add(Me.relationTRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS)
        Me.relationTRANSACTION_DATA_RECORD_PARTS_LIST = New Global.System.Data.DataRelation("TRANSACTION_DATA_RECORD_PARTS_LIST", New Global.System.Data.DataColumn() {Me.tableTRANSACTION_DATA_RECORD.TRANSACTION_DATA_RECORD_IdColumn}, New Global.System.Data.DataColumn() {Me.tablePARTS_LIST.TRANSACTION_DATA_RECORD_IdColumn}, False)
        Me.relationTRANSACTION_DATA_RECORD_PARTS_LIST.Nested = True
        Me.Relations.Add(Me.relationTRANSACTION_DATA_RECORD_PARTS_LIST)
        Me.relationTRANSACTION_DATA_RECORD_FOLLOWUP = New Global.System.Data.DataRelation("TRANSACTION_DATA_RECORD_FOLLOWUP", New Global.System.Data.DataColumn() {Me.tableTRANSACTION_DATA_RECORD.TRANSACTION_DATA_RECORD_IdColumn}, New Global.System.Data.DataColumn() {Me.tableFOLLOWUP.TRANSACTION_DATA_RECORD_IdColumn}, False)
        Me.relationTRANSACTION_DATA_RECORD_FOLLOWUP.Nested = True
        Me.Relations.Add(Me.relationTRANSACTION_DATA_RECORD_FOLLOWUP)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeElitaClaim() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeTRANSACTION_HEADER() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeTRANSACTION_DATA_RECORD() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeEXTENDED_CLAIM_STATUS() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializePARTS_LIST() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFOLLOWUP() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ElitaClaimDs = New ElitaClaimDs()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ElitaClaimRowChangeEventHandler(ByVal sender As Object, ByVal e As ElitaClaimRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub TRANSACTION_HEADERRowChangeEventHandler(ByVal sender As Object, ByVal e As TRANSACTION_HEADERRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub TRANSACTION_DATA_RECORDRowChangeEventHandler(ByVal sender As Object, ByVal e As TRANSACTION_DATA_RECORDRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub EXTENDED_CLAIM_STATUSRowChangeEventHandler(ByVal sender As Object, ByVal e As EXTENDED_CLAIM_STATUSRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub PARTS_LISTRowChangeEventHandler(ByVal sender As Object, ByVal e As PARTS_LISTRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FOLLOWUPRowChangeEventHandler(ByVal sender As Object, ByVal e As FOLLOWUPRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ElitaClaimDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnElitaClaim_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ElitaClaim"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ElitaClaim_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnElitaClaim_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ElitaClaimRow
            Get
                Return CType(Me.Rows(index), ElitaClaimRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ElitaClaimRowChanging As ElitaClaimRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ElitaClaimRowChanged As ElitaClaimRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ElitaClaimRowDeleting As ElitaClaimRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ElitaClaimRowDeleted As ElitaClaimRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddElitaClaimRow(ByVal row As ElitaClaimRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddElitaClaimRow() As ElitaClaimRow
            Dim rowElitaClaimRow As ElitaClaimRow = CType(Me.NewRow, ElitaClaimRow)
            Dim columnValuesArray() As Object = New Object() {Nothing}
            rowElitaClaimRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowElitaClaimRow)
            Return rowElitaClaimRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ElitaClaimDataTable = CType(MyBase.Clone, ElitaClaimDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ElitaClaimDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnElitaClaim_Id = MyBase.Columns("ElitaClaim_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnElitaClaim_Id = New Global.System.Data.DataColumn("ElitaClaim_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnElitaClaim_Id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnElitaClaim_Id}, True))
            Me.columnElitaClaim_Id.AutoIncrement = True
            Me.columnElitaClaim_Id.AllowDBNull = False
            Me.columnElitaClaim_Id.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewElitaClaimRow() As ElitaClaimRow
            Return CType(Me.NewRow, ElitaClaimRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ElitaClaimRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ElitaClaimRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ElitaClaimRowChangedEvent) Is Nothing) Then
                RaiseEvent ElitaClaimRowChanged(Me, New ElitaClaimRowChangeEvent(CType(e.Row, ElitaClaimRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ElitaClaimRowChangingEvent) Is Nothing) Then
                RaiseEvent ElitaClaimRowChanging(Me, New ElitaClaimRowChangeEvent(CType(e.Row, ElitaClaimRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ElitaClaimRowDeletedEvent) Is Nothing) Then
                RaiseEvent ElitaClaimRowDeleted(Me, New ElitaClaimRowChangeEvent(CType(e.Row, ElitaClaimRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ElitaClaimRowDeletingEvent) Is Nothing) Then
                RaiseEvent ElitaClaimRowDeleting(Me, New ElitaClaimRowChangeEvent(CType(e.Row, ElitaClaimRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveElitaClaimRow(ByVal row As ElitaClaimRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ElitaClaimDs = New ElitaClaimDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ElitaClaimDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class TRANSACTION_HEADERDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnTRANSACTION_ID As Global.System.Data.DataColumn

        Private columnFUNCTION_TYPE_CODE As Global.System.Data.DataColumn

        Private columnElitaClaim_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "TRANSACTION_HEADER"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TRANSACTION_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSACTION_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FUNCTION_TYPE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUNCTION_TYPE_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ElitaClaim_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnElitaClaim_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As TRANSACTION_HEADERRow
            Get
                Return CType(Me.Rows(index), TRANSACTION_HEADERRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TRANSACTION_HEADERRowChanging As TRANSACTION_HEADERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TRANSACTION_HEADERRowChanged As TRANSACTION_HEADERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TRANSACTION_HEADERRowDeleting As TRANSACTION_HEADERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TRANSACTION_HEADERRowDeleted As TRANSACTION_HEADERRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddTRANSACTION_HEADERRow(ByVal row As TRANSACTION_HEADERRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddTRANSACTION_HEADERRow(ByVal TRANSACTION_ID As String, ByVal FUNCTION_TYPE_CODE As String, ByVal parentElitaClaimRowByElitaClaim_TRANSACTION_HEADER As ElitaClaimRow) As TRANSACTION_HEADERRow
            Dim rowTRANSACTION_HEADERRow As TRANSACTION_HEADERRow = CType(Me.NewRow, TRANSACTION_HEADERRow)
            Dim columnValuesArray() As Object = New Object() {TRANSACTION_ID, FUNCTION_TYPE_CODE, Nothing}
            If (Not (parentElitaClaimRowByElitaClaim_TRANSACTION_HEADER) Is Nothing) Then
                columnValuesArray(2) = parentElitaClaimRowByElitaClaim_TRANSACTION_HEADER(0)
            End If
            rowTRANSACTION_HEADERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRANSACTION_HEADERRow)
            Return rowTRANSACTION_HEADERRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRANSACTION_HEADERDataTable = CType(MyBase.Clone, TRANSACTION_HEADERDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRANSACTION_HEADERDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnTRANSACTION_ID = MyBase.Columns("TRANSACTION_ID")
            Me.columnFUNCTION_TYPE_CODE = MyBase.Columns("FUNCTION_TYPE_CODE")
            Me.columnElitaClaim_Id = MyBase.Columns("ElitaClaim_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnTRANSACTION_ID = New Global.System.Data.DataColumn("TRANSACTION_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSACTION_ID)
            Me.columnFUNCTION_TYPE_CODE = New Global.System.Data.DataColumn("FUNCTION_TYPE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUNCTION_TYPE_CODE)
            Me.columnElitaClaim_Id = New Global.System.Data.DataColumn("ElitaClaim_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnElitaClaim_Id)
            Me.columnTRANSACTION_ID.AllowDBNull = False
            Me.columnFUNCTION_TYPE_CODE.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewTRANSACTION_HEADERRow() As TRANSACTION_HEADERRow
            Return CType(Me.NewRow, TRANSACTION_HEADERRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRANSACTION_HEADERRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRANSACTION_HEADERRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRANSACTION_HEADERRowChangedEvent) Is Nothing) Then
                RaiseEvent TRANSACTION_HEADERRowChanged(Me, New TRANSACTION_HEADERRowChangeEvent(CType(e.Row, TRANSACTION_HEADERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRANSACTION_HEADERRowChangingEvent) Is Nothing) Then
                RaiseEvent TRANSACTION_HEADERRowChanging(Me, New TRANSACTION_HEADERRowChangeEvent(CType(e.Row, TRANSACTION_HEADERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRANSACTION_HEADERRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRANSACTION_HEADERRowDeleted(Me, New TRANSACTION_HEADERRowChangeEvent(CType(e.Row, TRANSACTION_HEADERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRANSACTION_HEADERRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRANSACTION_HEADERRowDeleting(Me, New TRANSACTION_HEADERRowChangeEvent(CType(e.Row, TRANSACTION_HEADERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveTRANSACTION_HEADERRow(ByVal row As TRANSACTION_HEADERRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ElitaClaimDs = New ElitaClaimDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRANSACTION_HEADERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class TRANSACTION_DATA_RECORDDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnPARENT_ITEM_NUMBER As Global.System.Data.DataColumn

        Private columnCLAIM_NUMBER As Global.System.Data.DataColumn

        Private columnSERVICE_CENTER_CODE As Global.System.Data.DataColumn

        Private columnREVERSE_LOGISTICS As Global.System.Data.DataColumn

        Private columnCOVERAGE_TYPE As Global.System.Data.DataColumn

        Private columnDEALER_CODE As Global.System.Data.DataColumn

        Private columnDEALER_NAME As Global.System.Data.DataColumn

        Private columnAUTHORIZATION_NUMBER As Global.System.Data.DataColumn

        Private columnSERVICE_TYPE As Global.System.Data.DataColumn

        Private columnMETHOD_OF_REPAIR_CODE As Global.System.Data.DataColumn

        Private columnPRODUCT_CODE As Global.System.Data.DataColumn

        Private columnSERIAL_NUMBER As Global.System.Data.DataColumn

        Private columnCUSTOMER_NAME As Global.System.Data.DataColumn

        Private columnIDENTIFICATION_NUMBER As Global.System.Data.DataColumn

        Private columnCUSTOMER_ADDRESS1 As Global.System.Data.DataColumn

        Private columnCUSTOMER_ADDRESS2 As Global.System.Data.DataColumn

        Private columnCOMUNA As Global.System.Data.DataColumn

        Private columnREGION_CODE As Global.System.Data.DataColumn

        Private columnPHONE1 As Global.System.Data.DataColumn

        Private columnPHONE2 As Global.System.Data.DataColumn

        Private columnEMAIL As Global.System.Data.DataColumn

        Private columnCLAIM_CREATED_DATE As Global.System.Data.DataColumn

        Private columnPRODUCT_PURCHASE_INVOICE As Global.System.Data.DataColumn

        Private columnRETAILER As Global.System.Data.DataColumn

        Private columnPRODUCT_SALES_DATE As Global.System.Data.DataColumn

        Private columnPRODUCT_SALES_PRICE As Global.System.Data.DataColumn

        Private columnPROBLEM_DESCRIPTION As Global.System.Data.DataColumn

        Private columnTECHNICAL_REPORT As Global.System.Data.DataColumn

        Private columnCLAIM_ACTIVITY_CODE As Global.System.Data.DataColumn

        Private columnREPAIR_DATE As Global.System.Data.DataColumn

        Private columnLABOR_AMOUNT As Global.System.Data.DataColumn

        Private columnTRIP_AMOUNT As Global.System.Data.DataColumn

        Private columnSHIPPING As Global.System.Data.DataColumn

        Private columnPICKUP_DATE As Global.System.Data.DataColumn

        Private columnIN_HOME_VISIT_DATE As Global.System.Data.DataColumn

        Private columnVISIT_DATE As Global.System.Data.DataColumn

        Private columnDEFECT_REASON_CODE As Global.System.Data.DataColumn

        Private columnEXPECTED_REPAIR_DATE As Global.System.Data.DataColumn

        Private columnE_TICKET As Global.System.Data.DataColumn

        Private columnAWB As Global.System.Data.DataColumn

        Private columnCOLLECT_DATE As Global.System.Data.DataColumn

        Private columnTRANSACTION_DATA_RECORD_Id As Global.System.Data.DataColumn

        Private columnElitaClaim_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "TRANSACTION_DATA_RECORD"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PARENT_ITEM_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENT_ITEM_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CLAIM_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAIM_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERVICE_CENTER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICE_CENTER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REVERSE_LOGISTICSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVERSE_LOGISTICS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COVERAGE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOVERAGE_TYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DEALER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEALER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DEALER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEALER_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AUTHORIZATION_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORIZATION_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERVICE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICE_TYPE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property METHOD_OF_REPAIR_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMETHOD_OF_REPAIR_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRODUCT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCT_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIAL_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIAL_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTOMER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDENTIFICATION_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDENTIFICATION_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTOMER_ADDRESS1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER_ADDRESS1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUSTOMER_ADDRESS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER_ADDRESS2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMUNAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMUNA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REGION_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGION_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHONE1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHONE2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CLAIM_CREATED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAIM_CREATED_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRODUCT_PURCHASE_INVOICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCT_PURCHASE_INVOICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RETAILERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRETAILER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRODUCT_SALES_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCT_SALES_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRODUCT_SALES_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCT_SALES_PRICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PROBLEM_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROBLEM_DESCRIPTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TECHNICAL_REPORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTECHNICAL_REPORT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CLAIM_ACTIVITY_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAIM_ACTIVITY_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REPAIR_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPAIR_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LABOR_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLABOR_AMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TRIP_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIP_AMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SHIPPINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPPING
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PICKUP_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKUP_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IN_HOME_VISIT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIN_HOME_VISIT_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VISIT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVISIT_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DEFECT_REASON_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEFECT_REASON_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXPECTED_REPAIR_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXPECTED_REPAIR_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property E_TICKETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_TICKET
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AWBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAWB
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COLLECT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLLECT_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TRANSACTION_DATA_RECORD_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSACTION_DATA_RECORD_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ElitaClaim_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnElitaClaim_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As TRANSACTION_DATA_RECORDRow
            Get
                Return CType(Me.Rows(index), TRANSACTION_DATA_RECORDRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TRANSACTION_DATA_RECORDRowChanging As TRANSACTION_DATA_RECORDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TRANSACTION_DATA_RECORDRowChanged As TRANSACTION_DATA_RECORDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TRANSACTION_DATA_RECORDRowDeleting As TRANSACTION_DATA_RECORDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TRANSACTION_DATA_RECORDRowDeleted As TRANSACTION_DATA_RECORDRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddTRANSACTION_DATA_RECORDRow(ByVal row As TRANSACTION_DATA_RECORDRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddTRANSACTION_DATA_RECORDRow( _
                    ByVal PARENT_ITEM_NUMBER As Integer, _
                    ByVal CLAIM_NUMBER As String, _
                    ByVal SERVICE_CENTER_CODE As String, _
                    ByVal REVERSE_LOGISTICS As String, _
                    ByVal COVERAGE_TYPE As String, _
                    ByVal DEALER_CODE As String, _
                    ByVal DEALER_NAME As String, _
                    ByVal AUTHORIZATION_NUMBER As String, _
                    ByVal SERVICE_TYPE As String, _
                    ByVal METHOD_OF_REPAIR_CODE As String, _
                    ByVal PRODUCT_CODE As String, _
                    ByVal SERIAL_NUMBER As String, _
                    ByVal CUSTOMER_NAME As String, _
                    ByVal IDENTIFICATION_NUMBER As String, _
                    ByVal CUSTOMER_ADDRESS1 As String, _
                    ByVal CUSTOMER_ADDRESS2 As String, _
                    ByVal COMUNA As String, _
                    ByVal REGION_CODE As String, _
                    ByVal PHONE1 As String, _
                    ByVal PHONE2 As String, _
                    ByVal EMAIL As String, _
                    ByVal CLAIM_CREATED_DATE As Date, _
                    ByVal PRODUCT_PURCHASE_INVOICE As String, _
                    ByVal RETAILER As String, _
                    ByVal PRODUCT_SALES_DATE As Date, _
                    ByVal PRODUCT_SALES_PRICE As Decimal, _
                    ByVal PROBLEM_DESCRIPTION As String, _
                    ByVal TECHNICAL_REPORT As String, _
                    ByVal CLAIM_ACTIVITY_CODE As String, _
                    ByVal REPAIR_DATE As Date, _
                    ByVal LABOR_AMOUNT As Decimal, _
                    ByVal TRIP_AMOUNT As Decimal, _
                    ByVal SHIPPING As Decimal, _
                    ByVal PICKUP_DATE As Date, _
                    ByVal IN_HOME_VISIT_DATE As Date, _
                    ByVal VISIT_DATE As Date, _
                    ByVal DEFECT_REASON_CODE As String, _
                    ByVal EXPECTED_REPAIR_DATE As Date, _
                    ByVal E_TICKET As String, _
                    ByVal AWB As String, _
                    ByVal COLLECT_DATE As Date, _
                    ByVal parentElitaClaimRowByElitaClaim_TRANSACTION_DATA_RECORD As ElitaClaimRow) As TRANSACTION_DATA_RECORDRow
            Dim rowTRANSACTION_DATA_RECORDRow As TRANSACTION_DATA_RECORDRow = CType(Me.NewRow, TRANSACTION_DATA_RECORDRow)
            Dim columnValuesArray() As Object = New Object() {PARENT_ITEM_NUMBER, CLAIM_NUMBER, SERVICE_CENTER_CODE, REVERSE_LOGISTICS, COVERAGE_TYPE, DEALER_CODE, DEALER_NAME, AUTHORIZATION_NUMBER, SERVICE_TYPE, METHOD_OF_REPAIR_CODE, PRODUCT_CODE, SERIAL_NUMBER, CUSTOMER_NAME, IDENTIFICATION_NUMBER, CUSTOMER_ADDRESS1, CUSTOMER_ADDRESS2, COMUNA, REGION_CODE, PHONE1, PHONE2, EMAIL, CLAIM_CREATED_DATE, PRODUCT_PURCHASE_INVOICE, RETAILER, PRODUCT_SALES_DATE, PRODUCT_SALES_PRICE, PROBLEM_DESCRIPTION, TECHNICAL_REPORT, CLAIM_ACTIVITY_CODE, REPAIR_DATE, LABOR_AMOUNT, TRIP_AMOUNT, SHIPPING, PICKUP_DATE, IN_HOME_VISIT_DATE, VISIT_DATE, DEFECT_REASON_CODE, EXPECTED_REPAIR_DATE, E_TICKET, AWB, COLLECT_DATE, Nothing, Nothing}
            If (Not (parentElitaClaimRowByElitaClaim_TRANSACTION_DATA_RECORD) Is Nothing) Then
                columnValuesArray(42) = parentElitaClaimRowByElitaClaim_TRANSACTION_DATA_RECORD(0)
            End If
            rowTRANSACTION_DATA_RECORDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRANSACTION_DATA_RECORDRow)
            Return rowTRANSACTION_DATA_RECORDRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRANSACTION_DATA_RECORDDataTable = CType(MyBase.Clone, TRANSACTION_DATA_RECORDDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRANSACTION_DATA_RECORDDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPARENT_ITEM_NUMBER = MyBase.Columns("PARENT_ITEM_NUMBER")
            Me.columnCLAIM_NUMBER = MyBase.Columns("CLAIM_NUMBER")
            Me.columnSERVICE_CENTER_CODE = MyBase.Columns("SERVICE_CENTER_CODE")
            Me.columnREVERSE_LOGISTICS = MyBase.Columns("REVERSE_LOGISTICS")
            Me.columnCOVERAGE_TYPE = MyBase.Columns("COVERAGE_TYPE")
            Me.columnDEALER_CODE = MyBase.Columns("DEALER_CODE")
            Me.columnDEALER_NAME = MyBase.Columns("DEALER_NAME")
            Me.columnAUTHORIZATION_NUMBER = MyBase.Columns("AUTHORIZATION_NUMBER")
            Me.columnSERVICE_TYPE = MyBase.Columns("SERVICE_TYPE")
            Me.columnMETHOD_OF_REPAIR_CODE = MyBase.Columns("METHOD_OF_REPAIR_CODE")
            Me.columnPRODUCT_CODE = MyBase.Columns("PRODUCT_CODE")
            Me.columnSERIAL_NUMBER = MyBase.Columns("SERIAL_NUMBER")
            Me.columnCUSTOMER_NAME = MyBase.Columns("CUSTOMER_NAME")
            Me.columnIDENTIFICATION_NUMBER = MyBase.Columns("IDENTIFICATION_NUMBER")
            Me.columnCUSTOMER_ADDRESS1 = MyBase.Columns("CUSTOMER_ADDRESS1")
            Me.columnCUSTOMER_ADDRESS2 = MyBase.Columns("CUSTOMER_ADDRESS2")
            Me.columnCOMUNA = MyBase.Columns("COMUNA")
            Me.columnREGION_CODE = MyBase.Columns("REGION_CODE")
            Me.columnPHONE1 = MyBase.Columns("PHONE1")
            Me.columnPHONE2 = MyBase.Columns("PHONE2")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnCLAIM_CREATED_DATE = MyBase.Columns("CLAIM_CREATED_DATE")
            Me.columnPRODUCT_PURCHASE_INVOICE = MyBase.Columns("PRODUCT_PURCHASE_INVOICE")
            Me.columnRETAILER = MyBase.Columns("RETAILER")
            Me.columnPRODUCT_SALES_DATE = MyBase.Columns("PRODUCT_SALES_DATE")
            Me.columnPRODUCT_SALES_PRICE = MyBase.Columns("PRODUCT_SALES_PRICE")
            Me.columnPROBLEM_DESCRIPTION = MyBase.Columns("PROBLEM_DESCRIPTION")
            Me.columnTECHNICAL_REPORT = MyBase.Columns("TECHNICAL_REPORT")
            Me.columnCLAIM_ACTIVITY_CODE = MyBase.Columns("CLAIM_ACTIVITY_CODE")
            Me.columnREPAIR_DATE = MyBase.Columns("REPAIR_DATE")
            Me.columnLABOR_AMOUNT = MyBase.Columns("LABOR_AMOUNT")
            Me.columnTRIP_AMOUNT = MyBase.Columns("TRIP_AMOUNT")
            Me.columnSHIPPING = MyBase.Columns("SHIPPING")
            Me.columnPICKUP_DATE = MyBase.Columns("PICKUP_DATE")
            Me.columnIN_HOME_VISIT_DATE = MyBase.Columns("IN_HOME_VISIT_DATE")
            Me.columnVISIT_DATE = MyBase.Columns("VISIT_DATE")
            Me.columnDEFECT_REASON_CODE = MyBase.Columns("DEFECT_REASON_CODE")
            Me.columnEXPECTED_REPAIR_DATE = MyBase.Columns("EXPECTED_REPAIR_DATE")
            Me.columnE_TICKET = MyBase.Columns("E_TICKET")
            Me.columnAWB = MyBase.Columns("AWB")
            Me.columnCOLLECT_DATE = MyBase.Columns("COLLECT_DATE")
            Me.columnTRANSACTION_DATA_RECORD_Id = MyBase.Columns("TRANSACTION_DATA_RECORD_Id")
            Me.columnElitaClaim_Id = MyBase.Columns("ElitaClaim_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPARENT_ITEM_NUMBER = New Global.System.Data.DataColumn("PARENT_ITEM_NUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENT_ITEM_NUMBER)
            Me.columnCLAIM_NUMBER = New Global.System.Data.DataColumn("CLAIM_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAIM_NUMBER)
            Me.columnSERVICE_CENTER_CODE = New Global.System.Data.DataColumn("SERVICE_CENTER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_CENTER_CODE)
            Me.columnREVERSE_LOGISTICS = New Global.System.Data.DataColumn("REVERSE_LOGISTICS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVERSE_LOGISTICS)
            Me.columnCOVERAGE_TYPE = New Global.System.Data.DataColumn("COVERAGE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOVERAGE_TYPE)
            Me.columnDEALER_CODE = New Global.System.Data.DataColumn("DEALER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEALER_CODE)
            Me.columnDEALER_NAME = New Global.System.Data.DataColumn("DEALER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEALER_NAME)
            Me.columnAUTHORIZATION_NUMBER = New Global.System.Data.DataColumn("AUTHORIZATION_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORIZATION_NUMBER)
            Me.columnSERVICE_TYPE = New Global.System.Data.DataColumn("SERVICE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_TYPE)
            Me.columnMETHOD_OF_REPAIR_CODE = New Global.System.Data.DataColumn("METHOD_OF_REPAIR_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMETHOD_OF_REPAIR_CODE)
            Me.columnPRODUCT_CODE = New Global.System.Data.DataColumn("PRODUCT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCT_CODE)
            Me.columnSERIAL_NUMBER = New Global.System.Data.DataColumn("SERIAL_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIAL_NUMBER)
            Me.columnCUSTOMER_NAME = New Global.System.Data.DataColumn("CUSTOMER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER_NAME)
            Me.columnIDENTIFICATION_NUMBER = New Global.System.Data.DataColumn("IDENTIFICATION_NUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDENTIFICATION_NUMBER)
            Me.columnCUSTOMER_ADDRESS1 = New Global.System.Data.DataColumn("CUSTOMER_ADDRESS1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER_ADDRESS1)
            Me.columnCUSTOMER_ADDRESS2 = New Global.System.Data.DataColumn("CUSTOMER_ADDRESS2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER_ADDRESS2)
            Me.columnCOMUNA = New Global.System.Data.DataColumn("COMUNA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMUNA)
            Me.columnREGION_CODE = New Global.System.Data.DataColumn("REGION_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGION_CODE)
            Me.columnPHONE1 = New Global.System.Data.DataColumn("PHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHONE1)
            Me.columnPHONE2 = New Global.System.Data.DataColumn("PHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHONE2)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnCLAIM_CREATED_DATE = New Global.System.Data.DataColumn("CLAIM_CREATED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAIM_CREATED_DATE)
            Me.columnPRODUCT_PURCHASE_INVOICE = New Global.System.Data.DataColumn("PRODUCT_PURCHASE_INVOICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCT_PURCHASE_INVOICE)
            Me.columnRETAILER = New Global.System.Data.DataColumn("RETAILER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRETAILER)
            Me.columnPRODUCT_SALES_DATE = New Global.System.Data.DataColumn("PRODUCT_SALES_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCT_SALES_DATE)
            Me.columnPRODUCT_SALES_PRICE = New Global.System.Data.DataColumn("PRODUCT_SALES_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCT_SALES_PRICE)
            Me.columnPROBLEM_DESCRIPTION = New Global.System.Data.DataColumn("PROBLEM_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROBLEM_DESCRIPTION)
            Me.columnTECHNICAL_REPORT = New Global.System.Data.DataColumn("TECHNICAL_REPORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTECHNICAL_REPORT)
            Me.columnCLAIM_ACTIVITY_CODE = New Global.System.Data.DataColumn("CLAIM_ACTIVITY_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAIM_ACTIVITY_CODE)
            Me.columnREPAIR_DATE = New Global.System.Data.DataColumn("REPAIR_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPAIR_DATE)
            Me.columnLABOR_AMOUNT = New Global.System.Data.DataColumn("LABOR_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLABOR_AMOUNT)
            Me.columnTRIP_AMOUNT = New Global.System.Data.DataColumn("TRIP_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIP_AMOUNT)
            Me.columnSHIPPING = New Global.System.Data.DataColumn("SHIPPING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPPING)
            Me.columnPICKUP_DATE = New Global.System.Data.DataColumn("PICKUP_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKUP_DATE)
            Me.columnIN_HOME_VISIT_DATE = New Global.System.Data.DataColumn("IN_HOME_VISIT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIN_HOME_VISIT_DATE)
            Me.columnVISIT_DATE = New Global.System.Data.DataColumn("VISIT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVISIT_DATE)
            Me.columnDEFECT_REASON_CODE = New Global.System.Data.DataColumn("DEFECT_REASON_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEFECT_REASON_CODE)
            Me.columnEXPECTED_REPAIR_DATE = New Global.System.Data.DataColumn("EXPECTED_REPAIR_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXPECTED_REPAIR_DATE)
            Me.columnE_TICKET = New Global.System.Data.DataColumn("E_TICKET", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_TICKET)
            Me.columnAWB = New Global.System.Data.DataColumn("AWB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAWB)
            Me.columnCOLLECT_DATE = New Global.System.Data.DataColumn("COLLECT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLLECT_DATE)
            Me.columnTRANSACTION_DATA_RECORD_Id = New Global.System.Data.DataColumn("TRANSACTION_DATA_RECORD_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnTRANSACTION_DATA_RECORD_Id)
            Me.columnElitaClaim_Id = New Global.System.Data.DataColumn("ElitaClaim_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnElitaClaim_Id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTRANSACTION_DATA_RECORD_Id}, True))
            Me.columnPARENT_ITEM_NUMBER.AllowDBNull = False
            Me.columnAUTHORIZATION_NUMBER.AllowDBNull = False
            Me.columnPRODUCT_CODE.AllowDBNull = False
            Me.columnTRANSACTION_DATA_RECORD_Id.AutoIncrement = True
            Me.columnTRANSACTION_DATA_RECORD_Id.AllowDBNull = False
            Me.columnTRANSACTION_DATA_RECORD_Id.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewTRANSACTION_DATA_RECORDRow() As TRANSACTION_DATA_RECORDRow
            Return CType(Me.NewRow, TRANSACTION_DATA_RECORDRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRANSACTION_DATA_RECORDRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRANSACTION_DATA_RECORDRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRANSACTION_DATA_RECORDRowChangedEvent) Is Nothing) Then
                RaiseEvent TRANSACTION_DATA_RECORDRowChanged(Me, New TRANSACTION_DATA_RECORDRowChangeEvent(CType(e.Row, TRANSACTION_DATA_RECORDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRANSACTION_DATA_RECORDRowChangingEvent) Is Nothing) Then
                RaiseEvent TRANSACTION_DATA_RECORDRowChanging(Me, New TRANSACTION_DATA_RECORDRowChangeEvent(CType(e.Row, TRANSACTION_DATA_RECORDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRANSACTION_DATA_RECORDRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRANSACTION_DATA_RECORDRowDeleted(Me, New TRANSACTION_DATA_RECORDRowChangeEvent(CType(e.Row, TRANSACTION_DATA_RECORDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRANSACTION_DATA_RECORDRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRANSACTION_DATA_RECORDRowDeleting(Me, New TRANSACTION_DATA_RECORDRowChangeEvent(CType(e.Row, TRANSACTION_DATA_RECORDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveTRANSACTION_DATA_RECORDRow(ByVal row As TRANSACTION_DATA_RECORDRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ElitaClaimDs = New ElitaClaimDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRANSACTION_DATA_RECORDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class EXTENDED_CLAIM_STATUSDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnPARENT_ITEM_NUMBER As Global.System.Data.DataColumn

        Private columnITEM_NUMBER As Global.System.Data.DataColumn

        Private columnEXTENDED_CLAIM_STATUS_CODE As Global.System.Data.DataColumn

        Private columnEXTENDED_CLAIM_STATUS_DATE As Global.System.Data.DataColumn

        Private columnEXTENDED_CLAIM_STATUS_COMMENT As Global.System.Data.DataColumn

        Private columnTRANSACTION_DATA_RECORD_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "EXTENDED_CLAIM_STATUS"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PARENT_ITEM_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENT_ITEM_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEM_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTENDED_CLAIM_STATUS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENDED_CLAIM_STATUS_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTENDED_CLAIM_STATUS_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENDED_CLAIM_STATUS_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXTENDED_CLAIM_STATUS_COMMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENDED_CLAIM_STATUS_COMMENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TRANSACTION_DATA_RECORD_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSACTION_DATA_RECORD_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As EXTENDED_CLAIM_STATUSRow
            Get
                Return CType(Me.Rows(index), EXTENDED_CLAIM_STATUSRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EXTENDED_CLAIM_STATUSRowChanging As EXTENDED_CLAIM_STATUSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EXTENDED_CLAIM_STATUSRowChanged As EXTENDED_CLAIM_STATUSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EXTENDED_CLAIM_STATUSRowDeleting As EXTENDED_CLAIM_STATUSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EXTENDED_CLAIM_STATUSRowDeleted As EXTENDED_CLAIM_STATUSRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddEXTENDED_CLAIM_STATUSRow(ByVal row As EXTENDED_CLAIM_STATUSRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddEXTENDED_CLAIM_STATUSRow(ByVal PARENT_ITEM_NUMBER As Integer, ByVal ITEM_NUMBER As Integer, ByVal EXTENDED_CLAIM_STATUS_CODE As String, ByVal EXTENDED_CLAIM_STATUS_DATE As Date, ByVal EXTENDED_CLAIM_STATUS_COMMENT As String, ByVal parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS As TRANSACTION_DATA_RECORDRow) As EXTENDED_CLAIM_STATUSRow
            Dim rowEXTENDED_CLAIM_STATUSRow As EXTENDED_CLAIM_STATUSRow = CType(Me.NewRow, EXTENDED_CLAIM_STATUSRow)
            Dim columnValuesArray() As Object = New Object() {PARENT_ITEM_NUMBER, ITEM_NUMBER, EXTENDED_CLAIM_STATUS_CODE, EXTENDED_CLAIM_STATUS_DATE, EXTENDED_CLAIM_STATUS_COMMENT, Nothing}
            If (Not (parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS) Is Nothing) Then
                columnValuesArray(5) = parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS(41)
            End If
            rowEXTENDED_CLAIM_STATUSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEXTENDED_CLAIM_STATUSRow)
            Return rowEXTENDED_CLAIM_STATUSRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EXTENDED_CLAIM_STATUSDataTable = CType(MyBase.Clone, EXTENDED_CLAIM_STATUSDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EXTENDED_CLAIM_STATUSDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPARENT_ITEM_NUMBER = MyBase.Columns("PARENT_ITEM_NUMBER")
            Me.columnITEM_NUMBER = MyBase.Columns("ITEM_NUMBER")
            Me.columnEXTENDED_CLAIM_STATUS_CODE = MyBase.Columns("EXTENDED_CLAIM_STATUS_CODE")
            Me.columnEXTENDED_CLAIM_STATUS_DATE = MyBase.Columns("EXTENDED_CLAIM_STATUS_DATE")
            Me.columnEXTENDED_CLAIM_STATUS_COMMENT = MyBase.Columns("EXTENDED_CLAIM_STATUS_COMMENT")
            Me.columnTRANSACTION_DATA_RECORD_Id = MyBase.Columns("TRANSACTION_DATA_RECORD_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPARENT_ITEM_NUMBER = New Global.System.Data.DataColumn("PARENT_ITEM_NUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENT_ITEM_NUMBER)
            Me.columnITEM_NUMBER = New Global.System.Data.DataColumn("ITEM_NUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_NUMBER)
            Me.columnEXTENDED_CLAIM_STATUS_CODE = New Global.System.Data.DataColumn("EXTENDED_CLAIM_STATUS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENDED_CLAIM_STATUS_CODE)
            Me.columnEXTENDED_CLAIM_STATUS_DATE = New Global.System.Data.DataColumn("EXTENDED_CLAIM_STATUS_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENDED_CLAIM_STATUS_DATE)
            Me.columnEXTENDED_CLAIM_STATUS_COMMENT = New Global.System.Data.DataColumn("EXTENDED_CLAIM_STATUS_COMMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENDED_CLAIM_STATUS_COMMENT)
            Me.columnTRANSACTION_DATA_RECORD_Id = New Global.System.Data.DataColumn("TRANSACTION_DATA_RECORD_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnTRANSACTION_DATA_RECORD_Id)
            Me.columnPARENT_ITEM_NUMBER.AllowDBNull = False
            Me.columnITEM_NUMBER.AllowDBNull = False
            Me.columnEXTENDED_CLAIM_STATUS_CODE.AllowDBNull = False
            Me.columnEXTENDED_CLAIM_STATUS_DATE.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewEXTENDED_CLAIM_STATUSRow() As EXTENDED_CLAIM_STATUSRow
            Return CType(Me.NewRow, EXTENDED_CLAIM_STATUSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EXTENDED_CLAIM_STATUSRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EXTENDED_CLAIM_STATUSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EXTENDED_CLAIM_STATUSRowChangedEvent) Is Nothing) Then
                RaiseEvent EXTENDED_CLAIM_STATUSRowChanged(Me, New EXTENDED_CLAIM_STATUSRowChangeEvent(CType(e.Row, EXTENDED_CLAIM_STATUSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EXTENDED_CLAIM_STATUSRowChangingEvent) Is Nothing) Then
                RaiseEvent EXTENDED_CLAIM_STATUSRowChanging(Me, New EXTENDED_CLAIM_STATUSRowChangeEvent(CType(e.Row, EXTENDED_CLAIM_STATUSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EXTENDED_CLAIM_STATUSRowDeletedEvent) Is Nothing) Then
                RaiseEvent EXTENDED_CLAIM_STATUSRowDeleted(Me, New EXTENDED_CLAIM_STATUSRowChangeEvent(CType(e.Row, EXTENDED_CLAIM_STATUSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EXTENDED_CLAIM_STATUSRowDeletingEvent) Is Nothing) Then
                RaiseEvent EXTENDED_CLAIM_STATUSRowDeleting(Me, New EXTENDED_CLAIM_STATUSRowChangeEvent(CType(e.Row, EXTENDED_CLAIM_STATUSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveEXTENDED_CLAIM_STATUSRow(ByVal row As EXTENDED_CLAIM_STATUSRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ElitaClaimDs = New ElitaClaimDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EXTENDED_CLAIM_STATUSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class PARTS_LISTDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnPARENT_ITEM_NUMBER As Global.System.Data.DataColumn

        Private columnITEM_NUMBER As Global.System.Data.DataColumn

        Private columnPART_CODE As Global.System.Data.DataColumn

        Private columnPART_COST As Global.System.Data.DataColumn

        Private columnPART_DEFECT As Global.System.Data.DataColumn

        Private columnPART_SOLUTION As Global.System.Data.DataColumn

        Private columnIN_STOCK As Global.System.Data.DataColumn

        Private columnPART_DESCRIPTION As Global.System.Data.DataColumn

        Private columnTRANSACTION_DATA_RECORD_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "PARTS_LIST"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PARENT_ITEM_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENT_ITEM_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEM_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PART_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PART_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_COST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PART_DEFECTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_DEFECT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PART_SOLUTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_SOLUTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IN_STOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIN_STOCK
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PART_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_DESCRIPTION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TRANSACTION_DATA_RECORD_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSACTION_DATA_RECORD_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As PARTS_LISTRow
            Get
                Return CType(Me.Rows(index), PARTS_LISTRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PARTS_LISTRowChanging As PARTS_LISTRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PARTS_LISTRowChanged As PARTS_LISTRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PARTS_LISTRowDeleting As PARTS_LISTRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PARTS_LISTRowDeleted As PARTS_LISTRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddPARTS_LISTRow(ByVal row As PARTS_LISTRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddPARTS_LISTRow(ByVal PARENT_ITEM_NUMBER As Integer, ByVal ITEM_NUMBER As Integer, ByVal PART_CODE As String, ByVal PART_COST As Decimal, ByVal PART_DEFECT As String, ByVal PART_SOLUTION As String, ByVal IN_STOCK As String, ByVal PART_DESCRIPTION As String, ByVal parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_PARTS_LIST As TRANSACTION_DATA_RECORDRow) As PARTS_LISTRow
            Dim rowPARTS_LISTRow As PARTS_LISTRow = CType(Me.NewRow, PARTS_LISTRow)
            Dim columnValuesArray() As Object = New Object() {PARENT_ITEM_NUMBER, ITEM_NUMBER, PART_CODE, PART_COST, PART_DEFECT, PART_SOLUTION, IN_STOCK, PART_DESCRIPTION, Nothing}
            If (Not (parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_PARTS_LIST) Is Nothing) Then
                columnValuesArray(8) = parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_PARTS_LIST(41)
            End If
            rowPARTS_LISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPARTS_LISTRow)
            Return rowPARTS_LISTRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PARTS_LISTDataTable = CType(MyBase.Clone, PARTS_LISTDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PARTS_LISTDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPARENT_ITEM_NUMBER = MyBase.Columns("PARENT_ITEM_NUMBER")
            Me.columnITEM_NUMBER = MyBase.Columns("ITEM_NUMBER")
            Me.columnPART_CODE = MyBase.Columns("PART_CODE")
            Me.columnPART_COST = MyBase.Columns("PART_COST")
            Me.columnPART_DEFECT = MyBase.Columns("PART_DEFECT")
            Me.columnPART_SOLUTION = MyBase.Columns("PART_SOLUTION")
            Me.columnIN_STOCK = MyBase.Columns("IN_STOCK")
            Me.columnPART_DESCRIPTION = MyBase.Columns("PART_DESCRIPTION")
            Me.columnTRANSACTION_DATA_RECORD_Id = MyBase.Columns("TRANSACTION_DATA_RECORD_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPARENT_ITEM_NUMBER = New Global.System.Data.DataColumn("PARENT_ITEM_NUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENT_ITEM_NUMBER)
            Me.columnITEM_NUMBER = New Global.System.Data.DataColumn("ITEM_NUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_NUMBER)
            Me.columnPART_CODE = New Global.System.Data.DataColumn("PART_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_CODE)
            Me.columnPART_COST = New Global.System.Data.DataColumn("PART_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_COST)
            Me.columnPART_DEFECT = New Global.System.Data.DataColumn("PART_DEFECT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_DEFECT)
            Me.columnPART_SOLUTION = New Global.System.Data.DataColumn("PART_SOLUTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_SOLUTION)
            Me.columnIN_STOCK = New Global.System.Data.DataColumn("IN_STOCK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIN_STOCK)
            Me.columnPART_DESCRIPTION = New Global.System.Data.DataColumn("PART_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_DESCRIPTION)
            Me.columnTRANSACTION_DATA_RECORD_Id = New Global.System.Data.DataColumn("TRANSACTION_DATA_RECORD_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnTRANSACTION_DATA_RECORD_Id)
            Me.columnPARENT_ITEM_NUMBER.AllowDBNull = False
            Me.columnITEM_NUMBER.AllowDBNull = False
            Me.columnPART_CODE.AllowDBNull = False
            Me.columnPART_COST.AllowDBNull = False
            Me.columnIN_STOCK.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewPARTS_LISTRow() As PARTS_LISTRow
            Return CType(Me.NewRow, PARTS_LISTRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PARTS_LISTRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PARTS_LISTRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PARTS_LISTRowChangedEvent) Is Nothing) Then
                RaiseEvent PARTS_LISTRowChanged(Me, New PARTS_LISTRowChangeEvent(CType(e.Row, PARTS_LISTRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PARTS_LISTRowChangingEvent) Is Nothing) Then
                RaiseEvent PARTS_LISTRowChanging(Me, New PARTS_LISTRowChangeEvent(CType(e.Row, PARTS_LISTRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PARTS_LISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PARTS_LISTRowDeleted(Me, New PARTS_LISTRowChangeEvent(CType(e.Row, PARTS_LISTRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PARTS_LISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PARTS_LISTRowDeleting(Me, New PARTS_LISTRowChangeEvent(CType(e.Row, PARTS_LISTRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovePARTS_LISTRow(ByVal row As PARTS_LISTRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ElitaClaimDs = New ElitaClaimDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PARTS_LISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FOLLOWUPDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnPARENT_ITEM_NUMBER As Global.System.Data.DataColumn

        Private columnITEM_NUMBER As Global.System.Data.DataColumn

        Private columnCREATE_DATE As Global.System.Data.DataColumn

        Private columnCOMMENT_TYPE_CODE As Global.System.Data.DataColumn

        Private columnCOMMENTS As Global.System.Data.DataColumn

        Private columnCALLER_NAME As Global.System.Data.DataColumn

        Private columnTRANSACTION_DATA_RECORD_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FOLLOWUP"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PARENT_ITEM_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENT_ITEM_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ITEM_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_NUMBER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMMENT_TYPE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMMENT_TYPE_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMMENTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMMENTS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CALLER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALLER_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TRANSACTION_DATA_RECORD_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSACTION_DATA_RECORD_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FOLLOWUPRow
            Get
                Return CType(Me.Rows(index), FOLLOWUPRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FOLLOWUPRowChanging As FOLLOWUPRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FOLLOWUPRowChanged As FOLLOWUPRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FOLLOWUPRowDeleting As FOLLOWUPRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FOLLOWUPRowDeleted As FOLLOWUPRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFOLLOWUPRow(ByVal row As FOLLOWUPRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFOLLOWUPRow(ByVal PARENT_ITEM_NUMBER As Integer, ByVal ITEM_NUMBER As Integer, ByVal CREATE_DATE As Date, ByVal COMMENT_TYPE_CODE As String, ByVal COMMENTS As String, ByVal CALLER_NAME As String, ByVal parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_FOLLOWUP As TRANSACTION_DATA_RECORDRow) As FOLLOWUPRow
            Dim rowFOLLOWUPRow As FOLLOWUPRow = CType(Me.NewRow, FOLLOWUPRow)
            Dim columnValuesArray() As Object = New Object() {PARENT_ITEM_NUMBER, ITEM_NUMBER, CREATE_DATE, COMMENT_TYPE_CODE, COMMENTS, CALLER_NAME, Nothing}
            If (Not (parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_FOLLOWUP) Is Nothing) Then
                columnValuesArray(6) = parentTRANSACTION_DATA_RECORDRowByTRANSACTION_DATA_RECORD_FOLLOWUP(41)
            End If
            rowFOLLOWUPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFOLLOWUPRow)
            Return rowFOLLOWUPRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FOLLOWUPDataTable = CType(MyBase.Clone, FOLLOWUPDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FOLLOWUPDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPARENT_ITEM_NUMBER = MyBase.Columns("PARENT_ITEM_NUMBER")
            Me.columnITEM_NUMBER = MyBase.Columns("ITEM_NUMBER")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnCOMMENT_TYPE_CODE = MyBase.Columns("COMMENT_TYPE_CODE")
            Me.columnCOMMENTS = MyBase.Columns("COMMENTS")
            Me.columnCALLER_NAME = MyBase.Columns("CALLER_NAME")
            Me.columnTRANSACTION_DATA_RECORD_Id = MyBase.Columns("TRANSACTION_DATA_RECORD_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPARENT_ITEM_NUMBER = New Global.System.Data.DataColumn("PARENT_ITEM_NUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENT_ITEM_NUMBER)
            Me.columnITEM_NUMBER = New Global.System.Data.DataColumn("ITEM_NUMBER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_NUMBER)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnCOMMENT_TYPE_CODE = New Global.System.Data.DataColumn("COMMENT_TYPE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMMENT_TYPE_CODE)
            Me.columnCOMMENTS = New Global.System.Data.DataColumn("COMMENTS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMMENTS)
            Me.columnCALLER_NAME = New Global.System.Data.DataColumn("CALLER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALLER_NAME)
            Me.columnTRANSACTION_DATA_RECORD_Id = New Global.System.Data.DataColumn("TRANSACTION_DATA_RECORD_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnTRANSACTION_DATA_RECORD_Id)
            Me.columnPARENT_ITEM_NUMBER.AllowDBNull = False
            Me.columnITEM_NUMBER.AllowDBNull = False
            Me.columnCREATE_DATE.AllowDBNull = False
            Me.columnCOMMENT_TYPE_CODE.AllowDBNull = False
            Me.columnCOMMENTS.AllowDBNull = False
            Me.columnCALLER_NAME.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFOLLOWUPRow() As FOLLOWUPRow
            Return CType(Me.NewRow, FOLLOWUPRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FOLLOWUPRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FOLLOWUPRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FOLLOWUPRowChangedEvent) Is Nothing) Then
                RaiseEvent FOLLOWUPRowChanged(Me, New FOLLOWUPRowChangeEvent(CType(e.Row, FOLLOWUPRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FOLLOWUPRowChangingEvent) Is Nothing) Then
                RaiseEvent FOLLOWUPRowChanging(Me, New FOLLOWUPRowChangeEvent(CType(e.Row, FOLLOWUPRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FOLLOWUPRowDeletedEvent) Is Nothing) Then
                RaiseEvent FOLLOWUPRowDeleted(Me, New FOLLOWUPRowChangeEvent(CType(e.Row, FOLLOWUPRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FOLLOWUPRowDeletingEvent) Is Nothing) Then
                RaiseEvent FOLLOWUPRowDeleting(Me, New FOLLOWUPRowChangeEvent(CType(e.Row, FOLLOWUPRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFOLLOWUPRow(ByVal row As FOLLOWUPRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ElitaClaimDs = New ElitaClaimDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FOLLOWUPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ElitaClaimRow
        Inherits Global.System.Data.DataRow

        Private tableElitaClaim As ElitaClaimDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableElitaClaim = CType(Me.Table, ElitaClaimDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ElitaClaim_Id() As Integer
            Get
                Return CType(Me(Me.tableElitaClaim.ElitaClaim_IdColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableElitaClaim.ElitaClaim_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetTRANSACTION_HEADERRows() As TRANSACTION_HEADERRow()
            If (Me.Table.ChildRelations("ElitaClaim_TRANSACTION_HEADER") Is Nothing) Then
                Return New TRANSACTION_HEADERRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ElitaClaim_TRANSACTION_HEADER")), TRANSACTION_HEADERRow())
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetTRANSACTION_DATA_RECORDRows() As TRANSACTION_DATA_RECORDRow()
            If (Me.Table.ChildRelations("ElitaClaim_TRANSACTION_DATA_RECORD") Is Nothing) Then
                Return New TRANSACTION_DATA_RECORDRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ElitaClaim_TRANSACTION_DATA_RECORD")), TRANSACTION_DATA_RECORDRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRANSACTION_HEADERRow
        Inherits Global.System.Data.DataRow

        Private tableTRANSACTION_HEADER As TRANSACTION_HEADERDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRANSACTION_HEADER = CType(Me.Table, TRANSACTION_HEADERDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSACTION_ID() As String
            Get
                Return CType(Me(Me.tableTRANSACTION_HEADER.TRANSACTION_IDColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_HEADER.TRANSACTION_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FUNCTION_TYPE_CODE() As String
            Get
                Return CType(Me(Me.tableTRANSACTION_HEADER.FUNCTION_TYPE_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_HEADER.FUNCTION_TYPE_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ElitaClaim_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_HEADER.ElitaClaim_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ElitaClaim_Id' in table 'TRANSACTION_HEADER' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableTRANSACTION_HEADER.ElitaClaim_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ElitaClaimRow() As ElitaClaimRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ElitaClaim_TRANSACTION_HEADER")), ElitaClaimRow)
            End Get
            Set(ByVal value As ElitaClaimRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("ElitaClaim_TRANSACTION_HEADER"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsElitaClaim_IdNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_HEADER.ElitaClaim_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetElitaClaim_IdNull()
            Me(Me.tableTRANSACTION_HEADER.ElitaClaim_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRANSACTION_DATA_RECORDRow
        Inherits Global.System.Data.DataRow

        Private tableTRANSACTION_DATA_RECORD As TRANSACTION_DATA_RECORDDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRANSACTION_DATA_RECORD = CType(Me.Table, TRANSACTION_DATA_RECORDDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PARENT_ITEM_NUMBER() As Integer
            Get
                Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PARENT_ITEM_NUMBERColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableTRANSACTION_DATA_RECORD.PARENT_ITEM_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CLAIM_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLAIM_NUMBER' in table 'TRANSACTION_DATA_RECORD' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERVICE_CENTER_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.SERVICE_CENTER_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICE_CENTER_CODE' in table 'TRANSACTION_DATA_RECORD' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.SERVICE_CENTER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REVERSE_LOGISTICS() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.REVERSE_LOGISTICSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVERSE_LOGISTICS' in table 'TRANSACTION_DATA_RECORD' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.REVERSE_LOGISTICSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COVERAGE_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.COVERAGE_TYPEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COVERAGE_TYPE' in table 'TRANSACTION_DATA_RECORD' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.COVERAGE_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DEALER_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.DEALER_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEALER_CODE' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.DEALER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DEALER_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.DEALER_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEALER_NAME' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.DEALER_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AUTHORIZATION_NUMBER() As String
            Get
                Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.AUTHORIZATION_NUMBERColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.AUTHORIZATION_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERVICE_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.SERVICE_TYPEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICE_TYPE' in table 'TRANSACTION_DATA_RECORD' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.SERVICE_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property METHOD_OF_REPAIR_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.METHOD_OF_REPAIR_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'METHOD_OF_REPAIR_CODE' in table 'TRANSACTION_DATA_RECORD' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.METHOD_OF_REPAIR_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRODUCT_CODE() As String
            Get
                Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIAL_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.SERIAL_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERIAL_NUMBER' in table 'TRANSACTION_DATA_RECORD' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.SERIAL_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTOMER_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMER_NAME' in table 'TRANSACTION_DATA_RECORD' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDENTIFICATION_NUMBER() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.IDENTIFICATION_NUMBERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDENTIFICATION_NUMBER' in table 'TRANSACTION_DATA_RECORD' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.IDENTIFICATION_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTOMER_ADDRESS1() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_ADDRESS1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMER_ADDRESS1' in table 'TRANSACTION_DATA_RECORD' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_ADDRESS1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUSTOMER_ADDRESS2() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_ADDRESS2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMER_ADDRESS2' in table 'TRANSACTION_DATA_RECORD' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_ADDRESS2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMUNA() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.COMUNAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMUNA' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.COMUNAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REGION_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.REGION_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REGION_CODE' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.REGION_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PHONE1() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PHONE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHONE1' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.PHONE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PHONE2() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PHONE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHONE2' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.PHONE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CLAIM_CREATED_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_CREATED_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLAIM_CREATED_DATE' in table 'TRANSACTION_DATA_RECORD' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_CREATED_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRODUCT_PURCHASE_INVOICE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_PURCHASE_INVOICEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCT_PURCHASE_INVOICE' in table 'TRANSACTION_DATA_RECORD" & _
                            "' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_PURCHASE_INVOICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RETAILER() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.RETAILERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RETAILER' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.RETAILERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRODUCT_SALES_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_SALES_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCT_SALES_DATE' in table 'TRANSACTION_DATA_RECORD' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_SALES_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRODUCT_SALES_PRICE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_SALES_PRICEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCT_SALES_PRICE' in table 'TRANSACTION_DATA_RECORD' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_SALES_PRICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PROBLEM_DESCRIPTION() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PROBLEM_DESCRIPTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROBLEM_DESCRIPTION' in table 'TRANSACTION_DATA_RECORD' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.PROBLEM_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TECHNICAL_REPORT() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.TECHNICAL_REPORTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TECHNICAL_REPORT' in table 'TRANSACTION_DATA_RECORD' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.TECHNICAL_REPORTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CLAIM_ACTIVITY_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_ACTIVITY_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLAIM_ACTIVITY_CODE' in table 'TRANSACTION_DATA_RECORD' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_ACTIVITY_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REPAIR_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.REPAIR_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REPAIR_DATE' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableTRANSACTION_DATA_RECORD.REPAIR_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LABOR_AMOUNT() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.LABOR_AMOUNTColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LABOR_AMOUNT' in table 'TRANSACTION_DATA_RECORD' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableTRANSACTION_DATA_RECORD.LABOR_AMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRIP_AMOUNT() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.TRIP_AMOUNTColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIP_AMOUNT' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableTRANSACTION_DATA_RECORD.TRIP_AMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SHIPPING() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.SHIPPINGColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPPING' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableTRANSACTION_DATA_RECORD.SHIPPINGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PICKUP_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.PICKUP_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKUP_DATE' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableTRANSACTION_DATA_RECORD.PICKUP_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IN_HOME_VISIT_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.IN_HOME_VISIT_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IN_HOME_VISIT_DATE' in table 'TRANSACTION_DATA_RECORD' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableTRANSACTION_DATA_RECORD.IN_HOME_VISIT_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VISIT_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.VISIT_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VISIT_DATE' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableTRANSACTION_DATA_RECORD.VISIT_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DEFECT_REASON_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.DEFECT_REASON_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEFECT_REASON_CODE' in table 'TRANSACTION_DATA_RECORD' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.DEFECT_REASON_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXPECTED_REPAIR_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.EXPECTED_REPAIR_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXPECTED_REPAIR_DATE' in table 'TRANSACTION_DATA_RECORD' is" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableTRANSACTION_DATA_RECORD.EXPECTED_REPAIR_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property E_TICKET() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.E_TICKETColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'E_TICKET' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.E_TICKETColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AWB() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.AWBColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AWB' in table 'TRANSACTION_DATA_RECORD' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableTRANSACTION_DATA_RECORD.AWBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COLLECT_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.COLLECT_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COLLECT_DATE' in table 'TRANSACTION_DATA_RECORD' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableTRANSACTION_DATA_RECORD.COLLECT_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSACTION_DATA_RECORD_Id() As Integer
            Get
                Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.TRANSACTION_DATA_RECORD_IdColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableTRANSACTION_DATA_RECORD.TRANSACTION_DATA_RECORD_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ElitaClaim_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTRANSACTION_DATA_RECORD.ElitaClaim_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ElitaClaim_Id' in table 'TRANSACTION_DATA_RECORD' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableTRANSACTION_DATA_RECORD.ElitaClaim_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ElitaClaimRow() As ElitaClaimRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ElitaClaim_TRANSACTION_DATA_RECORD")), ElitaClaimRow)
            End Get
            Set(ByVal value As ElitaClaimRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("ElitaClaim_TRANSACTION_DATA_RECORD"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCLAIM_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.CLAIM_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCLAIM_NUMBERNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERVICE_CENTER_CODENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.SERVICE_CENTER_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERVICE_CENTER_CODENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.SERVICE_CENTER_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREVERSE_LOGISTICSNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.REVERSE_LOGISTICSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREVERSE_LOGISTICSNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.REVERSE_LOGISTICSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOVERAGE_TYPENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.COVERAGE_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOVERAGE_TYPENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.COVERAGE_TYPEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDEALER_CODENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.DEALER_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDEALER_CODENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.DEALER_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDEALER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.DEALER_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDEALER_NAMENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.DEALER_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERVICE_TYPENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.SERVICE_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERVICE_TYPENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.SERVICE_TYPEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMETHOD_OF_REPAIR_CODENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.METHOD_OF_REPAIR_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMETHOD_OF_REPAIR_CODENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.METHOD_OF_REPAIR_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIAL_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.SERIAL_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIAL_NUMBERNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.SERIAL_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTOMER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTOMER_NAMENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDENTIFICATION_NUMBERNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.IDENTIFICATION_NUMBERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDENTIFICATION_NUMBERNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.IDENTIFICATION_NUMBERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTOMER_ADDRESS1Null() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_ADDRESS1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTOMER_ADDRESS1Null()
            Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_ADDRESS1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCUSTOMER_ADDRESS2Null() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_ADDRESS2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCUSTOMER_ADDRESS2Null()
            Me(Me.tableTRANSACTION_DATA_RECORD.CUSTOMER_ADDRESS2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMUNANull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.COMUNAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMUNANull()
            Me(Me.tableTRANSACTION_DATA_RECORD.COMUNAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREGION_CODENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.REGION_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREGION_CODENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.REGION_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPHONE1Null() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.PHONE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPHONE1Null()
            Me(Me.tableTRANSACTION_DATA_RECORD.PHONE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPHONE2Null() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.PHONE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPHONE2Null()
            Me(Me.tableTRANSACTION_DATA_RECORD.PHONE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEMAILNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCLAIM_CREATED_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.CLAIM_CREATED_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCLAIM_CREATED_DATENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_CREATED_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRODUCT_PURCHASE_INVOICENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_PURCHASE_INVOICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRODUCT_PURCHASE_INVOICENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_PURCHASE_INVOICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRETAILERNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.RETAILERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRETAILERNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.RETAILERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRODUCT_SALES_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_SALES_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRODUCT_SALES_DATENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_SALES_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRODUCT_SALES_PRICENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_SALES_PRICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRODUCT_SALES_PRICENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.PRODUCT_SALES_PRICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPROBLEM_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.PROBLEM_DESCRIPTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPROBLEM_DESCRIPTIONNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.PROBLEM_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTECHNICAL_REPORTNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.TECHNICAL_REPORTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTECHNICAL_REPORTNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.TECHNICAL_REPORTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCLAIM_ACTIVITY_CODENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.CLAIM_ACTIVITY_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCLAIM_ACTIVITY_CODENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.CLAIM_ACTIVITY_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREPAIR_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.REPAIR_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREPAIR_DATENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.REPAIR_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLABOR_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.LABOR_AMOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLABOR_AMOUNTNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.LABOR_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRIP_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.TRIP_AMOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRIP_AMOUNTNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.TRIP_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSHIPPINGNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.SHIPPINGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSHIPPINGNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.SHIPPINGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPICKUP_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.PICKUP_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPICKUP_DATENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.PICKUP_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIN_HOME_VISIT_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.IN_HOME_VISIT_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIN_HOME_VISIT_DATENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.IN_HOME_VISIT_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVISIT_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.VISIT_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVISIT_DATENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.VISIT_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDEFECT_REASON_CODENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.DEFECT_REASON_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDEFECT_REASON_CODENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.DEFECT_REASON_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEXPECTED_REPAIR_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.EXPECTED_REPAIR_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEXPECTED_REPAIR_DATENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.EXPECTED_REPAIR_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsE_TICKETNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.E_TICKETColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetE_TICKETNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.E_TICKETColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAWBNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.AWBColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAWBNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.AWBColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOLLECT_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.COLLECT_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOLLECT_DATENull()
            Me(Me.tableTRANSACTION_DATA_RECORD.COLLECT_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsElitaClaim_IdNull() As Boolean
            Return Me.IsNull(Me.tableTRANSACTION_DATA_RECORD.ElitaClaim_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetElitaClaim_IdNull()
            Me(Me.tableTRANSACTION_DATA_RECORD.ElitaClaim_IdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetEXTENDED_CLAIM_STATUSRows() As EXTENDED_CLAIM_STATUSRow()
            If (Me.Table.ChildRelations("TRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS") Is Nothing) Then
                Return New EXTENDED_CLAIM_STATUSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("TRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS")), EXTENDED_CLAIM_STATUSRow())
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetPARTS_LISTRows() As PARTS_LISTRow()
            If (Me.Table.ChildRelations("TRANSACTION_DATA_RECORD_PARTS_LIST") Is Nothing) Then
                Return New PARTS_LISTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("TRANSACTION_DATA_RECORD_PARTS_LIST")), PARTS_LISTRow())
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetFOLLOWUPRows() As FOLLOWUPRow()
            If (Me.Table.ChildRelations("TRANSACTION_DATA_RECORD_FOLLOWUP") Is Nothing) Then
                Return New FOLLOWUPRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("TRANSACTION_DATA_RECORD_FOLLOWUP")), FOLLOWUPRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EXTENDED_CLAIM_STATUSRow
        Inherits Global.System.Data.DataRow

        Private tableEXTENDED_CLAIM_STATUS As EXTENDED_CLAIM_STATUSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEXTENDED_CLAIM_STATUS = CType(Me.Table, EXTENDED_CLAIM_STATUSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PARENT_ITEM_NUMBER() As Integer
            Get
                Return CType(Me(Me.tableEXTENDED_CLAIM_STATUS.PARENT_ITEM_NUMBERColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableEXTENDED_CLAIM_STATUS.PARENT_ITEM_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEM_NUMBER() As Integer
            Get
                Return CType(Me(Me.tableEXTENDED_CLAIM_STATUS.ITEM_NUMBERColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableEXTENDED_CLAIM_STATUS.ITEM_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTENDED_CLAIM_STATUS_CODE() As String
            Get
                Return CType(Me(Me.tableEXTENDED_CLAIM_STATUS.EXTENDED_CLAIM_STATUS_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableEXTENDED_CLAIM_STATUS.EXTENDED_CLAIM_STATUS_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTENDED_CLAIM_STATUS_DATE() As Date
            Get
                Return CType(Me(Me.tableEXTENDED_CLAIM_STATUS.EXTENDED_CLAIM_STATUS_DATEColumn), Date)
            End Get
            Set(ByVal value As Date)
                Me(Me.tableEXTENDED_CLAIM_STATUS.EXTENDED_CLAIM_STATUS_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXTENDED_CLAIM_STATUS_COMMENT() As String
            Get
                Try
                    Return CType(Me(Me.tableEXTENDED_CLAIM_STATUS.EXTENDED_CLAIM_STATUS_COMMENTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTENDED_CLAIM_STATUS_COMMENT' in table 'EXTENDED_CLAIM_STA" & _
                            "TUS' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableEXTENDED_CLAIM_STATUS.EXTENDED_CLAIM_STATUS_COMMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSACTION_DATA_RECORD_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableEXTENDED_CLAIM_STATUS.TRANSACTION_DATA_RECORD_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSACTION_DATA_RECORD_Id' in table 'EXTENDED_CLAIM_STATUS" & _
                            "' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableEXTENDED_CLAIM_STATUS.TRANSACTION_DATA_RECORD_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSACTION_DATA_RECORDRow() As TRANSACTION_DATA_RECORDRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("TRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS")), TRANSACTION_DATA_RECORDRow)
            End Get
            Set(ByVal value As TRANSACTION_DATA_RECORDRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("TRANSACTION_DATA_RECORD_EXTENDED_CLAIM_STATUS"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEXTENDED_CLAIM_STATUS_COMMENTNull() As Boolean
            Return Me.IsNull(Me.tableEXTENDED_CLAIM_STATUS.EXTENDED_CLAIM_STATUS_COMMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEXTENDED_CLAIM_STATUS_COMMENTNull()
            Me(Me.tableEXTENDED_CLAIM_STATUS.EXTENDED_CLAIM_STATUS_COMMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRANSACTION_DATA_RECORD_IdNull() As Boolean
            Return Me.IsNull(Me.tableEXTENDED_CLAIM_STATUS.TRANSACTION_DATA_RECORD_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRANSACTION_DATA_RECORD_IdNull()
            Me(Me.tableEXTENDED_CLAIM_STATUS.TRANSACTION_DATA_RECORD_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PARTS_LISTRow
        Inherits Global.System.Data.DataRow

        Private tablePARTS_LIST As PARTS_LISTDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePARTS_LIST = CType(Me.Table, PARTS_LISTDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PARENT_ITEM_NUMBER() As Integer
            Get
                Return CType(Me(Me.tablePARTS_LIST.PARENT_ITEM_NUMBERColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tablePARTS_LIST.PARENT_ITEM_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEM_NUMBER() As Integer
            Get
                Return CType(Me(Me.tablePARTS_LIST.ITEM_NUMBERColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tablePARTS_LIST.ITEM_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PART_CODE() As String
            Get
                Return CType(Me(Me.tablePARTS_LIST.PART_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tablePARTS_LIST.PART_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PART_COST() As Decimal
            Get
                Return CType(Me(Me.tablePARTS_LIST.PART_COSTColumn), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tablePARTS_LIST.PART_COSTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PART_DEFECT() As String
            Get
                Try
                    Return CType(Me(Me.tablePARTS_LIST.PART_DEFECTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PART_DEFECT' in table 'PARTS_LIST' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tablePARTS_LIST.PART_DEFECTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PART_SOLUTION() As String
            Get
                Try
                    Return CType(Me(Me.tablePARTS_LIST.PART_SOLUTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PART_SOLUTION' in table 'PARTS_LIST' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tablePARTS_LIST.PART_SOLUTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IN_STOCK() As String
            Get
                Return CType(Me(Me.tablePARTS_LIST.IN_STOCKColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tablePARTS_LIST.IN_STOCKColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PART_DESCRIPTION() As String
            Get
                Try
                    Return CType(Me(Me.tablePARTS_LIST.PART_DESCRIPTIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PART_DESCRIPTION' in table 'PARTS_LIST' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tablePARTS_LIST.PART_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSACTION_DATA_RECORD_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePARTS_LIST.TRANSACTION_DATA_RECORD_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSACTION_DATA_RECORD_Id' in table 'PARTS_LIST' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tablePARTS_LIST.TRANSACTION_DATA_RECORD_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSACTION_DATA_RECORDRow() As TRANSACTION_DATA_RECORDRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("TRANSACTION_DATA_RECORD_PARTS_LIST")), TRANSACTION_DATA_RECORDRow)
            End Get
            Set(ByVal value As TRANSACTION_DATA_RECORDRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("TRANSACTION_DATA_RECORD_PARTS_LIST"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPART_DEFECTNull() As Boolean
            Return Me.IsNull(Me.tablePARTS_LIST.PART_DEFECTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPART_DEFECTNull()
            Me(Me.tablePARTS_LIST.PART_DEFECTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPART_SOLUTIONNull() As Boolean
            Return Me.IsNull(Me.tablePARTS_LIST.PART_SOLUTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPART_SOLUTIONNull()
            Me(Me.tablePARTS_LIST.PART_SOLUTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPART_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tablePARTS_LIST.PART_DESCRIPTIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPART_DESCRIPTIONNull()
            Me(Me.tablePARTS_LIST.PART_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRANSACTION_DATA_RECORD_IdNull() As Boolean
            Return Me.IsNull(Me.tablePARTS_LIST.TRANSACTION_DATA_RECORD_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRANSACTION_DATA_RECORD_IdNull()
            Me(Me.tablePARTS_LIST.TRANSACTION_DATA_RECORD_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FOLLOWUPRow
        Inherits Global.System.Data.DataRow

        Private tableFOLLOWUP As FOLLOWUPDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFOLLOWUP = CType(Me.Table, FOLLOWUPDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PARENT_ITEM_NUMBER() As Integer
            Get
                Return CType(Me(Me.tableFOLLOWUP.PARENT_ITEM_NUMBERColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableFOLLOWUP.PARENT_ITEM_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ITEM_NUMBER() As Integer
            Get
                Return CType(Me(Me.tableFOLLOWUP.ITEM_NUMBERColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableFOLLOWUP.ITEM_NUMBERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREATE_DATE() As Date
            Get
                Return CType(Me(Me.tableFOLLOWUP.CREATE_DATEColumn), Date)
            End Get
            Set(ByVal value As Date)
                Me(Me.tableFOLLOWUP.CREATE_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMMENT_TYPE_CODE() As String
            Get
                Return CType(Me(Me.tableFOLLOWUP.COMMENT_TYPE_CODEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableFOLLOWUP.COMMENT_TYPE_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMMENTS() As String
            Get
                Return CType(Me(Me.tableFOLLOWUP.COMMENTSColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableFOLLOWUP.COMMENTSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CALLER_NAME() As String
            Get
                Return CType(Me(Me.tableFOLLOWUP.CALLER_NAMEColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableFOLLOWUP.CALLER_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSACTION_DATA_RECORD_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableFOLLOWUP.TRANSACTION_DATA_RECORD_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSACTION_DATA_RECORD_Id' in table 'FOLLOWUP' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableFOLLOWUP.TRANSACTION_DATA_RECORD_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRANSACTION_DATA_RECORDRow() As TRANSACTION_DATA_RECORDRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("TRANSACTION_DATA_RECORD_FOLLOWUP")), TRANSACTION_DATA_RECORDRow)
            End Get
            Set(ByVal value As TRANSACTION_DATA_RECORDRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("TRANSACTION_DATA_RECORD_FOLLOWUP"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRANSACTION_DATA_RECORD_IdNull() As Boolean
            Return Me.IsNull(Me.tableFOLLOWUP.TRANSACTION_DATA_RECORD_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRANSACTION_DATA_RECORD_IdNull()
            Me(Me.tableFOLLOWUP.TRANSACTION_DATA_RECORD_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ElitaClaimRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ElitaClaimRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ElitaClaimRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ElitaClaimRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class TRANSACTION_HEADERRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As TRANSACTION_HEADERRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As TRANSACTION_HEADERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As TRANSACTION_HEADERRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class TRANSACTION_DATA_RECORDRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As TRANSACTION_DATA_RECORDRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As TRANSACTION_DATA_RECORDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As TRANSACTION_DATA_RECORDRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class EXTENDED_CLAIM_STATUSRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As EXTENDED_CLAIM_STATUSRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As EXTENDED_CLAIM_STATUSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As EXTENDED_CLAIM_STATUSRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class PARTS_LISTRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As PARTS_LISTRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As PARTS_LISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As PARTS_LISTRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FOLLOWUPRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FOLLOWUPRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FOLLOWUPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FOLLOWUPRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
