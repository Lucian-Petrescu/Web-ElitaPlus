'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'
'This source code was auto-generated by xsd, Version=4.0.30319.1.
'

'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("VSCEnrollmentDs"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class VSCEnrollmentDs
    Inherits Global.System.Data.DataSet

    Private tableVSCEnrollment As VSCEnrollmentDataTable

    Private tableCustomer As CustomerDataTable

    Private tableOptional_Coverage As Optional_CoverageDataTable

    Private tableCredit_Card_Info As Credit_Card_InfoDataTable

    Private tableBank_Account_Info As Bank_Account_InfoDataTable

    Private relationVSCEnrollment_Customer As Global.System.Data.DataRelation

    Private relationVSCEnrollment_Optional_Coverage As Global.System.Data.DataRelation

    Private relationVSCEnrollment_Credit_Card_Info As Global.System.Data.DataRelation

    Private relationVSCEnrollment_Bank_Account_Info As Global.System.Data.DataRelation

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VSCEnrollment")) Is Nothing) Then
                MyBase.Tables.Add(New VSCEnrollmentDataTable(ds.Tables("VSCEnrollment")))
            End If
            If (Not (ds.Tables("Customer")) Is Nothing) Then
                MyBase.Tables.Add(New CustomerDataTable(ds.Tables("Customer")))
            End If
            If (Not (ds.Tables("Optional_Coverage")) Is Nothing) Then
                MyBase.Tables.Add(New Optional_CoverageDataTable(ds.Tables("Optional_Coverage")))
            End If
            If (Not (ds.Tables("Credit_Card_Info")) Is Nothing) Then
                MyBase.Tables.Add(New Credit_Card_InfoDataTable(ds.Tables("Credit_Card_Info")))
            End If
            If (Not (ds.Tables("Bank_Account_Info")) Is Nothing) Then
                MyBase.Tables.Add(New Bank_Account_InfoDataTable(ds.Tables("Bank_Account_Info")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property VSCEnrollment() As VSCEnrollmentDataTable
        Get
            Return Me.tableVSCEnrollment
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Customer() As CustomerDataTable
        Get
            Return Me.tableCustomer
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Optional_Coverage() As Optional_CoverageDataTable
        Get
            Return Me.tableOptional_Coverage
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Credit_Card_Info() As Credit_Card_InfoDataTable
        Get
            Return Me.tableCredit_Card_Info
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Bank_Account_Info() As Bank_Account_InfoDataTable
        Get
            Return Me.tableBank_Account_Info
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(ByVal value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As VSCEnrollmentDs = CType(MyBase.Clone, VSCEnrollmentDs)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("VSCEnrollment")) Is Nothing) Then
                MyBase.Tables.Add(New VSCEnrollmentDataTable(ds.Tables("VSCEnrollment")))
            End If
            If (Not (ds.Tables("Customer")) Is Nothing) Then
                MyBase.Tables.Add(New CustomerDataTable(ds.Tables("Customer")))
            End If
            If (Not (ds.Tables("Optional_Coverage")) Is Nothing) Then
                MyBase.Tables.Add(New Optional_CoverageDataTable(ds.Tables("Optional_Coverage")))
            End If
            If (Not (ds.Tables("Credit_Card_Info")) Is Nothing) Then
                MyBase.Tables.Add(New Credit_Card_InfoDataTable(ds.Tables("Credit_Card_Info")))
            End If
            If (Not (ds.Tables("Bank_Account_Info")) Is Nothing) Then
                MyBase.Tables.Add(New Bank_Account_InfoDataTable(ds.Tables("Bank_Account_Info")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVSCEnrollment = CType(MyBase.Tables("VSCEnrollment"), VSCEnrollmentDataTable)
        If (initTable = True) Then
            If (Not (Me.tableVSCEnrollment) Is Nothing) Then
                Me.tableVSCEnrollment.InitVars()
            End If
        End If
        Me.tableCustomer = CType(MyBase.Tables("Customer"), CustomerDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCustomer) Is Nothing) Then
                Me.tableCustomer.InitVars()
            End If
        End If
        Me.tableOptional_Coverage = CType(MyBase.Tables("Optional_Coverage"), Optional_CoverageDataTable)
        If (initTable = True) Then
            If (Not (Me.tableOptional_Coverage) Is Nothing) Then
                Me.tableOptional_Coverage.InitVars()
            End If
        End If
        Me.tableCredit_Card_Info = CType(MyBase.Tables("Credit_Card_Info"), Credit_Card_InfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCredit_Card_Info) Is Nothing) Then
                Me.tableCredit_Card_Info.InitVars()
            End If
        End If
        Me.tableBank_Account_Info = CType(MyBase.Tables("Bank_Account_Info"), Bank_Account_InfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableBank_Account_Info) Is Nothing) Then
                Me.tableBank_Account_Info.InitVars()
            End If
        End If
        Me.relationVSCEnrollment_Customer = Me.Relations("VSCEnrollment_Customer")
        Me.relationVSCEnrollment_Optional_Coverage = Me.Relations("VSCEnrollment_Optional_Coverage")
        Me.relationVSCEnrollment_Credit_Card_Info = Me.Relations("VSCEnrollment_Credit_Card_Info")
        Me.relationVSCEnrollment_Bank_Account_Info = Me.Relations("VSCEnrollment_Bank_Account_Info")
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "VSCEnrollmentDs"
        Me.Prefix = ""
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVSCEnrollment = New VSCEnrollmentDataTable()
        MyBase.Tables.Add(Me.tableVSCEnrollment)
        Me.tableCustomer = New CustomerDataTable()
        MyBase.Tables.Add(Me.tableCustomer)
        Me.tableOptional_Coverage = New Optional_CoverageDataTable()
        MyBase.Tables.Add(Me.tableOptional_Coverage)
        Me.tableCredit_Card_Info = New Credit_Card_InfoDataTable()
        MyBase.Tables.Add(Me.tableCredit_Card_Info)
        Me.tableBank_Account_Info = New Bank_Account_InfoDataTable()
        MyBase.Tables.Add(Me.tableBank_Account_Info)
        Dim fkc As Global.System.Data.ForeignKeyConstraint
        fkc = New Global.System.Data.ForeignKeyConstraint("VSCEnrollment_Customer", New Global.System.Data.DataColumn() {Me.tableVSCEnrollment.VSCEnrollment_IdColumn}, New Global.System.Data.DataColumn() {Me.tableCustomer.VSCEnrollment_IdColumn})
        Me.tableCustomer.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("VSCEnrollment_Optional_Coverage", New Global.System.Data.DataColumn() {Me.tableVSCEnrollment.VSCEnrollment_IdColumn}, New Global.System.Data.DataColumn() {Me.tableOptional_Coverage.VSCEnrollment_IdColumn})
        Me.tableOptional_Coverage.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("VSCEnrollment_Credit_Card_Info", New Global.System.Data.DataColumn() {Me.tableVSCEnrollment.VSCEnrollment_IdColumn}, New Global.System.Data.DataColumn() {Me.tableCredit_Card_Info.VSCEnrollment_IdColumn})
        Me.tableCredit_Card_Info.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("VSCEnrollment_Bank_Account_Info", New Global.System.Data.DataColumn() {Me.tableVSCEnrollment.VSCEnrollment_IdColumn}, New Global.System.Data.DataColumn() {Me.tableBank_Account_Info.VSCEnrollment_IdColumn})
        Me.tableBank_Account_Info.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        Me.relationVSCEnrollment_Customer = New Global.System.Data.DataRelation("VSCEnrollment_Customer", New Global.System.Data.DataColumn() {Me.tableVSCEnrollment.VSCEnrollment_IdColumn}, New Global.System.Data.DataColumn() {Me.tableCustomer.VSCEnrollment_IdColumn}, False)
        Me.relationVSCEnrollment_Customer.Nested = True
        Me.Relations.Add(Me.relationVSCEnrollment_Customer)
        Me.relationVSCEnrollment_Optional_Coverage = New Global.System.Data.DataRelation("VSCEnrollment_Optional_Coverage", New Global.System.Data.DataColumn() {Me.tableVSCEnrollment.VSCEnrollment_IdColumn}, New Global.System.Data.DataColumn() {Me.tableOptional_Coverage.VSCEnrollment_IdColumn}, False)
        Me.relationVSCEnrollment_Optional_Coverage.Nested = True
        Me.Relations.Add(Me.relationVSCEnrollment_Optional_Coverage)
        Me.relationVSCEnrollment_Credit_Card_Info = New Global.System.Data.DataRelation("VSCEnrollment_Credit_Card_Info", New Global.System.Data.DataColumn() {Me.tableVSCEnrollment.VSCEnrollment_IdColumn}, New Global.System.Data.DataColumn() {Me.tableCredit_Card_Info.VSCEnrollment_IdColumn}, False)
        Me.relationVSCEnrollment_Credit_Card_Info.Nested = True
        Me.Relations.Add(Me.relationVSCEnrollment_Credit_Card_Info)
        Me.relationVSCEnrollment_Bank_Account_Info = New Global.System.Data.DataRelation("VSCEnrollment_Bank_Account_Info", New Global.System.Data.DataColumn() {Me.tableVSCEnrollment.VSCEnrollment_IdColumn}, New Global.System.Data.DataColumn() {Me.tableBank_Account_Info.VSCEnrollment_IdColumn}, False)
        Me.relationVSCEnrollment_Bank_Account_Info.Nested = True
        Me.Relations.Add(Me.relationVSCEnrollment_Bank_Account_Info)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeVSCEnrollment() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCustomer() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeOptional_Coverage() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCredit_Card_Info() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeBank_Account_Info() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As VSCEnrollmentDs = New VSCEnrollmentDs()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub VSCEnrollmentRowChangeEventHandler(ByVal sender As Object, ByVal e As VSCEnrollmentRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CustomerRowChangeEventHandler(ByVal sender As Object, ByVal e As CustomerRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub Optional_CoverageRowChangeEventHandler(ByVal sender As Object, ByVal e As Optional_CoverageRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub Credit_Card_InfoRowChangeEventHandler(ByVal sender As Object, ByVal e As Credit_Card_InfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub Bank_Account_InfoRowChangeEventHandler(ByVal sender As Object, ByVal e As Bank_Account_InfoRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class VSCEnrollmentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnCertificate_Number As Global.System.Data.DataColumn

        Private columnAddress As Global.System.Data.DataColumn

        Private columnCity As Global.System.Data.DataColumn

        Private column_Region As Global.System.Data.DataColumn

        Private columnPostal_Code As Global.System.Data.DataColumn

        Private columnCountry_Code As Global.System.Data.DataColumn

        Private columnHome_Phone As Global.System.Data.DataColumn

        Private columnVehicle_Year As Global.System.Data.DataColumn

        Private columnVehicle_Make As Global.System.Data.DataColumn

        Private columnVehicle_Model As Global.System.Data.DataColumn

        Private columnEngine_Version As Global.System.Data.DataColumn

        Private columnVehicle_Mileage As Global.System.Data.DataColumn

        Private columnVIN As Global.System.Data.DataColumn

        Private columnVehicle_Purchase_Price As Global.System.Data.DataColumn

        Private columnVehicle_Purchase_Date As Global.System.Data.DataColumn

        Private columnVehicle_In_Service_Date As Global.System.Data.DataColumn

        Private columnVehicle_Delivery_Date As Global.System.Data.DataColumn

        Private columnPlan_Code As Global.System.Data.DataColumn

        Private columnPlan_Amount As Global.System.Data.DataColumn

        Private columnQuote_Item_Number As Global.System.Data.DataColumn

        Private columnTerm_Months As Global.System.Data.DataColumn

        Private columnTerm_Miles As Global.System.Data.DataColumn

        Private columnDeductible As Global.System.Data.DataColumn

        Private columnDealer_Code As Global.System.Data.DataColumn

        Private columnAgent_Number As Global.System.Data.DataColumn

        Private columnWarranty_Sale_Date As Global.System.Data.DataColumn

        Private columnQuote_Number As Global.System.Data.DataColumn

        Private columnVehicle_License_Tag As Global.System.Data.DataColumn

        Private columnDocument_Type As Global.System.Data.DataColumn

        Private columnIdentity_document_No As Global.System.Data.DataColumn

        Private columnRG_No As Global.System.Data.DataColumn

        Private columnID_Type As Global.System.Data.DataColumn

        Private columnIssuing_agency As Global.System.Data.DataColumn

        Private columnDocument_Issue_Date As Global.System.Data.DataColumn

        Private columnBirth_Date As Global.System.Data.DataColumn

        Private columnWork_Phone As Global.System.Data.DataColumn

        Private columnCollection_Method_Code As Global.System.Data.DataColumn

        Private columnPayment_Instrument_Code As Global.System.Data.DataColumn

        Private columnInstallments_Number As Global.System.Data.DataColumn

        Private columnPayment_Authoriztion_Num As Global.System.Data.DataColumn

        Private columnExternal_Car_Code As Global.System.Data.DataColumn

        Private columnIs_CreditCard_AuthReq As Global.System.Data.DataColumn

        Private columnSales_Tax As Global.System.Data.DataColumn

        Private columnValidate_Only As Global.System.Data.DataColumn

        Private columnVSCEnrollment_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "VSCEnrollment"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Certificate_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCertificate_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCity
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property _RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_Region
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Postal_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostal_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Country_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Home_PhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHome_Phone
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_Year
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_MakeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_Make
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_ModelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_Model
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Engine_VersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEngine_Version
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_MileageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_Mileage
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_Purchase_PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_Purchase_Price
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_Purchase_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_Purchase_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_In_Service_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_In_Service_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_Delivery_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_Delivery_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Plan_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlan_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Plan_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlan_Amount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Quote_Item_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuote_Item_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Term_MonthsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerm_Months
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Term_MilesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerm_Miles
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DeductibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeductible
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Dealer_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDealer_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Agent_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgent_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Warranty_Sale_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarranty_Sale_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Quote_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuote_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Vehicle_License_TagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicle_License_Tag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Document_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_Type
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Identity_document_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdentity_document_No
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RG_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG_No
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ID_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Type
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Issuing_agencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssuing_agency
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Document_Issue_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocument_Issue_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Birth_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBirth_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Work_PhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWork_Phone
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Collection_Method_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollection_Method_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Payment_Instrument_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_Instrument_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Installments_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstallments_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Payment_Authoriztion_NumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayment_Authoriztion_Num
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property External_Car_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExternal_Car_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Is_CreditCard_AuthReqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIs_CreditCard_AuthReq
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Sales_TaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSales_Tax
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Validate_OnlyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidate_Only
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VSCEnrollment_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVSCEnrollment_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As VSCEnrollmentRow
            Get
                Return CType(Me.Rows(index), VSCEnrollmentRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event VSCEnrollmentRowChanging As VSCEnrollmentRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event VSCEnrollmentRowChanged As VSCEnrollmentRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event VSCEnrollmentRowDeleting As VSCEnrollmentRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event VSCEnrollmentRowDeleted As VSCEnrollmentRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddVSCEnrollmentRow(ByVal row As VSCEnrollmentRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddVSCEnrollmentRow( _
                    ByVal Certificate_Number As String, _
                    ByVal Address As String, _
                    ByVal City As String, _
                    ByVal _Region As String, _
                    ByVal Postal_Code As String, _
                    ByVal Country_Code As String, _
                    ByVal Home_Phone As String, _
                    ByVal Vehicle_Year As Integer, _
                    ByVal Vehicle_Make As String, _
                    ByVal Vehicle_Model As String, _
                    ByVal Engine_Version As String, _
                    ByVal Vehicle_Mileage As Integer, _
                    ByVal VIN As String, _
                    ByVal Vehicle_Purchase_Price As Decimal, _
                    ByVal Vehicle_Purchase_Date As Date, _
                    ByVal Vehicle_In_Service_Date As Date, _
                    ByVal Vehicle_Delivery_Date As Date, _
                    ByVal Plan_Code As String, _
                    ByVal Plan_Amount As Double, _
                    ByVal Quote_Item_Number As Integer, _
                    ByVal Term_Months As Integer, _
                    ByVal Term_Miles As Integer, _
                    ByVal Deductible As Decimal, _
                    ByVal Dealer_Code As String, _
                    ByVal Agent_Number As String, _
                    ByVal Warranty_Sale_Date As Date, _
                    ByVal Quote_Number As String, _
                    ByVal Vehicle_License_Tag As String, _
                    ByVal Document_Type As String, _
                    ByVal Identity_document_No As String, _
                    ByVal RG_No As String, _
                    ByVal ID_Type As String, _
                    ByVal Issuing_agency As String, _
                    ByVal Document_Issue_Date As Date, _
                    ByVal Birth_Date As Date, _
                    ByVal Work_Phone As String, _
                    ByVal Collection_Method_Code As String, _
                    ByVal Payment_Instrument_Code As String, _
                    ByVal Installments_Number As Integer, _
                    ByVal Payment_Authoriztion_Num As String, _
                    ByVal External_Car_Code As String, _
                    ByVal Is_CreditCard_AuthReq As String, _
                    ByVal Sales_Tax As Double, _
                    ByVal Validate_Only As String) As VSCEnrollmentRow
            Dim rowVSCEnrollmentRow As VSCEnrollmentRow = CType(Me.NewRow, VSCEnrollmentRow)
            Dim columnValuesArray() As Object = New Object() {Certificate_Number, Address, City, _Region, Postal_Code, Country_Code, Home_Phone, Vehicle_Year, Vehicle_Make, Vehicle_Model, Engine_Version, Vehicle_Mileage, VIN, Vehicle_Purchase_Price, Vehicle_Purchase_Date, Vehicle_In_Service_Date, Vehicle_Delivery_Date, Plan_Code, Plan_Amount, Quote_Item_Number, Term_Months, Term_Miles, Deductible, Dealer_Code, Agent_Number, Warranty_Sale_Date, Quote_Number, Vehicle_License_Tag, Document_Type, Identity_document_No, RG_No, ID_Type, Issuing_agency, Document_Issue_Date, Birth_Date, Work_Phone, Collection_Method_Code, Payment_Instrument_Code, Installments_Number, Payment_Authoriztion_Num, External_Car_Code, Is_CreditCard_AuthReq, Sales_Tax, Validate_Only, Nothing}
            rowVSCEnrollmentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVSCEnrollmentRow)
            Return rowVSCEnrollmentRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VSCEnrollmentDataTable = CType(MyBase.Clone, VSCEnrollmentDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VSCEnrollmentDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCertificate_Number = MyBase.Columns("Certificate_Number")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnCity = MyBase.Columns("City")
            Me.column_Region = MyBase.Columns("Region")
            Me.columnPostal_Code = MyBase.Columns("Postal_Code")
            Me.columnCountry_Code = MyBase.Columns("Country_Code")
            Me.columnHome_Phone = MyBase.Columns("Home_Phone")
            Me.columnVehicle_Year = MyBase.Columns("Vehicle_Year")
            Me.columnVehicle_Make = MyBase.Columns("Vehicle_Make")
            Me.columnVehicle_Model = MyBase.Columns("Vehicle_Model")
            Me.columnEngine_Version = MyBase.Columns("Engine_Version")
            Me.columnVehicle_Mileage = MyBase.Columns("Vehicle_Mileage")
            Me.columnVIN = MyBase.Columns("VIN")
            Me.columnVehicle_Purchase_Price = MyBase.Columns("Vehicle_Purchase_Price")
            Me.columnVehicle_Purchase_Date = MyBase.Columns("Vehicle_Purchase_Date")
            Me.columnVehicle_In_Service_Date = MyBase.Columns("Vehicle_In_Service_Date")
            Me.columnVehicle_Delivery_Date = MyBase.Columns("Vehicle_Delivery_Date")
            Me.columnPlan_Code = MyBase.Columns("Plan_Code")
            Me.columnPlan_Amount = MyBase.Columns("Plan_Amount")
            Me.columnQuote_Item_Number = MyBase.Columns("Quote_Item_Number")
            Me.columnTerm_Months = MyBase.Columns("Term_Months")
            Me.columnTerm_Miles = MyBase.Columns("Term_Miles")
            Me.columnDeductible = MyBase.Columns("Deductible")
            Me.columnDealer_Code = MyBase.Columns("Dealer_Code")
            Me.columnAgent_Number = MyBase.Columns("Agent_Number")
            Me.columnWarranty_Sale_Date = MyBase.Columns("Warranty_Sale_Date")
            Me.columnQuote_Number = MyBase.Columns("Quote_Number")
            Me.columnVehicle_License_Tag = MyBase.Columns("Vehicle_License_Tag")
            Me.columnDocument_Type = MyBase.Columns("Document_Type")
            Me.columnIdentity_document_No = MyBase.Columns("Identity_document_No")
            Me.columnRG_No = MyBase.Columns("RG_No")
            Me.columnID_Type = MyBase.Columns("ID_Type")
            Me.columnIssuing_agency = MyBase.Columns("Issuing_agency")
            Me.columnDocument_Issue_Date = MyBase.Columns("Document_Issue_Date")
            Me.columnBirth_Date = MyBase.Columns("Birth_Date")
            Me.columnWork_Phone = MyBase.Columns("Work_Phone")
            Me.columnCollection_Method_Code = MyBase.Columns("Collection_Method_Code")
            Me.columnPayment_Instrument_Code = MyBase.Columns("Payment_Instrument_Code")
            Me.columnInstallments_Number = MyBase.Columns("Installments_Number")
            Me.columnPayment_Authoriztion_Num = MyBase.Columns("Payment_Authoriztion_Num")
            Me.columnExternal_Car_Code = MyBase.Columns("External_Car_Code")
            Me.columnIs_CreditCard_AuthReq = MyBase.Columns("Is_CreditCard_AuthReq")
            Me.columnSales_Tax = MyBase.Columns("Sales_Tax")
            Me.columnValidate_Only = MyBase.Columns("Validate_Only")
            Me.columnVSCEnrollment_Id = MyBase.Columns("VSCEnrollment_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCertificate_Number = New Global.System.Data.DataColumn("Certificate_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCertificate_Number)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnCity = New Global.System.Data.DataColumn("City", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCity)
            Me.column_Region = New Global.System.Data.DataColumn("Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_Region)
            Me.columnPostal_Code = New Global.System.Data.DataColumn("Postal_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostal_Code)
            Me.columnCountry_Code = New Global.System.Data.DataColumn("Country_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry_Code)
            Me.columnHome_Phone = New Global.System.Data.DataColumn("Home_Phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHome_Phone)
            Me.columnVehicle_Year = New Global.System.Data.DataColumn("Vehicle_Year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_Year)
            Me.columnVehicle_Make = New Global.System.Data.DataColumn("Vehicle_Make", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_Make)
            Me.columnVehicle_Model = New Global.System.Data.DataColumn("Vehicle_Model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_Model)
            Me.columnEngine_Version = New Global.System.Data.DataColumn("Engine_Version", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEngine_Version)
            Me.columnVehicle_Mileage = New Global.System.Data.DataColumn("Vehicle_Mileage", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_Mileage)
            Me.columnVIN = New Global.System.Data.DataColumn("VIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIN)
            Me.columnVehicle_Purchase_Price = New Global.System.Data.DataColumn("Vehicle_Purchase_Price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_Purchase_Price)
            Me.columnVehicle_Purchase_Date = New Global.System.Data.DataColumn("Vehicle_Purchase_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_Purchase_Date)
            Me.columnVehicle_In_Service_Date = New Global.System.Data.DataColumn("Vehicle_In_Service_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_In_Service_Date)
            Me.columnVehicle_Delivery_Date = New Global.System.Data.DataColumn("Vehicle_Delivery_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_Delivery_Date)
            Me.columnPlan_Code = New Global.System.Data.DataColumn("Plan_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlan_Code)
            Me.columnPlan_Amount = New Global.System.Data.DataColumn("Plan_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlan_Amount)
            Me.columnQuote_Item_Number = New Global.System.Data.DataColumn("Quote_Item_Number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuote_Item_Number)
            Me.columnTerm_Months = New Global.System.Data.DataColumn("Term_Months", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerm_Months)
            Me.columnTerm_Miles = New Global.System.Data.DataColumn("Term_Miles", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerm_Miles)
            Me.columnDeductible = New Global.System.Data.DataColumn("Deductible", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeductible)
            Me.columnDealer_Code = New Global.System.Data.DataColumn("Dealer_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDealer_Code)
            Me.columnAgent_Number = New Global.System.Data.DataColumn("Agent_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgent_Number)
            Me.columnWarranty_Sale_Date = New Global.System.Data.DataColumn("Warranty_Sale_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarranty_Sale_Date)
            Me.columnQuote_Number = New Global.System.Data.DataColumn("Quote_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuote_Number)
            Me.columnVehicle_License_Tag = New Global.System.Data.DataColumn("Vehicle_License_Tag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicle_License_Tag)
            Me.columnDocument_Type = New Global.System.Data.DataColumn("Document_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_Type)
            Me.columnIdentity_document_No = New Global.System.Data.DataColumn("Identity_document_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdentity_document_No)
            Me.columnRG_No = New Global.System.Data.DataColumn("RG_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG_No)
            Me.columnID_Type = New Global.System.Data.DataColumn("ID_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Type)
            Me.columnIssuing_agency = New Global.System.Data.DataColumn("Issuing_agency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssuing_agency)
            Me.columnDocument_Issue_Date = New Global.System.Data.DataColumn("Document_Issue_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocument_Issue_Date)
            Me.columnBirth_Date = New Global.System.Data.DataColumn("Birth_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBirth_Date)
            Me.columnWork_Phone = New Global.System.Data.DataColumn("Work_Phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWork_Phone)
            Me.columnCollection_Method_Code = New Global.System.Data.DataColumn("Collection_Method_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollection_Method_Code)
            Me.columnPayment_Instrument_Code = New Global.System.Data.DataColumn("Payment_Instrument_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_Instrument_Code)
            Me.columnInstallments_Number = New Global.System.Data.DataColumn("Installments_Number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstallments_Number)
            Me.columnPayment_Authoriztion_Num = New Global.System.Data.DataColumn("Payment_Authoriztion_Num", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayment_Authoriztion_Num)
            Me.columnExternal_Car_Code = New Global.System.Data.DataColumn("External_Car_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExternal_Car_Code)
            Me.columnIs_CreditCard_AuthReq = New Global.System.Data.DataColumn("Is_CreditCard_AuthReq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIs_CreditCard_AuthReq)
            Me.columnSales_Tax = New Global.System.Data.DataColumn("Sales_Tax", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSales_Tax)
            Me.columnValidate_Only = New Global.System.Data.DataColumn("Validate_Only", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidate_Only)
            Me.columnVSCEnrollment_Id = New Global.System.Data.DataColumn("VSCEnrollment_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnVSCEnrollment_Id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnVSCEnrollment_Id}, True))
            Me.columnAddress.AllowDBNull = False
            Me.columnCity.AllowDBNull = False
            Me.column_Region.AllowDBNull = False
            Me.columnPostal_Code.AllowDBNull = False
            Me.columnCountry_Code.AllowDBNull = False
            Me.columnHome_Phone.AllowDBNull = False
            Me.columnVehicle_Year.AllowDBNull = False
            Me.columnVehicle_Mileage.AllowDBNull = False
            Me.columnVehicle_Purchase_Price.AllowDBNull = False
            Me.columnVehicle_Purchase_Date.AllowDBNull = False
            Me.columnVehicle_In_Service_Date.AllowDBNull = False
            Me.columnVehicle_Delivery_Date.AllowDBNull = False
            Me.columnPlan_Code.AllowDBNull = False
            Me.columnPlan_Amount.AllowDBNull = False
            Me.columnQuote_Item_Number.AllowDBNull = False
            Me.columnTerm_Months.AllowDBNull = False
            Me.columnTerm_Miles.AllowDBNull = False
            Me.columnDeductible.AllowDBNull = False
            Me.columnDealer_Code.AllowDBNull = False
            Me.columnWarranty_Sale_Date.AllowDBNull = False
            Me.columnQuote_Number.AllowDBNull = False
            Me.columnIdentity_document_No.AllowDBNull = False
            Me.columnCollection_Method_Code.AllowDBNull = False
            Me.columnPayment_Instrument_Code.AllowDBNull = False
            Me.columnInstallments_Number.AllowDBNull = False
            Me.columnVSCEnrollment_Id.AutoIncrement = True
            Me.columnVSCEnrollment_Id.AllowDBNull = False
            Me.columnVSCEnrollment_Id.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewVSCEnrollmentRow() As VSCEnrollmentRow
            Return CType(Me.NewRow, VSCEnrollmentRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VSCEnrollmentRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VSCEnrollmentRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VSCEnrollmentRowChangedEvent) Is Nothing) Then
                RaiseEvent VSCEnrollmentRowChanged(Me, New VSCEnrollmentRowChangeEvent(CType(e.Row, VSCEnrollmentRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VSCEnrollmentRowChangingEvent) Is Nothing) Then
                RaiseEvent VSCEnrollmentRowChanging(Me, New VSCEnrollmentRowChangeEvent(CType(e.Row, VSCEnrollmentRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VSCEnrollmentRowDeletedEvent) Is Nothing) Then
                RaiseEvent VSCEnrollmentRowDeleted(Me, New VSCEnrollmentRowChangeEvent(CType(e.Row, VSCEnrollmentRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VSCEnrollmentRowDeletingEvent) Is Nothing) Then
                RaiseEvent VSCEnrollmentRowDeleting(Me, New VSCEnrollmentRowChangeEvent(CType(e.Row, VSCEnrollmentRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveVSCEnrollmentRow(ByVal row As VSCEnrollmentRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As VSCEnrollmentDs = New VSCEnrollmentDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VSCEnrollmentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CustomerDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnCustomer_Name As Global.System.Data.DataColumn

        Private columnCustomer_Occupation As Global.System.Data.DataColumn

        Private columnPEP As Global.System.Data.DataColumn

        Private columnIncome_Range_Code As Global.System.Data.DataColumn

        Private columnVSCEnrollment_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Customer"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Customer_OccupationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Occupation
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Income_Range_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncome_Range_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VSCEnrollment_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVSCEnrollment_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CustomerRow
            Get
                Return CType(Me.Rows(index), CustomerRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CustomerRowChanging As CustomerRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CustomerRowChanged As CustomerRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CustomerRowDeleting As CustomerRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CustomerRowDeleted As CustomerRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCustomerRow(ByVal row As CustomerRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCustomerRow(ByVal Customer_Name As String, ByVal Customer_Occupation As String, ByVal PEP As String, ByVal Income_Range_Code As String, ByVal parentVSCEnrollmentRowByVSCEnrollment_Customer As VSCEnrollmentRow) As CustomerRow
            Dim rowCustomerRow As CustomerRow = CType(Me.NewRow, CustomerRow)
            Dim columnValuesArray() As Object = New Object() {Customer_Name, Customer_Occupation, PEP, Income_Range_Code, Nothing}
            If (Not (parentVSCEnrollmentRowByVSCEnrollment_Customer) Is Nothing) Then
                columnValuesArray(4) = parentVSCEnrollmentRowByVSCEnrollment_Customer(44)
            End If
            rowCustomerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCustomerRow)
            Return rowCustomerRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CustomerDataTable = CType(MyBase.Clone, CustomerDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CustomerDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnCustomer_Occupation = MyBase.Columns("Customer_Occupation")
            Me.columnPEP = MyBase.Columns("PEP")
            Me.columnIncome_Range_Code = MyBase.Columns("Income_Range_Code")
            Me.columnVSCEnrollment_Id = MyBase.Columns("VSCEnrollment_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnCustomer_Occupation = New Global.System.Data.DataColumn("Customer_Occupation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Occupation)
            Me.columnPEP = New Global.System.Data.DataColumn("PEP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEP)
            Me.columnIncome_Range_Code = New Global.System.Data.DataColumn("Income_Range_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncome_Range_Code)
            Me.columnVSCEnrollment_Id = New Global.System.Data.DataColumn("VSCEnrollment_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnVSCEnrollment_Id)
            Me.columnCustomer_Name.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCustomerRow() As CustomerRow
            Return CType(Me.NewRow, CustomerRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CustomerRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CustomerRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CustomerRowChangedEvent) Is Nothing) Then
                RaiseEvent CustomerRowChanged(Me, New CustomerRowChangeEvent(CType(e.Row, CustomerRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CustomerRowChangingEvent) Is Nothing) Then
                RaiseEvent CustomerRowChanging(Me, New CustomerRowChangeEvent(CType(e.Row, CustomerRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CustomerRowDeletedEvent) Is Nothing) Then
                RaiseEvent CustomerRowDeleted(Me, New CustomerRowChangeEvent(CType(e.Row, CustomerRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CustomerRowDeletingEvent) Is Nothing) Then
                RaiseEvent CustomerRowDeleting(Me, New CustomerRowChangeEvent(CType(e.Row, CustomerRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCustomerRow(ByVal row As CustomerRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As VSCEnrollmentDs = New VSCEnrollmentDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CustomerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class Optional_CoverageDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnOptional_Coverage_Code As Global.System.Data.DataColumn

        Private columnOptional_Coverage_Price As Global.System.Data.DataColumn

        Private columnOptionalCoverageQuote_Item_Number As Global.System.Data.DataColumn

        Private columnVSCEnrollment_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Optional_Coverage"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Optional_Coverage_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOptional_Coverage_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Optional_Coverage_PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOptional_Coverage_Price
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OptionalCoverageQuote_Item_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOptionalCoverageQuote_Item_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VSCEnrollment_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVSCEnrollment_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As Optional_CoverageRow
            Get
                Return CType(Me.Rows(index), Optional_CoverageRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Optional_CoverageRowChanging As Optional_CoverageRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Optional_CoverageRowChanged As Optional_CoverageRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Optional_CoverageRowDeleting As Optional_CoverageRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Optional_CoverageRowDeleted As Optional_CoverageRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddOptional_CoverageRow(ByVal row As Optional_CoverageRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddOptional_CoverageRow(ByVal Optional_Coverage_Code As String, ByVal Optional_Coverage_Price As Decimal, ByVal OptionalCoverageQuote_Item_Number As Integer, ByVal parentVSCEnrollmentRowByVSCEnrollment_Optional_Coverage As VSCEnrollmentRow) As Optional_CoverageRow
            Dim rowOptional_CoverageRow As Optional_CoverageRow = CType(Me.NewRow, Optional_CoverageRow)
            Dim columnValuesArray() As Object = New Object() {Optional_Coverage_Code, Optional_Coverage_Price, OptionalCoverageQuote_Item_Number, Nothing}
            If (Not (parentVSCEnrollmentRowByVSCEnrollment_Optional_Coverage) Is Nothing) Then
                columnValuesArray(3) = parentVSCEnrollmentRowByVSCEnrollment_Optional_Coverage(44)
            End If
            rowOptional_CoverageRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOptional_CoverageRow)
            Return rowOptional_CoverageRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Optional_CoverageDataTable = CType(MyBase.Clone, Optional_CoverageDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Optional_CoverageDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnOptional_Coverage_Code = MyBase.Columns("Optional_Coverage_Code")
            Me.columnOptional_Coverage_Price = MyBase.Columns("Optional_Coverage_Price")
            Me.columnOptionalCoverageQuote_Item_Number = MyBase.Columns("OptionalCoverageQuote_Item_Number")
            Me.columnVSCEnrollment_Id = MyBase.Columns("VSCEnrollment_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnOptional_Coverage_Code = New Global.System.Data.DataColumn("Optional_Coverage_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOptional_Coverage_Code)
            Me.columnOptional_Coverage_Price = New Global.System.Data.DataColumn("Optional_Coverage_Price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOptional_Coverage_Price)
            Me.columnOptionalCoverageQuote_Item_Number = New Global.System.Data.DataColumn("OptionalCoverageQuote_Item_Number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOptionalCoverageQuote_Item_Number)
            Me.columnVSCEnrollment_Id = New Global.System.Data.DataColumn("VSCEnrollment_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnVSCEnrollment_Id)
            Me.columnOptional_Coverage_Code.AllowDBNull = False
            Me.columnOptional_Coverage_Price.AllowDBNull = False
            Me.columnOptionalCoverageQuote_Item_Number.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewOptional_CoverageRow() As Optional_CoverageRow
            Return CType(Me.NewRow, Optional_CoverageRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Optional_CoverageRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Optional_CoverageRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Optional_CoverageRowChangedEvent) Is Nothing) Then
                RaiseEvent Optional_CoverageRowChanged(Me, New Optional_CoverageRowChangeEvent(CType(e.Row, Optional_CoverageRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Optional_CoverageRowChangingEvent) Is Nothing) Then
                RaiseEvent Optional_CoverageRowChanging(Me, New Optional_CoverageRowChangeEvent(CType(e.Row, Optional_CoverageRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Optional_CoverageRowDeletedEvent) Is Nothing) Then
                RaiseEvent Optional_CoverageRowDeleted(Me, New Optional_CoverageRowChangeEvent(CType(e.Row, Optional_CoverageRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Optional_CoverageRowDeletingEvent) Is Nothing) Then
                RaiseEvent Optional_CoverageRowDeleting(Me, New Optional_CoverageRowChangeEvent(CType(e.Row, Optional_CoverageRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveOptional_CoverageRow(ByVal row As Optional_CoverageRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As VSCEnrollmentDs = New VSCEnrollmentDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Optional_CoverageDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class Credit_Card_InfoDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnCredit_Card_Type_Code As Global.System.Data.DataColumn

        Private columnName_On_Credit_Card As Global.System.Data.DataColumn

        Private columnCredit_Card_Number As Global.System.Data.DataColumn

        Private columnExpiration_Date As Global.System.Data.DataColumn

        Private columnCard_Security_Code As Global.System.Data.DataColumn

        Private columnVSCEnrollment_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Credit_Card_Info"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Credit_Card_Type_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCredit_Card_Type_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Name_On_Credit_CardColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_On_Credit_Card
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Credit_Card_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCredit_Card_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Expiration_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpiration_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Card_Security_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCard_Security_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VSCEnrollment_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVSCEnrollment_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As Credit_Card_InfoRow
            Get
                Return CType(Me.Rows(index), Credit_Card_InfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Credit_Card_InfoRowChanging As Credit_Card_InfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Credit_Card_InfoRowChanged As Credit_Card_InfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Credit_Card_InfoRowDeleting As Credit_Card_InfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Credit_Card_InfoRowDeleted As Credit_Card_InfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCredit_Card_InfoRow(ByVal row As Credit_Card_InfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCredit_Card_InfoRow(ByVal Credit_Card_Type_Code As String, ByVal Name_On_Credit_Card As String, ByVal Credit_Card_Number As String, ByVal Expiration_Date As String, ByVal Card_Security_Code As String, ByVal parentVSCEnrollmentRowByVSCEnrollment_Credit_Card_Info As VSCEnrollmentRow) As Credit_Card_InfoRow
            Dim rowCredit_Card_InfoRow As Credit_Card_InfoRow = CType(Me.NewRow, Credit_Card_InfoRow)
            Dim columnValuesArray() As Object = New Object() {Credit_Card_Type_Code, Name_On_Credit_Card, Credit_Card_Number, Expiration_Date, Card_Security_Code, Nothing}
            If (Not (parentVSCEnrollmentRowByVSCEnrollment_Credit_Card_Info) Is Nothing) Then
                columnValuesArray(5) = parentVSCEnrollmentRowByVSCEnrollment_Credit_Card_Info(44)
            End If
            rowCredit_Card_InfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCredit_Card_InfoRow)
            Return rowCredit_Card_InfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Credit_Card_InfoDataTable = CType(MyBase.Clone, Credit_Card_InfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Credit_Card_InfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCredit_Card_Type_Code = MyBase.Columns("Credit_Card_Type_Code")
            Me.columnName_On_Credit_Card = MyBase.Columns("Name_On_Credit_Card")
            Me.columnCredit_Card_Number = MyBase.Columns("Credit_Card_Number")
            Me.columnExpiration_Date = MyBase.Columns("Expiration_Date")
            Me.columnCard_Security_Code = MyBase.Columns("Card_Security_Code")
            Me.columnVSCEnrollment_Id = MyBase.Columns("VSCEnrollment_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCredit_Card_Type_Code = New Global.System.Data.DataColumn("Credit_Card_Type_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCredit_Card_Type_Code)
            Me.columnName_On_Credit_Card = New Global.System.Data.DataColumn("Name_On_Credit_Card", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_On_Credit_Card)
            Me.columnCredit_Card_Number = New Global.System.Data.DataColumn("Credit_Card_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCredit_Card_Number)
            Me.columnExpiration_Date = New Global.System.Data.DataColumn("Expiration_Date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpiration_Date)
            Me.columnCard_Security_Code = New Global.System.Data.DataColumn("Card_Security_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCard_Security_Code)
            Me.columnVSCEnrollment_Id = New Global.System.Data.DataColumn("VSCEnrollment_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnVSCEnrollment_Id)
            Me.columnCredit_Card_Type_Code.AllowDBNull = False
            Me.columnName_On_Credit_Card.AllowDBNull = False
            Me.columnCredit_Card_Number.AllowDBNull = False
            Me.columnExpiration_Date.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCredit_Card_InfoRow() As Credit_Card_InfoRow
            Return CType(Me.NewRow, Credit_Card_InfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Credit_Card_InfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Credit_Card_InfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Credit_Card_InfoRowChangedEvent) Is Nothing) Then
                RaiseEvent Credit_Card_InfoRowChanged(Me, New Credit_Card_InfoRowChangeEvent(CType(e.Row, Credit_Card_InfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Credit_Card_InfoRowChangingEvent) Is Nothing) Then
                RaiseEvent Credit_Card_InfoRowChanging(Me, New Credit_Card_InfoRowChangeEvent(CType(e.Row, Credit_Card_InfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Credit_Card_InfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent Credit_Card_InfoRowDeleted(Me, New Credit_Card_InfoRowChangeEvent(CType(e.Row, Credit_Card_InfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Credit_Card_InfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent Credit_Card_InfoRowDeleting(Me, New Credit_Card_InfoRowChangeEvent(CType(e.Row, Credit_Card_InfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCredit_Card_InfoRow(ByVal row As Credit_Card_InfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As VSCEnrollmentDs = New VSCEnrollmentDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Credit_Card_InfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class Bank_Account_InfoDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnBank_ID As Global.System.Data.DataColumn

        Private columnAccount_Number As Global.System.Data.DataColumn

        Private columnName_On_Account As Global.System.Data.DataColumn

        Private columnVSCEnrollment_Id As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Bank_Account_Info"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Bank_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBank_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Account_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccount_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Name_On_AccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_On_Account
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VSCEnrollment_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVSCEnrollment_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As Bank_Account_InfoRow
            Get
                Return CType(Me.Rows(index), Bank_Account_InfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Bank_Account_InfoRowChanging As Bank_Account_InfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Bank_Account_InfoRowChanged As Bank_Account_InfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Bank_Account_InfoRowDeleting As Bank_Account_InfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event Bank_Account_InfoRowDeleted As Bank_Account_InfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddBank_Account_InfoRow(ByVal row As Bank_Account_InfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddBank_Account_InfoRow(ByVal Bank_ID As String, ByVal Account_Number As String, ByVal Name_On_Account As String, ByVal parentVSCEnrollmentRowByVSCEnrollment_Bank_Account_Info As VSCEnrollmentRow) As Bank_Account_InfoRow
            Dim rowBank_Account_InfoRow As Bank_Account_InfoRow = CType(Me.NewRow, Bank_Account_InfoRow)
            Dim columnValuesArray() As Object = New Object() {Bank_ID, Account_Number, Name_On_Account, Nothing}
            If (Not (parentVSCEnrollmentRowByVSCEnrollment_Bank_Account_Info) Is Nothing) Then
                columnValuesArray(3) = parentVSCEnrollmentRowByVSCEnrollment_Bank_Account_Info(44)
            End If
            rowBank_Account_InfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBank_Account_InfoRow)
            Return rowBank_Account_InfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Bank_Account_InfoDataTable = CType(MyBase.Clone, Bank_Account_InfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Bank_Account_InfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnBank_ID = MyBase.Columns("Bank_ID")
            Me.columnAccount_Number = MyBase.Columns("Account_Number")
            Me.columnName_On_Account = MyBase.Columns("Name_On_Account")
            Me.columnVSCEnrollment_Id = MyBase.Columns("VSCEnrollment_Id")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnBank_ID = New Global.System.Data.DataColumn("Bank_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBank_ID)
            Me.columnAccount_Number = New Global.System.Data.DataColumn("Account_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccount_Number)
            Me.columnName_On_Account = New Global.System.Data.DataColumn("Name_On_Account", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_On_Account)
            Me.columnVSCEnrollment_Id = New Global.System.Data.DataColumn("VSCEnrollment_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Hidden)
            MyBase.Columns.Add(Me.columnVSCEnrollment_Id)
            Me.columnAccount_Number.AllowDBNull = False
            Me.columnName_On_Account.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewBank_Account_InfoRow() As Bank_Account_InfoRow
            Return CType(Me.NewRow, Bank_Account_InfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Bank_Account_InfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Bank_Account_InfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Bank_Account_InfoRowChangedEvent) Is Nothing) Then
                RaiseEvent Bank_Account_InfoRowChanged(Me, New Bank_Account_InfoRowChangeEvent(CType(e.Row, Bank_Account_InfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Bank_Account_InfoRowChangingEvent) Is Nothing) Then
                RaiseEvent Bank_Account_InfoRowChanging(Me, New Bank_Account_InfoRowChangeEvent(CType(e.Row, Bank_Account_InfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Bank_Account_InfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent Bank_Account_InfoRowDeleted(Me, New Bank_Account_InfoRowChangeEvent(CType(e.Row, Bank_Account_InfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Bank_Account_InfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent Bank_Account_InfoRowDeleting(Me, New Bank_Account_InfoRowChangeEvent(CType(e.Row, Bank_Account_InfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveBank_Account_InfoRow(ByVal row As Bank_Account_InfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As VSCEnrollmentDs = New VSCEnrollmentDs()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Bank_Account_InfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VSCEnrollmentRow
        Inherits Global.System.Data.DataRow

        Private tableVSCEnrollment As VSCEnrollmentDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVSCEnrollment = CType(Me.Table, VSCEnrollmentDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Certificate_Number() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Certificate_NumberColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Certificate_Number' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Certificate_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Address() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.AddressColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.AddressColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property City() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.CityColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.CityColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Region() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment._RegionColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment._RegionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Postal_Code() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Postal_CodeColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Postal_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Country_Code() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Country_CodeColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Country_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Home_Phone() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Home_PhoneColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Home_PhoneColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_Year() As Integer
            Get
                Return CType(Me(Me.tableVSCEnrollment.Vehicle_YearColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableVSCEnrollment.Vehicle_YearColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_Make() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Vehicle_MakeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vehicle_Make' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Vehicle_MakeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_Model() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Vehicle_ModelColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vehicle_Model' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Vehicle_ModelColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Engine_Version() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Engine_VersionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Engine_Version' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Engine_VersionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_Mileage() As Integer
            Get
                Return CType(Me(Me.tableVSCEnrollment.Vehicle_MileageColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableVSCEnrollment.Vehicle_MileageColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VIN() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.VINColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIN' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.VINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_Purchase_Price() As Decimal
            Get
                Return CType(Me(Me.tableVSCEnrollment.Vehicle_Purchase_PriceColumn), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableVSCEnrollment.Vehicle_Purchase_PriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_Purchase_Date() As Date
            Get
                Return CType(Me(Me.tableVSCEnrollment.Vehicle_Purchase_DateColumn), Date)
            End Get
            Set(ByVal value As Date)
                Me(Me.tableVSCEnrollment.Vehicle_Purchase_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_In_Service_Date() As Date
            Get
                Return CType(Me(Me.tableVSCEnrollment.Vehicle_In_Service_DateColumn), Date)
            End Get
            Set(ByVal value As Date)
                Me(Me.tableVSCEnrollment.Vehicle_In_Service_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_Delivery_Date() As Date
            Get
                Return CType(Me(Me.tableVSCEnrollment.Vehicle_Delivery_DateColumn), Date)
            End Get
            Set(ByVal value As Date)
                Me(Me.tableVSCEnrollment.Vehicle_Delivery_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plan_Code() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Plan_CodeColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Plan_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plan_Amount() As Double
            Get
                Return CType(Me(Me.tableVSCEnrollment.Plan_AmountColumn), Double)
            End Get
            Set(ByVal value As Double)
                Me(Me.tableVSCEnrollment.Plan_AmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Quote_Item_Number() As Integer
            Get
                Return CType(Me(Me.tableVSCEnrollment.Quote_Item_NumberColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableVSCEnrollment.Quote_Item_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Term_Months() As Integer
            Get
                Return CType(Me(Me.tableVSCEnrollment.Term_MonthsColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableVSCEnrollment.Term_MonthsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Term_Miles() As Integer
            Get
                Return CType(Me(Me.tableVSCEnrollment.Term_MilesColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableVSCEnrollment.Term_MilesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Deductible() As Decimal
            Get
                Return CType(Me(Me.tableVSCEnrollment.DeductibleColumn), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableVSCEnrollment.DeductibleColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Dealer_Code() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Dealer_CodeColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Dealer_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Agent_Number() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Agent_NumberColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Agent_Number' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Agent_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Warranty_Sale_Date() As Date
            Get
                Return CType(Me(Me.tableVSCEnrollment.Warranty_Sale_DateColumn), Date)
            End Get
            Set(ByVal value As Date)
                Me(Me.tableVSCEnrollment.Warranty_Sale_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Quote_Number() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Quote_NumberColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Quote_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vehicle_License_Tag() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Vehicle_License_TagColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vehicle_License_Tag' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Vehicle_License_TagColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Document_Type() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Document_TypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_Type' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Document_TypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Identity_document_No() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Identity_document_NoColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Identity_document_NoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RG_No() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.RG_NoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RG_No' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.RG_NoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ID_Type() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.ID_TypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_Type' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.ID_TypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Issuing_agency() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Issuing_agencyColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Issuing_agency' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Issuing_agencyColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Document_Issue_Date() As Date
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Document_Issue_DateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Document_Issue_Date' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableVSCEnrollment.Document_Issue_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Birth_Date() As Date
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Birth_DateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Birth_Date' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableVSCEnrollment.Birth_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Work_Phone() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Work_PhoneColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Work_Phone' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Work_PhoneColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Collection_Method_Code() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Collection_Method_CodeColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Collection_Method_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Payment_Instrument_Code() As String
            Get
                Return CType(Me(Me.tableVSCEnrollment.Payment_Instrument_CodeColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Payment_Instrument_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Installments_Number() As Integer
            Get
                Return CType(Me(Me.tableVSCEnrollment.Installments_NumberColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableVSCEnrollment.Installments_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Payment_Authoriztion_Num() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Payment_Authoriztion_NumColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Payment_Authoriztion_Num' in table 'VSCEnrollment' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Payment_Authoriztion_NumColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property External_Car_Code() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.External_Car_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'External_Car_Code' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.External_Car_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Is_CreditCard_AuthReq() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Is_CreditCard_AuthReqColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Is_CreditCard_AuthReq' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Is_CreditCard_AuthReqColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Sales_Tax() As Double
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Sales_TaxColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sales_Tax' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Double)
                Me(Me.tableVSCEnrollment.Sales_TaxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Validate_Only() As String
            Get
                Try
                    Return CType(Me(Me.tableVSCEnrollment.Validate_OnlyColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Validate_Only' in table 'VSCEnrollment' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableVSCEnrollment.Validate_OnlyColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollment_Id() As Integer
            Get
                Return CType(Me(Me.tableVSCEnrollment.VSCEnrollment_IdColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableVSCEnrollment.VSCEnrollment_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCertificate_NumberNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Certificate_NumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCertificate_NumberNull()
            Me(Me.tableVSCEnrollment.Certificate_NumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVehicle_MakeNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Vehicle_MakeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVehicle_MakeNull()
            Me(Me.tableVSCEnrollment.Vehicle_MakeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVehicle_ModelNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Vehicle_ModelColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVehicle_ModelNull()
            Me(Me.tableVSCEnrollment.Vehicle_ModelColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEngine_VersionNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Engine_VersionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEngine_VersionNull()
            Me(Me.tableVSCEnrollment.Engine_VersionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVINNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.VINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVINNull()
            Me(Me.tableVSCEnrollment.VINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAgent_NumberNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Agent_NumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAgent_NumberNull()
            Me(Me.tableVSCEnrollment.Agent_NumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVehicle_License_TagNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Vehicle_License_TagColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVehicle_License_TagNull()
            Me(Me.tableVSCEnrollment.Vehicle_License_TagColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDocument_TypeNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Document_TypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDocument_TypeNull()
            Me(Me.tableVSCEnrollment.Document_TypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRG_NoNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.RG_NoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRG_NoNull()
            Me(Me.tableVSCEnrollment.RG_NoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsID_TypeNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.ID_TypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetID_TypeNull()
            Me(Me.tableVSCEnrollment.ID_TypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIssuing_agencyNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Issuing_agencyColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIssuing_agencyNull()
            Me(Me.tableVSCEnrollment.Issuing_agencyColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDocument_Issue_DateNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Document_Issue_DateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDocument_Issue_DateNull()
            Me(Me.tableVSCEnrollment.Document_Issue_DateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBirth_DateNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Birth_DateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBirth_DateNull()
            Me(Me.tableVSCEnrollment.Birth_DateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsWork_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Work_PhoneColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetWork_PhoneNull()
            Me(Me.tableVSCEnrollment.Work_PhoneColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPayment_Authoriztion_NumNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Payment_Authoriztion_NumColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPayment_Authoriztion_NumNull()
            Me(Me.tableVSCEnrollment.Payment_Authoriztion_NumColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExternal_Car_CodeNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.External_Car_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExternal_Car_CodeNull()
            Me(Me.tableVSCEnrollment.External_Car_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIs_CreditCard_AuthReqNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Is_CreditCard_AuthReqColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIs_CreditCard_AuthReqNull()
            Me(Me.tableVSCEnrollment.Is_CreditCard_AuthReqColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSales_TaxNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Sales_TaxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSales_TaxNull()
            Me(Me.tableVSCEnrollment.Sales_TaxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsValidate_OnlyNull() As Boolean
            Return Me.IsNull(Me.tableVSCEnrollment.Validate_OnlyColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetValidate_OnlyNull()
            Me(Me.tableVSCEnrollment.Validate_OnlyColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetCustomerRows() As CustomerRow()
            If (Me.Table.ChildRelations("VSCEnrollment_Customer") Is Nothing) Then
                Return New CustomerRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("VSCEnrollment_Customer")), CustomerRow())
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetOptional_CoverageRows() As Optional_CoverageRow()
            If (Me.Table.ChildRelations("VSCEnrollment_Optional_Coverage") Is Nothing) Then
                Return New Optional_CoverageRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("VSCEnrollment_Optional_Coverage")), Optional_CoverageRow())
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetCredit_Card_InfoRows() As Credit_Card_InfoRow()
            If (Me.Table.ChildRelations("VSCEnrollment_Credit_Card_Info") Is Nothing) Then
                Return New Credit_Card_InfoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("VSCEnrollment_Credit_Card_Info")), Credit_Card_InfoRow())
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetBank_Account_InfoRows() As Bank_Account_InfoRow()
            If (Me.Table.ChildRelations("VSCEnrollment_Bank_Account_Info") Is Nothing) Then
                Return New Bank_Account_InfoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("VSCEnrollment_Bank_Account_Info")), Bank_Account_InfoRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CustomerRow
        Inherits Global.System.Data.DataRow

        Private tableCustomer As CustomerDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCustomer = CType(Me.Table, CustomerDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Customer_Name() As String
            Get
                Return CType(Me(Me.tableCustomer.Customer_NameColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableCustomer.Customer_NameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Customer_Occupation() As String
            Get
                Try
                    Return CType(Me(Me.tableCustomer.Customer_OccupationColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Occupation' in table 'Customer' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCustomer.Customer_OccupationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PEP() As String
            Get
                Try
                    Return CType(Me(Me.tableCustomer.PEPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PEP' in table 'Customer' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCustomer.PEPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Income_Range_Code() As String
            Get
                Try
                    Return CType(Me(Me.tableCustomer.Income_Range_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Income_Range_Code' in table 'Customer' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCustomer.Income_Range_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollment_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCustomer.VSCEnrollment_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VSCEnrollment_Id' in table 'Customer' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableCustomer.VSCEnrollment_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollmentRow() As VSCEnrollmentRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("VSCEnrollment_Customer")), VSCEnrollmentRow)
            End Get
            Set(ByVal value As VSCEnrollmentRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("VSCEnrollment_Customer"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCustomer_OccupationNull() As Boolean
            Return Me.IsNull(Me.tableCustomer.Customer_OccupationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCustomer_OccupationNull()
            Me(Me.tableCustomer.Customer_OccupationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPEPNull() As Boolean
            Return Me.IsNull(Me.tableCustomer.PEPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPEPNull()
            Me(Me.tableCustomer.PEPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIncome_Range_CodeNull() As Boolean
            Return Me.IsNull(Me.tableCustomer.Income_Range_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIncome_Range_CodeNull()
            Me(Me.tableCustomer.Income_Range_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVSCEnrollment_IdNull() As Boolean
            Return Me.IsNull(Me.tableCustomer.VSCEnrollment_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVSCEnrollment_IdNull()
            Me(Me.tableCustomer.VSCEnrollment_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Optional_CoverageRow
        Inherits Global.System.Data.DataRow

        Private tableOptional_Coverage As Optional_CoverageDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOptional_Coverage = CType(Me.Table, Optional_CoverageDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Optional_Coverage_Code() As String
            Get
                Return CType(Me(Me.tableOptional_Coverage.Optional_Coverage_CodeColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableOptional_Coverage.Optional_Coverage_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Optional_Coverage_Price() As Decimal
            Get
                Return CType(Me(Me.tableOptional_Coverage.Optional_Coverage_PriceColumn), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableOptional_Coverage.Optional_Coverage_PriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OptionalCoverageQuote_Item_Number() As Integer
            Get
                Return CType(Me(Me.tableOptional_Coverage.OptionalCoverageQuote_Item_NumberColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableOptional_Coverage.OptionalCoverageQuote_Item_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollment_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableOptional_Coverage.VSCEnrollment_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VSCEnrollment_Id' in table 'Optional_Coverage' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableOptional_Coverage.VSCEnrollment_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollmentRow() As VSCEnrollmentRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("VSCEnrollment_Optional_Coverage")), VSCEnrollmentRow)
            End Get
            Set(ByVal value As VSCEnrollmentRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("VSCEnrollment_Optional_Coverage"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVSCEnrollment_IdNull() As Boolean
            Return Me.IsNull(Me.tableOptional_Coverage.VSCEnrollment_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVSCEnrollment_IdNull()
            Me(Me.tableOptional_Coverage.VSCEnrollment_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Credit_Card_InfoRow
        Inherits Global.System.Data.DataRow

        Private tableCredit_Card_Info As Credit_Card_InfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCredit_Card_Info = CType(Me.Table, Credit_Card_InfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Credit_Card_Type_Code() As String
            Get
                Return CType(Me(Me.tableCredit_Card_Info.Credit_Card_Type_CodeColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableCredit_Card_Info.Credit_Card_Type_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Name_On_Credit_Card() As String
            Get
                Return CType(Me(Me.tableCredit_Card_Info.Name_On_Credit_CardColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableCredit_Card_Info.Name_On_Credit_CardColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Credit_Card_Number() As String
            Get
                Return CType(Me(Me.tableCredit_Card_Info.Credit_Card_NumberColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableCredit_Card_Info.Credit_Card_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Expiration_Date() As String
            Get
                Return CType(Me(Me.tableCredit_Card_Info.Expiration_DateColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableCredit_Card_Info.Expiration_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Card_Security_Code() As String
            Get
                Try
                    Return CType(Me(Me.tableCredit_Card_Info.Card_Security_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Card_Security_Code' in table 'Credit_Card_Info' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableCredit_Card_Info.Card_Security_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollment_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCredit_Card_Info.VSCEnrollment_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VSCEnrollment_Id' in table 'Credit_Card_Info' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableCredit_Card_Info.VSCEnrollment_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollmentRow() As VSCEnrollmentRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("VSCEnrollment_Credit_Card_Info")), VSCEnrollmentRow)
            End Get
            Set(ByVal value As VSCEnrollmentRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("VSCEnrollment_Credit_Card_Info"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCard_Security_CodeNull() As Boolean
            Return Me.IsNull(Me.tableCredit_Card_Info.Card_Security_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCard_Security_CodeNull()
            Me(Me.tableCredit_Card_Info.Card_Security_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVSCEnrollment_IdNull() As Boolean
            Return Me.IsNull(Me.tableCredit_Card_Info.VSCEnrollment_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVSCEnrollment_IdNull()
            Me(Me.tableCredit_Card_Info.VSCEnrollment_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Bank_Account_InfoRow
        Inherits Global.System.Data.DataRow

        Private tableBank_Account_Info As Bank_Account_InfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBank_Account_Info = CType(Me.Table, Bank_Account_InfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Bank_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableBank_Account_Info.Bank_IDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bank_ID' in table 'Bank_Account_Info' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableBank_Account_Info.Bank_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Account_Number() As String
            Get
                Return CType(Me(Me.tableBank_Account_Info.Account_NumberColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableBank_Account_Info.Account_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Name_On_Account() As String
            Get
                Return CType(Me(Me.tableBank_Account_Info.Name_On_AccountColumn), String)
            End Get
            Set(ByVal value As String)
                Me(Me.tableBank_Account_Info.Name_On_AccountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollment_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableBank_Account_Info.VSCEnrollment_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VSCEnrollment_Id' in table 'Bank_Account_Info' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableBank_Account_Info.VSCEnrollment_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VSCEnrollmentRow() As VSCEnrollmentRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("VSCEnrollment_Bank_Account_Info")), VSCEnrollmentRow)
            End Get
            Set(ByVal value As VSCEnrollmentRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("VSCEnrollment_Bank_Account_Info"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBank_IDNull() As Boolean
            Return Me.IsNull(Me.tableBank_Account_Info.Bank_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBank_IDNull()
            Me(Me.tableBank_Account_Info.Bank_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVSCEnrollment_IdNull() As Boolean
            Return Me.IsNull(Me.tableBank_Account_Info.VSCEnrollment_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVSCEnrollment_IdNull()
            Me(Me.tableBank_Account_Info.VSCEnrollment_IdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class VSCEnrollmentRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As VSCEnrollmentRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As VSCEnrollmentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As VSCEnrollmentRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CustomerRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CustomerRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CustomerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CustomerRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class Optional_CoverageRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As Optional_CoverageRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As Optional_CoverageRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As Optional_CoverageRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class Credit_Card_InfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As Credit_Card_InfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As Credit_Card_InfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As Credit_Card_InfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class Bank_Account_InfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As Bank_Account_InfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As Bank_Account_InfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As Bank_Account_InfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
