'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5477
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'
'This source code was auto-generated by xsd, Version=2.0.50727.3038.
'

'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"), _
 Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("GetSvcClaimsDs"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class GetSvcClaimsDs
    Inherits Global.System.Data.DataSet

    Private tableGetSvcClaims As GetSvcClaimsDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("GetSvcClaims")) Is Nothing) Then
                MyBase.Tables.Add(New GetSvcClaimsDataTable(ds.Tables("GetSvcClaims")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property GetSvcClaims() As GetSvcClaimsDataTable
        Get
            Return Me.tableGetSvcClaims
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(ByVal value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As GetSvcClaimsDs = CType(MyBase.Clone, GetSvcClaimsDs)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("GetSvcClaims")) Is Nothing) Then
                MyBase.Tables.Add(New GetSvcClaimsDataTable(ds.Tables("GetSvcClaims")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableGetSvcClaims = CType(MyBase.Tables("GetSvcClaims"), GetSvcClaimsDataTable)
        If (initTable = True) Then
            If (Not (Me.tableGetSvcClaims) Is Nothing) Then
                Me.tableGetSvcClaims.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Sub InitClass()
        Me.DataSetName = "GetSvcClaimsDs"
        Me.Prefix = ""
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableGetSvcClaims = New GetSvcClaimsDataTable
        MyBase.Tables.Add(Me.tableGetSvcClaims)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Function ShouldSerializeGetSvcClaims() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As GetSvcClaimsDs = New GetSvcClaimsDs
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    Public Delegate Sub GetSvcClaimsRowChangeEventHandler(ByVal sender As Object, ByVal e As GetSvcClaimsRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"), _
     Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class GetSvcClaimsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnService_Center_Code As Global.System.Data.DataColumn

        Private columnClaim_Status As Global.System.Data.DataColumn

        Private columnClaim_Type As Global.System.Data.DataColumn

        Private columnMethod_Of_Repair As Global.System.Data.DataColumn

        Private columnSort_By As Global.System.Data.DataColumn

        Private columnSort_Order As Global.System.Data.DataColumn

        Private columnPage_Size As Global.System.Data.DataColumn

        Private columnPage_Number As Global.System.Data.DataColumn

        Private columnClaim_Number As Global.System.Data.DataColumn

        Private columnAuthorization_Number As Global.System.Data.DataColumn

        Private columnCertificate_Number As Global.System.Data.DataColumn

        Private columnCustomer_Name As Global.System.Data.DataColumn

        Private columnFrom_Claim_Created_Date As Global.System.Data.DataColumn

        Private columnTo_Claim_Created_Date As Global.System.Data.DataColumn

        Private columnFrom_Visit_Date As Global.System.Data.DataColumn

        Private columnTo_Visit_Date As Global.System.Data.DataColumn

        Private columnClaim_Extended_Status_Owner_Code As Global.System.Data.DataColumn

        Private columnClaim_Extended_Status_Code As Global.System.Data.DataColumn

        Private columnTurn_Around_Time_Range_Code As Global.System.Data.DataColumn

        Private columnBatch_Number As Global.System.Data.DataColumn

        Private columnSerial_Number As Global.System.Data.DataColumn

        Private columnWork_Phone As Global.System.Data.DataColumn

        Private columnCompany_Code As Global.System.Data.DataColumn

        Private columnHome_Phone As Global.System.Data.DataColumn

        Private columnLoss_Date As Global.System.Data.DataColumn

        Private columnClaim_Paid_Amount As Global.System.Data.DataColumn

        Private columnBonus_Total As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "GetSvcClaims"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Service_Center_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnService_Center_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Claim_StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClaim_Status
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Claim_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClaim_Type
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Method_Of_RepairColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMethod_Of_Repair
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Sort_ByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSort_By
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Sort_OrderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSort_Order
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Page_SizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPage_Size
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Page_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPage_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Claim_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClaim_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Authorization_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuthorization_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Certificate_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCertificate_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer_Name
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property From_Claim_Created_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrom_Claim_Created_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property To_Claim_Created_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTo_Claim_Created_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property From_Visit_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrom_Visit_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property To_Visit_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTo_Visit_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Claim_Extended_Status_Owner_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClaim_Extended_Status_Owner_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Claim_Extended_Status_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClaim_Extended_Status_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Turn_Around_Time_Range_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTurn_Around_Time_Range_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Batch_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatch_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Serial_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerial_Number
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Work_PhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWork_Phone
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Company_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompany_Code
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Home_PhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHome_Phone
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Loss_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoss_Date
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Claim_Paid_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClaim_Paid_Amount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>
        Default Public ReadOnly Property Item(ByVal index As Integer) As GetSvcClaimsRow
            Get
                Return CType(Me.Rows(index), GetSvcClaimsRow)
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>
        Public ReadOnly Property Bonus_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonus_Total
            End Get
        End Property

        Public Event GetSvcClaimsRowChanging As GetSvcClaimsRowChangeEventHandler

        Public Event GetSvcClaimsRowChanged As GetSvcClaimsRowChangeEventHandler

        Public Event GetSvcClaimsRowDeleting As GetSvcClaimsRowChangeEventHandler

        Public Event GetSvcClaimsRowDeleted As GetSvcClaimsRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Sub AddGetSvcClaimsRow(ByVal row As GetSvcClaimsRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Function AddGetSvcClaimsRow( _
                    ByVal Service_Center_Code As String, _
                    ByVal Claim_Status As String, _
                    ByVal Claim_Type As String, _
                    ByVal Method_Of_Repair As String, _
                    ByVal Sort_By As Integer, _
                    ByVal Sort_Order As Integer, _
                    ByVal Page_Size As Integer, _
                    ByVal Page_Number As Integer, _
                    ByVal Claim_Number As String, _
                    ByVal Authorization_Number As String, _
                    ByVal Certificate_Number As String, _
                    ByVal Customer_Name As String, _
                    ByVal From_Claim_Created_Date As Date, _
                    ByVal To_Claim_Created_Date As Date, _
                    ByVal From_Visit_Date As Date, _
                    ByVal To_Visit_Date As Date, _
                    ByVal Claim_Extended_Status_Owner_Code As String, _
                    ByVal Claim_Extended_Status_Code As String, _
                    ByVal Turn_Around_Time_Range_Code As String, _
                    ByVal Batch_Number As String, _
                    ByVal Serial_Number As String, _
                    ByVal Work_Phone As String, _
                    ByVal Company_Code As String, _
                    ByVal Home_Phone As String, _
                    ByVal Loss_Date As Date, _
                    ByVal Claim_Paid_Amount As String) As GetSvcClaimsRow
            Dim rowGetSvcClaimsRow As GetSvcClaimsRow = CType(Me.NewRow, GetSvcClaimsRow)
            Dim columnValuesArray() As Object = New Object() {Service_Center_Code, Claim_Status, Claim_Type, Method_Of_Repair, Sort_By, Sort_Order, Page_Size, Page_Number, Claim_Number, Authorization_Number, Certificate_Number, Customer_Name, From_Claim_Created_Date, To_Claim_Created_Date, From_Visit_Date, To_Visit_Date, Claim_Extended_Status_Owner_Code, Claim_Extended_Status_Code, Turn_Around_Time_Range_Code, Batch_Number, Serial_Number, Work_Phone, Company_Code, Home_Phone, Loss_Date, Claim_Paid_Amount}
            rowGetSvcClaimsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGetSvcClaimsRow)
            Return rowGetSvcClaimsRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GetSvcClaimsDataTable = CType(MyBase.Clone, GetSvcClaimsDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GetSvcClaimsDataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub InitVars()
            Me.columnService_Center_Code = MyBase.Columns("Service_Center_Code")
            Me.columnClaim_Status = MyBase.Columns("Claim_Status")
            Me.columnClaim_Type = MyBase.Columns("Claim_Type")
            Me.columnMethod_Of_Repair = MyBase.Columns("Method_Of_Repair")
            Me.columnSort_By = MyBase.Columns("Sort_By")
            Me.columnSort_Order = MyBase.Columns("Sort_Order")
            Me.columnPage_Size = MyBase.Columns("Page_Size")
            Me.columnPage_Number = MyBase.Columns("Page_Number")
            Me.columnClaim_Number = MyBase.Columns("Claim_Number")
            Me.columnAuthorization_Number = MyBase.Columns("Authorization_Number")
            Me.columnCertificate_Number = MyBase.Columns("Certificate_Number")
            Me.columnCustomer_Name = MyBase.Columns("Customer_Name")
            Me.columnFrom_Claim_Created_Date = MyBase.Columns("From_Claim_Created_Date")
            Me.columnTo_Claim_Created_Date = MyBase.Columns("To_Claim_Created_Date")
            Me.columnFrom_Visit_Date = MyBase.Columns("From_Visit_Date")
            Me.columnTo_Visit_Date = MyBase.Columns("To_Visit_Date")
            Me.columnClaim_Extended_Status_Owner_Code = MyBase.Columns("Claim_Extended_Status_Owner_Code")
            Me.columnClaim_Extended_Status_Code = MyBase.Columns("Claim_Extended_Status_Code")
            Me.columnTurn_Around_Time_Range_Code = MyBase.Columns("Turn_Around_Time_Range_Code")
            Me.columnBatch_Number = MyBase.Columns("Batch_Number")
            Me.columnSerial_Number = MyBase.Columns("Serial_Number")
            Me.columnWork_Phone = MyBase.Columns("Work_Phone")
            Me.columnCompany_Code = MyBase.Columns("Company_Code")
            Me.columnHome_Phone = MyBase.Columns("Home_Phone")
            Me.columnLoss_Date = MyBase.Columns("Loss_Date")
            Me.columnClaim_Paid_Amount = MyBase.Columns("Claim_Paid_Amount")
            Me.columnBonus_Total = MyBase.Columns("Bonus_Total")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitClass()
            Me.columnService_Center_Code = New Global.System.Data.DataColumn("Service_Center_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnService_Center_Code)
            Me.columnClaim_Status = New Global.System.Data.DataColumn("Claim_Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClaim_Status)
            Me.columnClaim_Type = New Global.System.Data.DataColumn("Claim_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClaim_Type)
            Me.columnMethod_Of_Repair = New Global.System.Data.DataColumn("Method_Of_Repair", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMethod_Of_Repair)
            Me.columnSort_By = New Global.System.Data.DataColumn("Sort_By", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSort_By)
            Me.columnSort_Order = New Global.System.Data.DataColumn("Sort_Order", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSort_Order)
            Me.columnPage_Size = New Global.System.Data.DataColumn("Page_Size", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPage_Size)
            Me.columnPage_Number = New Global.System.Data.DataColumn("Page_Number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPage_Number)
            Me.columnClaim_Number = New Global.System.Data.DataColumn("Claim_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClaim_Number)
            Me.columnAuthorization_Number = New Global.System.Data.DataColumn("Authorization_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuthorization_Number)
            Me.columnCertificate_Number = New Global.System.Data.DataColumn("Certificate_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCertificate_Number)
            Me.columnCustomer_Name = New Global.System.Data.DataColumn("Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer_Name)
            Me.columnFrom_Claim_Created_Date = New Global.System.Data.DataColumn("From_Claim_Created_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrom_Claim_Created_Date)
            Me.columnTo_Claim_Created_Date = New Global.System.Data.DataColumn("To_Claim_Created_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTo_Claim_Created_Date)
            Me.columnFrom_Visit_Date = New Global.System.Data.DataColumn("From_Visit_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrom_Visit_Date)
            Me.columnTo_Visit_Date = New Global.System.Data.DataColumn("To_Visit_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTo_Visit_Date)
            Me.columnClaim_Extended_Status_Owner_Code = New Global.System.Data.DataColumn("Claim_Extended_Status_Owner_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClaim_Extended_Status_Owner_Code)
            Me.columnClaim_Extended_Status_Code = New Global.System.Data.DataColumn("Claim_Extended_Status_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClaim_Extended_Status_Code)
            Me.columnTurn_Around_Time_Range_Code = New Global.System.Data.DataColumn("Turn_Around_Time_Range_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTurn_Around_Time_Range_Code)
            Me.columnBatch_Number = New Global.System.Data.DataColumn("Batch_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatch_Number)
            Me.columnSerial_Number = New Global.System.Data.DataColumn("Serial_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerial_Number)
            Me.columnWork_Phone = New Global.System.Data.DataColumn("Work_Phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWork_Phone)
            Me.columnCompany_Code = New Global.System.Data.DataColumn("Company_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompany_Code)
            Me.columnHome_Phone = New Global.System.Data.DataColumn("Home_Phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHome_Phone)
            Me.columnLoss_Date = New Global.System.Data.DataColumn("Loss_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoss_Date)
            Me.columnClaim_Paid_Amount = New Global.System.Data.DataColumn("Claim_Paid_Amount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClaim_Paid_Amount)
            Me.columnBonus_Total = New Global.System.Data.DataColumn("Bonus_Total", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonus_Total)
            Me.columnSort_By.AllowDBNull = False
            Me.columnSort_Order.AllowDBNull = False
            Me.columnPage_Size.AllowDBNull = False
            Me.columnPage_Number.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function NewGetSvcClaimsRow() As GetSvcClaimsRow
            Return CType(Me.NewRow, GetSvcClaimsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GetSvcClaimsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GetSvcClaimsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GetSvcClaimsRowChangedEvent) Is Nothing) Then
                RaiseEvent GetSvcClaimsRowChanged(Me, New GetSvcClaimsRowChangeEvent(CType(e.Row, GetSvcClaimsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GetSvcClaimsRowChangingEvent) Is Nothing) Then
                RaiseEvent GetSvcClaimsRowChanging(Me, New GetSvcClaimsRowChangeEvent(CType(e.Row, GetSvcClaimsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GetSvcClaimsRowDeletedEvent) Is Nothing) Then
                RaiseEvent GetSvcClaimsRowDeleted(Me, New GetSvcClaimsRowChangeEvent(CType(e.Row, GetSvcClaimsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GetSvcClaimsRowDeletingEvent) Is Nothing) Then
                RaiseEvent GetSvcClaimsRowDeleting(Me, New GetSvcClaimsRowChangeEvent(CType(e.Row, GetSvcClaimsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub RemoveGetSvcClaimsRow(ByVal row As GetSvcClaimsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As GetSvcClaimsDs = New GetSvcClaimsDs
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GetSvcClaimsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")> _
    Partial Public Class GetSvcClaimsRow
        Inherits Global.System.Data.DataRow

        Private tableGetSvcClaims As GetSvcClaimsDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGetSvcClaims = CType(Me.Table, GetSvcClaimsDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Service_Center_Code() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Service_Center_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Service_Center_Code' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Service_Center_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Claim_Status() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Claim_StatusColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Claim_Status' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Claim_StatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Claim_Type() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Claim_TypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Claim_Type' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Claim_TypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Method_Of_Repair() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Method_Of_RepairColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Method_Of_Repair' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Method_Of_RepairColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Sort_By() As Integer
            Get
                Return CType(Me(Me.tableGetSvcClaims.Sort_ByColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableGetSvcClaims.Sort_ByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Sort_Order() As Integer
            Get
                Return CType(Me(Me.tableGetSvcClaims.Sort_OrderColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableGetSvcClaims.Sort_OrderColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Page_Size() As Integer
            Get
                Return CType(Me(Me.tableGetSvcClaims.Page_SizeColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableGetSvcClaims.Page_SizeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Page_Number() As Integer
            Get
                Return CType(Me(Me.tableGetSvcClaims.Page_NumberColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableGetSvcClaims.Page_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Claim_Number() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Claim_NumberColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Claim_Number' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Claim_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Authorization_Number() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Authorization_NumberColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Authorization_Number' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Authorization_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Certificate_Number() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Certificate_NumberColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Certificate_Number' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Certificate_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Customer_Name() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Customer_NameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer_Name' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Customer_NameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property From_Claim_Created_Date() As Date
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.From_Claim_Created_DateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'From_Claim_Created_Date' in table 'GetSvcClaims' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableGetSvcClaims.From_Claim_Created_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property To_Claim_Created_Date() As Date
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.To_Claim_Created_DateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'To_Claim_Created_Date' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableGetSvcClaims.To_Claim_Created_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property From_Visit_Date() As Date
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.From_Visit_DateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'From_Visit_Date' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableGetSvcClaims.From_Visit_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property To_Visit_Date() As Date
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.To_Visit_DateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'To_Visit_Date' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableGetSvcClaims.To_Visit_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Claim_Extended_Status_Owner_Code() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Claim_Extended_Status_Owner_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Claim_Extended_Status_Owner_Code' in table 'GetSvcClaims' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Claim_Extended_Status_Owner_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Claim_Extended_Status_Code() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Claim_Extended_Status_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Claim_Extended_Status_Code' in table 'GetSvcClaims' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Claim_Extended_Status_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Turn_Around_Time_Range_Code() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Turn_Around_Time_Range_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Turn_Around_Time_Range_Code' in table 'GetSvcClaims' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Turn_Around_Time_Range_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Batch_Number() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Batch_NumberColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Batch_Number' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Batch_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Serial_Number() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Serial_NumberColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Serial_Number' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Serial_NumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Work_Phone() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Work_PhoneColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Work_Phone' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Work_PhoneColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Company_Code() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Company_CodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Company_Code' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Company_CodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Home_Phone() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Home_PhoneColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Home_Phone' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Home_PhoneColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property Loss_Date() As Date
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Loss_DateColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Loss_Date' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Date)
                Me(Me.tableGetSvcClaims.Loss_DateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>
        Public Property Claim_Paid_Amount() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Claim_Paid_AmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Claim_Paid_Amount' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Claim_Paid_AmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>
        Public Property Bonus_Total() As String
            Get
                Try
                    Return CType(Me(Me.tableGetSvcClaims.Bonus_TotalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'total_bonus' in table 'GetSvcClaims' is DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableGetSvcClaims.Bonus_TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsService_Center_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Service_Center_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetService_Center_CodeNull()
            Me(Me.tableGetSvcClaims.Service_Center_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsClaim_StatusNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Claim_StatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetClaim_StatusNull()
            Me(Me.tableGetSvcClaims.Claim_StatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsClaim_TypeNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Claim_TypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetClaim_TypeNull()
            Me(Me.tableGetSvcClaims.Claim_TypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsMethod_Of_RepairNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Method_Of_RepairColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetMethod_Of_RepairNull()
            Me(Me.tableGetSvcClaims.Method_Of_RepairColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsClaim_NumberNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Claim_NumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetClaim_NumberNull()
            Me(Me.tableGetSvcClaims.Claim_NumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsAuthorization_NumberNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Authorization_NumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetAuthorization_NumberNull()
            Me(Me.tableGetSvcClaims.Authorization_NumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsCertificate_NumberNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Certificate_NumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetCertificate_NumberNull()
            Me(Me.tableGetSvcClaims.Certificate_NumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsCustomer_NameNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Customer_NameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetCustomer_NameNull()
            Me(Me.tableGetSvcClaims.Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsFrom_Claim_Created_DateNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.From_Claim_Created_DateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetFrom_Claim_Created_DateNull()
            Me(Me.tableGetSvcClaims.From_Claim_Created_DateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsTo_Claim_Created_DateNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.To_Claim_Created_DateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetTo_Claim_Created_DateNull()
            Me(Me.tableGetSvcClaims.To_Claim_Created_DateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsFrom_Visit_DateNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.From_Visit_DateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetFrom_Visit_DateNull()
            Me(Me.tableGetSvcClaims.From_Visit_DateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsTo_Visit_DateNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.To_Visit_DateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetTo_Visit_DateNull()
            Me(Me.tableGetSvcClaims.To_Visit_DateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsClaim_Extended_Status_Owner_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Claim_Extended_Status_Owner_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetClaim_Extended_Status_Owner_CodeNull()
            Me(Me.tableGetSvcClaims.Claim_Extended_Status_Owner_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsClaim_Extended_Status_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Claim_Extended_Status_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetClaim_Extended_Status_CodeNull()
            Me(Me.tableGetSvcClaims.Claim_Extended_Status_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsTurn_Around_Time_Range_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Turn_Around_Time_Range_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetTurn_Around_Time_Range_CodeNull()
            Me(Me.tableGetSvcClaims.Turn_Around_Time_Range_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsBatch_NumberNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Batch_NumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetBatch_NumberNull()
            Me(Me.tableGetSvcClaims.Batch_NumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsSerial_NumberNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Serial_NumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetSerial_NumberNull()
            Me(Me.tableGetSvcClaims.Serial_NumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsWork_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Work_PhoneColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetWork_PhoneNull()
            Me(Me.tableGetSvcClaims.Work_PhoneColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsCompany_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Company_CodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetCompany_CodeNull()
            Me(Me.tableGetSvcClaims.Company_CodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsHome_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Home_PhoneColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetHome_PhoneNull()
            Me(Me.tableGetSvcClaims.Home_PhoneColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsLoss_DateNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Loss_DateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetLoss_DateNull()
            Me(Me.tableGetSvcClaims.Loss_DateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsClaim_Paid_AmountNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Claim_Paid_AmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetClaim_Paid_AmountNull()
            Me(Me.tableGetSvcClaims.Claim_Paid_AmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>
        Public Function IsBonus_TotalNull() As Boolean
            Return Me.IsNull(Me.tableGetSvcClaims.Bonus_TotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>
        Public Sub SetBonus_TotalNull()
            Me(Me.tableGetSvcClaims.Bonus_TotalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")> _
    Public Class GetSvcClaimsRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As GetSvcClaimsRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub New(ByVal row As GetSvcClaimsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Row() As GetSvcClaimsRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
