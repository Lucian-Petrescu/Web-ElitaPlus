<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="Unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework" requirePermission="false" />
    <section name="microsoft.web.services3" type="Microsoft.Web.Services3.Configuration.WebServicesConfiguration, Microsoft.Web.Services3, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="settingsSection" type="System.Configuration.NameValueFileSectionHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="ElitaInternalWS.My.MySettings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
    <sectionGroup name="elitaConfiguration" type="Assurant.Elita.Configuration.ElitaConfigurationSectionGroup, Assurant.Elita.Configuration">
      <section name="general" type="Assurant.Elita.Configuration.GeneralSection, Assurant.Elita.Configuration" />
      <section name="database" type="Assurant.Elita.Configuration.DatabaseSection, Assurant.Elita.Configuration" />
      <section name="security" type="Assurant.Elita.Configuration.SecuritySection, Assurant.Elita.Configuration" />
      <section name="felita" type="Assurant.Elita.Configuration.FelitaSection, Assurant.Elita.Configuration" />
      <section name="smartStream" type="Assurant.Elita.Configuration.SmartStreamSection, Assurant.Elita.Configuration" />
      <section name="unixServer" type="Assurant.Elita.Configuration.UnixServerSection, Assurant.Elita.Configuration" />
      <section name="webService" type="Assurant.Elita.Configuration.WebServiceSection, Assurant.Elita.Configuration" />
    </sectionGroup>
    <section name="oracle.manageddataaccess.client" type="OracleInternal.Common.ODPMSectionHandler, Oracle.ManagedDataAccess, Version=4.122.1.0, Culture=neutral, PublicKeyToken=89b483f429c47342" />
  </configSections>
  <microsoft.web.services3>
    <security>
      <securityTokenManager>
        <add type="ElitaInternalWS.CustomUsernameTokenManager, ElitaInternalWS" namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" localName="UsernameToken" />
      </securityTokenManager>
    </security>
  </microsoft.web.services3>
  <!-- Web.config **** Begin AssurNet configuration sections **** -->
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.6" />
      </system.Web>
  -->
  <system.web>
    <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug="true" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
    -->
    <compilation defaultLanguage="vb" debug="true" targetFramework="4.6.2" />
    <!--  CUSTOM ERROR MESSAGES
          Set customErrors mode="On" or "RemoteOnly" to enable custom error messages, "Off" to disable. 
          Add <error> tags for each of the errors you want to handle.
    -->
    <customErrors mode="Off" />
    <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are "Windows", 
          "Forms", "Passport" and "None"
          
          
          <authentication mode="None"/>
          <authentication mode="Windows"/>
    -->
    <authentication mode="Windows" />
    <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: "*" mean everyone, "?" means anonymous 
          (unauthenticated) users.
          
          <allow users="?"/>
          
    -->
    <authorization>
      <allow users="*" />
      <!-- Allow all users -->
      <!--  <allow     users="[comma separated list of users]"
                             roles="[comma separated list of roles]"/>
                  <deny      users="[comma separated list of users]"
                             roles="[comma separated list of roles]"/>
            -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the "trace.axd" page from your web application
          root. 
    -->
    <trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true" />
    <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless="true".
    -->
    <sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;user id=sa;password=" cookieless="false" timeout="178" />
    <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
    <httpRuntime executionTimeout="10800" maxRequestLength="1048576" />
    <webServices>
      <soapServerProtocolFactory type="Microsoft.Web.Services3.WseProtocolFactory, Microsoft.Web.Services3, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <soapExtensionImporterTypes>
        <add type="Microsoft.Web.Services3.Description.WseExtensionImporter, Microsoft.Web.Services3, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </soapExtensionImporterTypes>
      <protocols>
        <add name="HttpGet" />
        <add name="HttpPost" />
      </protocols>
    </webServices>
    <xhtmlConformance mode="Legacy" />
    <pages controlRenderingCompatibilityVersion="4.0" />
  </system.web>
  <system.webServer>
    <directoryBrowse enabled="true" showFlags="Date, Time, Size, Extension, LongDate" />
  </system.webServer>
  <appSettings>
    <add key="TRACE_ON" value="false" />
    <add key="DEBUG_LOG" value="true" />
    <add key="AzureBlobConnectionString" value="DefaultEndpointsProtocol=https;AccountName=saelitadevjpeast;AccountKey=lBJj8Kv+qC2pROuFsC5FwHGq5JAHxbMT+NVdkvfmSORMewrAuf+9TqdtIrEeXuoFW2rAWfyqYkH/4AxwIZXn8A==;EndpointSuffix=core.windows.net" />
    <add key="DEBUG_LOGIN" value="false" />
    <add key="wcf:useLegacyCertificateUsagePolicy" value="true" />
    <add key="TknMgrSvcApiKey" value="MTUyMjg1NzU1OTE5MEVsaXRhXzIwNjY5MDkxNDM=" />
    <add key="TknMgrSvcApiUri" value="https://intra.token-test.assurant.com/TokenManagerEngine/rest/v1/" />
    <add key="TknMgrSvcGenKey" value="Elita_Test_CC_New" />
    <add key="TknMgrSvcCCKey" value="Elita_Test_CC_New" />
    <add key="TknMgrSvcBAKey" value="Elita_Test_BA" />
    <add key="TknMgrSvcCHKey" value="Elita_Test_Name" />
  </appSettings>
  <settingsSection file="ElitaSecurity.config" />
  <system.serviceModel>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <extensions>
      <behaviorExtensions>
        <add name="requiresX509" type="ElitaInternalWS.Security.RequiresX509BehaviorExtension, ElitaInternalWS" />
      </behaviorExtensions>
    </extensions>
    <bindings>
      <basicHttpBinding>
        <binding name="LargeNoneBinding" messageEncoding="Text" maxBufferSize="524288" maxBufferPoolSize="524288" maxReceivedMessageSize="524288">
          <security mode="None" />
          <readerQuotas maxStringContentLength="524288" maxArrayLength="524288" />
        </binding>
        <binding name="IncreasedTimeout" messageEncoding="Text" maxBufferSize="524288" maxBufferPoolSize="524288" maxReceivedMessageSize="524288" sendTimeout="00:05:00">
          <security mode="None" />
          <readerQuotas maxStringContentLength="524288" maxArrayLength="524288" />
        </binding>
        <binding name="LargeNoneMtomBinding" messageEncoding="Mtom" maxBufferSize="11010048" maxBufferPoolSize="11010048" maxReceivedMessageSize="11010048">
          <security mode="None" />
          <readerQuotas maxArrayLength="11010048" />
        </binding>
        <!--<binding name="GsxWSLaAspBinding" messageEncoding="Mtom">
          <security mode="Transport">
            <transport clientCredentialType="Certificate"/>
            <message clientCredentialType="Certificate"/>
          </security>
        </binding>-->
        <binding name="GsxWSAmIPhoneBinding" messageEncoding="Mtom">
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
            <message clientCredentialType="Certificate" />
          </security>
        </binding>
      </basicHttpBinding>
      <customBinding>
        <binding name="InternalWSBindingV2">
          <security authenticationMode="UserNameOverTransport" allowInsecureTransport="true" />
          <textMessageEncoding messageVersion="Soap11">
            <readerQuotas maxDepth="2147483646" maxStringContentLength="2147483646" maxArrayLength="2147483646" maxBytesPerRead="2147483646" maxNameTableCharCount="2147483646" />
          </textMessageEncoding>
          <httpTransport maxBufferPoolSize="2147483646" maxReceivedMessageSize="2147483646" hostNameComparisonMode="StrongWildcard" />
        </binding>
        <binding name="LargeMtomBindingV2">
          <security authenticationMode="UserNameOverTransport" allowInsecureTransport="true">
            <secureConversationBootstrap />
          </security>
          <mtomMessageEncoding messageVersion="Soap12" maxBufferSize="10485760">
            <readerQuotas maxArrayLength="10485760" maxStringContentLength="10485760" />
          </mtomMessageEncoding>
          <httpTransport maxBufferSize="10485760" maxReceivedMessageSize="10485760" />
        </binding>
        <binding name="ElitaServicesBinding">
          <security defaultAlgorithmSuite="Default" authenticationMode="UserNameOverTransport" allowInsecureTransport="true" requireDerivedKeys="true" includeTimestamp="true" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
            <localClientSettings detectReplays="false" />
            <localServiceSettings detectReplays="false" />
          </security>
          <textMessageEncoding messageVersion="Soap11" />
          <httpTransport />
        </binding>
      </customBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ElitaInternalWS.Test.WcfTestBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.Olita.OlitaWcfBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.Galaxy.GalaxyWcfBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.Gvs.GvsWcfBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.Vsc.VscWcfBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.OpenMobile.OpenMobileWcfBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.Utilities.UtilityWcfBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.Generic.GenericWcfBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.SNMPortal.SNMPortalWcfBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ElitaInternalWS.CustomerReg.CustomerRegistrationBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="InternalWSBehaviorV0">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="InternalWSBehaviorV1">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <dataContractSerializer maxItemsInObjectGraph="2147483646" />
          <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="ElitaInternalWS.Security.ElitaServiceAuthorizationManager, ElitaInternalWS">
            <authorizationPolicies>
              <add policyType="ElitaInternalWS.Security.ElitaAuthorizationPolicyV1, ElitaInternalWS" />
            </authorizationPolicies>
          </serviceAuthorization>
        </behavior>
        <behavior name="InternalWSBehaviorV2">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <dataContractSerializer maxItemsInObjectGraph="2147483646" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="ElitaInternalWS.Security.ElitaUserNamePasswordValidator, ElitaInternalWS" />
          </serviceCredentials>
          <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="ElitaInternalWS.Security.ElitaServiceAuthorizationManager, ElitaInternalWS">
            <authorizationPolicies>
              <add policyType="ElitaInternalWS.Security.ElitaAuthorizationPolicyV2, ElitaInternalWS" />
            </authorizationPolicies>
          </serviceAuthorization>
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="GSXServiceBehav">
          <clientCredentials>
            <clientCertificate storeName="My" storeLocation="LocalMachine" x509FindType="FindByThumbprint" findValue="3c 0a 93 a6 c8 21 48 ed f1 df 41 0c 8b 26 98 c0 16 73 74 96" />
            <serviceCertificate>
              <authentication certificateValidationMode="PeerOrChainTrust" />
            </serviceCertificate>
          </clientCredentials>
        </behavior>
        <behavior name="ElitaSecureEndPoint">
          <requiresX509 />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="ElitaInternalWS.Test.WcfTestBehavior" name="ElitaInternalWS.Test.WcfTest">
        <endpoint address="" binding="basicHttpBinding" bindingNamespace="http://elita.assurant.com/testNamespace" contract="ElitaInternalWS.Test.IWcfTest" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.Olita.OlitaWcfBehavior" name="ElitaInternalWS.Olita.OlitaWcf">
        <endpoint address="" binding="basicHttpBinding" bindingNamespace="http://elita.assurant.com/olitaNamespace" contract="ElitaInternalWS.Olita.IOlitaWcf" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.Galaxy.GalaxyWcfBehavior" name="ElitaInternalWS.Galaxy.GalaxyWcf">
        <endpoint address="" binding="basicHttpBinding" bindingNamespace="http://elita.assurant.com/galaxyNamespace" contract="ElitaInternalWS.Galaxy.IGalaxyWcf" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.Gvs.GvsWcfBehavior" name="ElitaInternalWS.Gvs.GvsWcf">
        <endpoint address="" binding="basicHttpBinding" bindingNamespace="http://elita.assurant.com/gvsNamespace" bindingConfiguration="LargeNoneBinding" contract="ElitaInternalWS.Gvs.IGvsWcf" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.Vsc.VscWcfBehavior" name="ElitaInternalWS.Vsc.VscWcf">
        <endpoint address="" binding="basicHttpBinding" bindingNamespace="http://elita.assurant.com/vscNamespace" contract="ElitaInternalWS.Vsc.IVscWcf" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.OpenMobile.OpenMobileWcfBehavior" name="ElitaInternalWS.OpenMobile.OpenMobileWcf">
        <endpoint address="" binding="basicHttpBinding" bindingNamespace="http://elita.assurant.com/openmobileNamespace" contract="ElitaInternalWS.OpenMobile.IOpenMobileWcf" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.Utilities.UtilityWcfBehavior" name="ElitaInternalWS.Utilities.UtilityWcf">
        <endpoint address="" binding="basicHttpBinding" bindingNamespace="http://elita.assurant.com/utilitiesNamespace" contract="ElitaInternalWS.Utilities.IUtilityWcf" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.Generic.GenericWcfBehavior" name="ElitaInternalWS.Generic.GenericWcf">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/genericNamespace" contract="ElitaInternalWS.Generic.IGenericWcf" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.SNMPortal.SNMPortalWcfBehavior" name="ElitaInternalWS.SNMPortal.SNMPortalWcf">
        <endpoint address="" binding="basicHttpBinding" bindingNamespace="http://elita.assurant.com/SNMPortal" bindingConfiguration="IncreasedTimeout" contract="ElitaInternalWS.SNMPortal.ISNMPortalWcf" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="ElitaInternalWS.CustomerReg.CustomerRegistrationBehavior" name="ElitaInternalWS.CustomerReg.CustomerRegistration">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/CustomerReg" contract="ElitaInternalWS.CustomerReg.ICustomerRegistration" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV0" name="ElitaInternalWS.Accounting.AccountingServiceV1">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/Accounting" contract="ElitaInternalWS.Accounting.IAccountingServiceV1" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.Accounting.AccountingServiceV2">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Accounting" contract="ElitaInternalWS.Accounting.IAccountingServiceV2" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Accounting" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.Accounting.IAccountingServiceV2" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV1" name="ElitaInternalWS.Claims.ClaimServiceV1">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/Claim" contract="ElitaInternalWS.Claims.IClaimServiceV1" />
        <endpoint address="/Secure" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/Claim" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.Claims.IClaimServiceV1" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV1" name="ElitaInternalWS.Claims.ClaimDocumentServiceV1">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="LargeNoneMtomBinding" bindingNamespace="http://elita.assurant.com/Claim" contract="ElitaInternalWS.Claims.IClaimDocumentServiceV1" />
        <endpoint address="/Secure" binding="basicHttpBinding" bindingConfiguration="LargeNoneMtomBinding" bindingNamespace="http://elita.assurant.com/Claim" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.Claims.IClaimDocumentServiceV1" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.Claims.ClaimDocumentServiceV2">
        <endpoint address="" binding="customBinding" bindingConfiguration="LargeMtomBindingV2" bindingNamespace="http://elita.assurant.com/Claim" contract="ElitaInternalWS.Claims.IClaimDocumentServiceV2" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="LargeMtomBindingV2" bindingNamespace="http://elita.assurant.com/Claim" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.Claims.IClaimDocumentServiceV2" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.Certificates.CertificateDocumentServiceV1">
        <endpoint address="" binding="customBinding" bindingConfiguration="LargeMtomBindingV2" bindingNamespace="http://elita.assurant.com/Certificate" contract="ElitaInternalWS.Certificates.ICertificateDocumentServiceV1" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="LargeMtomBindingV2" bindingNamespace="http://elita.assurant.com/Certificate" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.Certificates.ICertificateDocumentServiceV1" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV1" name="ElitaInternalWS.Certificates.CertificateServiceV1">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/Certificate" contract="ElitaInternalWS.Certificates.ICertificateServiceV1" />
        <endpoint address="/Secure" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/Certificate" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.Certificates.ICertificateServiceV1" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV1" name="ElitaInternalWS.SpecializedServices.CHLMobileSCPortal">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/SpecializedServices" contract="ElitaInternalWS.SpecializedServices.ICHLMobileSCPortal" />
        <endpoint address="/Secure" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" bindingNamespace="http://elita.assurant.com/SpecializedServices" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.ICHLMobileSCPortal" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.FVSTMobileApplicationService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Configuration" contract="ElitaInternalWS.IFVSTMobileApplicationService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Configuration" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.IFVSTMobileApplicationService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>

      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.Ascn.SNMPService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Configuration" contract="ElitaInternalWS.SpecializedServices.Ascn.ISNMPService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Configuration" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.Ascn.ISNMPService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.ServiceOrderDocument.ServiceOrderDocumentService">
        <endpoint address="" binding="customBinding" bindingConfiguration="LargeMtomBindingV2" bindingNamespace="http://elita.assurant.com/Configuration" contract="ElitaInternalWS.ServiceOrderDocument.IServiceOrderDocumentService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Configuration" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.ServiceOrderDocument.IServiceOrderDocumentService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.GW.GwPilService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.SpecializedServices.GW.IGwPilService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.GW.IGwPilService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>

      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.Goow.GoogleService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.SpecializedServices.Goow.IGoogleService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.Goow.IGoogleService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.Tisa.ClaimService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.SpecializedServices.Tisa.IClaimService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.Tisa.IClaimService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.ClarMaxValueService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.IClarMaxValueService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.IClarMaxValueService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.Tisa.CHLSamsungUpgradeService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.SpecializedServices.Tisa.ICHLSamsungUpgradeService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.Tisa.ICHLSamsungUpgradeService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.CertAfterUpgradeService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.ICertAfterUpgradeService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.ICertAfterUpgradeService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.Tisa.CertificateCustomerService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.SpecializedServices.Tisa.ICertificateCustomerService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.Tisa.ICertificateCustomerService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.Timb.CertificateCustomerService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.SpecializedServices.Timb.ICertificateCustomerService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.Timb.ICertificateCustomerService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.Timb.CertificateClaimService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.SpecializedServices.Timb.ICertificateClaimService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.Timb.ICertificateClaimService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.CertCustomerInfoService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.ICertCustomerInfoService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.ICertCustomerInfoService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.GeographicServices.RegionAndComunaService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.GeographicServices.IRegionAndComunaService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.GeographicServices.IRegionAndComunaService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.SFR.SFRPolicyService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" contract="ElitaInternalWS.SpecializedServices.SFR.ISFRPolicyService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.SFR.ISFRPolicyService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.SpecializedServices.Abag.EscService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/SpecializedServices" contract="ElitaInternalWS.SpecializedServices.Abag.IEscService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/SpecializedServices" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.SpecializedServices.Abag.IEscService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV1" name="ElitaInternalWS.AppServices.SA.SNMPortal.ClaimReportService">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" contract="ElitaInternalWS.AppServices.SA.SNMPortal.IClaimReportService" />
        <endpoint address="/Secure" binding="basicHttpBinding" bindingConfiguration="LargeNoneBinding" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.AppServices.SA.SNMPortal.IClaimReportService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="InternalWSBehaviorV2" name="ElitaInternalWS.AppServices.SA.APRService">
        <endpoint address="" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Configuration" contract="ElitaInternalWS.AppServices.SA.IAPRService" />
        <endpoint address="/Secure" binding="customBinding" bindingConfiguration="InternalWSBindingV2" bindingNamespace="http://elita.assurant.com/Configuration" behaviorConfiguration="ElitaSecureEndPoint" contract="ElitaInternalWS.AppServices.SA.IAPRService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>

    <client>
      <!--TEST-->
      <!--<endpoint address="https://gsxapiut.apple.com/gsx-ws/services/am/asp" binding="basicHttpBinding" bindingConfiguration="GsxWSLaAspBinding" contract="Client.GsxWSLaAspPort" name="GsxWSLaAspPort" behaviorConfiguration="GSXServiceBehav"/>-->
      <!--PROD-->
      <!--<endpoint address="https://gsxapi.apple.com/gsx-ws/services/am/iphone"
          behaviorConfiguration="GSXServiceBehav" binding="basicHttpBinding"
          bindingConfiguration="GsxWSLaAspBinding" contract="Client.GsxWSLaAspPort"
          name="GsxWSLaAspPort" />-->
      <endpoint address="https://gsxapi.apple.com/gsx-ws/services/am/iphone" binding="basicHttpBinding" bindingConfiguration="GsxWSAmIPhoneBinding" contract="Client.Production.GsxWSAmIPhonePort" name="GsxWSAmIPhonePort" />
      <endpoint binding="customBinding" bindingConfiguration="ElitaServicesBinding" contract="PolicyService.IPolicyService" name="CustomBinding_IPolicyService" />
    </client>
  </system.serviceModel>
  <applicationSettings>
    <ElitaInternalWS.My.MySettings>
      <setting name="ElitaInternalWS_GAPWebServiceRef_WSElitaServiceOrder" serializeAs="String">
        <value>https://b2b.gapnetworks.com/assurant/ws/staging/WSElitaServiceOrder.asmx</value>
      </setting>
      <setting name="ElitaInternalWS_GAPWebServiceProdRef_WSElitaServiceOrder" serializeAs="String">
        <value>https://b2b.gapnetworks.com/assurant/ws/production/WSElitaServiceOrder.asmx</value>
      </setting>
    </ElitaInternalWS.My.MySettings>
  </applicationSettings>
  <system.diagnostics>
    <trace autoflush="true" />
    <sources>
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="sdt" type="System.Diagnostics.XmlWriterTraceListener" initializeData="C:\Temp\Trace\ElitaInternalWS.svclog" />
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  <!--<system.net>
    <defaultProxy>
      <proxy autoDetect="False" bypassonlocal="False" proxyaddress="http://127.0.0.1:8888" usesystemdefault="False" />
    </defaultProxy>
  </system.net>-->
  <oracle.manageddataaccess.client>
    <version number="*">
      <LDAPsettings>
        <LDAPsetting name="DIRECTORY_SERVERS" value="(tnsnames-mia.assurant.com:389,tnsnames.assurant.com:389)" />
        <LDAPsetting name="DIRECTORY_SERVER_TYPE" value="oid" />
        <LDAPsetting name="DEFAULT_ADMIN_CONTEXT" value="dc=act,dc=assurant,dc=com" />
      </LDAPsettings>
      <settings>
        <setting name="NAMES.DIRECTORY_PATH" value="(LDAP)" />
      </settings>
      <dataSources>
        <dataSource alias="SampleDataSource" descriptor="(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=localhost)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=ORCL))) " />
      </dataSources>
    </version>
  </oracle.manageddataaccess.client>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v12.0" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <Unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="ICommonRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICommonRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="CommonRepository" type="Assurant.ElitaPlus.DataAccess.CommonRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="IDealerRepository" type="Assurant.ElitaPlus.DataAccessInterface.IDealerRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="DealerRepository" type="Assurant.ElitaPlus.DataAccess.DealerRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="ICertificateRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICertificateRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="CertificateRepository" type="Assurant.ElitaPlus.DataAccess.CertificateRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="ICompanyRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICompanyRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="CompanyRepository" type="Assurant.ElitaPlus.DataAccess.CompanyRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="ICountryRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICountryRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="CountryRepository" type="Assurant.ElitaPlus.DataAccess.CountryRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="IAddressRepository" type="Assurant.ElitaPlus.DataAccessInterface.IAddressRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="AddressRepository" type="Assurant.ElitaPlus.DataAccess.AddressRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="IEquipmentRepository" type="Assurant.ElitaPlus.DataAccessInterface.IEquipmentRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="EquipmentRepository" type="Assurant.ElitaPlus.DataAccess.EquipmentRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="ICompanyGroupRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICompanyGroupRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="CompanyGroupRepository" type="Assurant.ElitaPlus.DataAccess.CompanyGroupRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="ICurrencyRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICurrencyRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="CurrencyRepository" type="Assurant.ElitaPlus.DataAccess.CurrencyRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="IClaimRepository" type="Assurant.ElitaPlus.DataAccessInterface.IClaimRepository`1, Assurant.ElitaPlus.DataAccessInterface" />
    <alias alias="ClaimRepository" type="Assurant.ElitaPlus.DataAccess.ClaimRepository`1, Assurant.ElitaPlus.DataAccess" />
    <alias alias="IFulfillmentRulesClientProvider" type="Assurant.Elita.Fulfillment.BusinessRulesEngineInterface.IFulfillmentRulesClientProvider, Assurant.Elita.Fulfillment.BusinessRulesEngineInterface" />
    <alias alias="IFulfillmentRulesClient" type="Assurant.Elita.Fulfillment.BusinessRulesEngineInterface.IFulfillmentRulesClient, Assurant.Elita.Fulfillment.BusinessRulesEngineInterface" />
    <alias alias="ElitaRulesClientProvider" type="Assurant.Elita.Fulfillment.ElitaRulesEngine.ElitaRulesClientProvider, Assurant.Elita.Fulfillment.ElitaRulesEngine" />
    <container>
      <!--Default Container-->
      <register type="ICommonRepository" mapTo="CommonRepository" />
      <register type="IDealerRepository" mapTo="DealerRepository" />
      <register type="ICertificateRepository" mapTo="CertificateRepository" />
      <register type="ICompanyRepository" mapTo="CompanyRepository" />
      <register type="ICountryRepository" mapTo="CountryRepository" />
      <register type="IAddressRepository" mapTo="AddressRepository" />
      <register type="IEquipmentRepository" mapTo="EquipmentRepository" />
      <register type="ICompanyGroupRepository" mapTo="CompanyGroupRepository" />
      <register type="ICurrencyRepository" mapTo="CurrencyRepository" />
      <register type="IClaimRepository" mapTo="ClaimRepository" />
      <register type="Assurant.ElitaPlus.Business.ICacheFacade, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CacheFacade, Assurant.ElitaPlus.Business">
        <lifetime type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      </register>
      <register type="Assurant.ElitaPlus.Business.ICertificateManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CertificateManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.ICommonManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CommonManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.IDealerManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.DealerManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.ICompanyManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CompanyManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.ICountryManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CountryManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.IAddressManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.AddressManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.IEquipmentManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.EquipmentManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.ICompanyGroupManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CompanyGroupManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.ICurrencyManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CurrencyManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.Business.IClaimManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.ClaimManager, Assurant.ElitaPlus.Business" />
      <register type="Assurant.ElitaPlus.External.Interfaces.IAppleGSXServiceManager_Production, Assurant.ElitaPlus.External.Interfaces" mapTo="Assurant.ElitaPlus.External.AppleGSX.AppleGSXServiceManager_Production, Assurant.ElitaPlus.External.AppleGSX">
        <lifetime type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      </register>
      <register type="IFulfillmentRulesClientProvider" mapTo="ElitaRulesClientProvider" />
    </container>
  </Unity>
  <elitaConfiguration>
    <general environment="Development" hub="NO" component="InternalWS" machineDomain="ATL0" fileClientDirectory="C:\ESC\" serviceOrderEmailSMTPServer="Mailrelay2005.etdbw.com" serviceOrderEmailAttachDirectory="C:/WebTemp/ElitaPlus/Reports/" ceMinTimeOut="2" cacheMaxAgeInMinutes="5" />
   <database userName="elita" password="elidev" dataSourceName="elitaplus_dev" securedUserName="elp_app_user" securedPassword="elp1ple" />
    
    <security ldapServer="LDAP://directorydev.assurant.com:389" privacyGroup="Europe" userManagementGroup="ElitaPlus" defaultGroup="Services" allowedGroups="InternalUsers" />
    <felita felitaUserId="ftpintl" felitaPassword="ftpintl1" reconUserId="adassurant\pv5k6b" reconPassword="assurant10" wcfUploadEndPoint="http://mia0wappt015/FelitaConnect/FelitaConnectService.svc" />
    <smartStream ftpUserId="ftpintl" ftpPassword="ftpintl1" wcfGLUserId="ELITA" wcfGLPassword="TestPwd2" wcfGLCertName="GLService" wcfAPUserId="ELITA" wcfAPPassword="TestPwd2" wcfAPCertName="Assurant Application" />
    <unixServer userId="elitaplus" password="elita2012" interfaceDirectory="C:\WebTemp\ElitaPlus\Interfaces\" />
    <webService userId="elitanet" password="fresy" group="Services" />
  </elitaConfiguration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.4.0.0" newVersion="4.4.0.0" />
      </dependentAssembly>
      <!--<dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.1.1" newVersion="4.1.1.1" />
      </dependentAssembly>-->
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <publisherPolicy apply="no" />
        <assemblyIdentity name="Oracle.ManagedDataAccess" publicKeyToken="89b483f429c47342" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.122.1.0" newVersion="4.122.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.1.1" newVersion="4.1.1.1" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.data>
    <DbProviderFactories>
      <remove invariant="Oracle.ManagedDataAccess.Client" />
      <add name="ODP.NET, Managed Driver" invariant="Oracle.ManagedDataAccess.Client" description="Oracle Data Provider for .NET, Managed Driver" type="Oracle.ManagedDataAccess.Client.OracleClientFactory, Oracle.ManagedDataAccess, Version=4.122.1.0, Culture=neutral, PublicKeyToken=89b483f429c47342" />
    </DbProviderFactories>
  </system.data>
</configuration>