<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- Rel.Web.config  **** Begin AssurNet configuration sections **** -->
  <configSections>
    <section name="Unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <section name="microsoft.web.services3" type="Microsoft.Web.Services3.Configuration.WebServicesConfiguration, Microsoft.Web.Services3, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="settingsSection" type="System.Configuration.NameValueFileSectionHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
    <section name="oracle.manageddataaccess.client" type="OracleInternal.Common.ODPMSectionHandler, Oracle.ManagedDataAccess, Version=4.122.1.0, Culture=neutral, PublicKeyToken=89b483f429c47342"/>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="Assurant.ElitaPlus.ElitaPlusWebApp.My.MySettings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    </sectionGroup>
    <sectionGroup name="elitaConfiguration" type="Assurant.Elita.Configuration.ElitaConfigurationSectionGroup, Assurant.Elita.Configuration">
      <section name="general" type="Assurant.Elita.Configuration.GeneralSection, Assurant.Elita.Configuration"/>
      <section name="database" type="Assurant.Elita.Configuration.DatabaseSection, Assurant.Elita.Configuration"/>
      <section name="security" type="Assurant.Elita.Configuration.SecuritySection, Assurant.Elita.Configuration" />
      <section name="felita" type="Assurant.Elita.Configuration.FelitaSection, Assurant.Elita.Configuration"/>
      <section name="smartStream" type="Assurant.Elita.Configuration.SmartStreamSection, Assurant.Elita.Configuration"/>
      <section name="unixServer" type="Assurant.Elita.Configuration.UnixServerSection, Assurant.Elita.Configuration"/>      
      <section name="webService" type="Assurant.Elita.Configuration.WebServiceSection, Assurant.Elita.Configuration"/>
      <section name="ssrsReport" type="Assurant.Elita.Configuration.SsrsReportSection, Assurant.Elita.Configuration"/>
    </sectionGroup>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <system.webServer>
    <httpProtocol>
      <customHeaders>
        ~ElitaHeaders~
      </customHeaders>
    </httpProtocol>
    <handlers>
      ~ElitaHandlers~
        <add name="Reserved-ReportViewerWebControl-axd" path="Reserved.ReportViewerWebControl.axd" verb="*" type="Microsoft.Reporting.WebForms.HttpHandler" resourceType="Unspecified" />
    </handlers>
  </system.webServer>
  <microsoft.web.services3>

  </microsoft.web.services3>
  <!-- Web.config **** Begin AssurNet configuration sections **** -->

  <system.web>
    <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug="true" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
    -->
    <compilation defaultLanguage="vb" debug="false" maxBatchGeneratedFileSize="3000000" targetFramework="4.6.2">
      <assemblies>
        <add assembly="Microsoft.Owin.Host.SystemWeb" />
        <add assembly="Microsoft.Web.UI.WebControls, Version=1.0.2.226, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <!--  CUSTOM ERROR MESSAGES
          Set customErrors mode="On" or "RemoteOnly" to enable custom error messages, "Off" to disable. 
          Add <error> tags for each of the errors you want to handle.
    -->
    <customErrors mode="Off"/>
    <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are "Windows", 
          "Forms", "Passport" and "None"
    -->
    <authentication mode="Windows"/>
    <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: "*" mean everyone, "?" means anonymous 
          (unauthenticated) users.
    -->
    <authorization>
      <allow users="*"/>
      <!-- Allow all users -->
      <!--  <allow     users="[comma separated list of users]"
                             roles="[comma separated list of roles]"/>
                  <deny      users="[comma separated list of users]"
                             roles="[comma separated list of roles]"/>
            -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the "trace.axd" page from your web application
          root. 
    -->
    <trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="false"/>


    <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL.
          To disable cookies, set sessionState cookieless="true".
    -->
    <sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;user id=sa;password=" cookieless="false" timeout="~sessionStateTimeout~" cookieSameSite="None" />
    <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding="utf-8" responseEncoding="utf-8"/>

    <httpRuntime
      executionTimeout="10800"
      maxRequestLength="1048576"
      targetFramework="4.6.2"
    />
    <webServices>
      <protocols>
        <add name="HttpGet"/>
        <add name="HttpPost"/>
      </protocols>
    </webServices>
    <xhtmlConformance mode="Transitional"/>
    <pages enableEventValidation="false" validateRequest="true" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <controls>
        <add tagPrefix="asj" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
        <add namespace="AjaxControlToolkit" assembly="AjaxControlToolkit" tagPrefix="ajaxToolkit"/>
        <add tagPrefix="RSWEB" namespace="Microsoft.Reporting.WebForms" assembly="Microsoft.ReportViewer.WebForms, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"/>
      </controls>
    </pages>
  </system.web>

  <appSettings>
    <add key="TRACE_ON" value="false"/>
    <add key="DEBUG_LOG" value="true"/>
    <add key="DEBUG_LOGIN" value="true"/>
    <add key="aspnet:MaxHttpCollectionKeys" value="15001" />
    <add key="aspnet:SuppressSameSiteNone" value="~ASPNET.SuppressSameSiteNone~" />
    <add key="Assurant.Elita.TimeZoneId" value="~Assurant.Elita.TimeZoneId~" />
    <!--Claim Recording service-->
    <add key="ValidationSettings:UnobtrusiveValidationMode" value="None" />
    <add key="CLAIM_RECSERVICE_USERNAME" value="~ClaimServiceUserName~"/>
    <add key="CLAIM_RECSERVICE_PASSWORD" value="~ClaimServicePassword~"/>
    <add key ="CLAIM_SERVICE_URL" value="~ClaimServiceUrl~"/>
    <add key ="GIFTCARD_SERVICE_URL" value="~GiftCardServiceUrl~"/>
    <add key="CacheDuration" value="~CacheDuration~"/>
    <add key="AzureBlobConnectionString" value="~AzureBlobConnectionString~" />
    <!--
    <add key="Assurant.ElitaPlus.WebApp.VscWSRef.VscWS" value="http://mia0tref.mia0.assurant.com/ElitaInternalWS/Vsc/VscWS.asmx"/>
  <add key="Assurant.ElitaPlus.WebApp.VscWSRef.VscWS" value="http://localhost/ElitaInternalWS/Vsc/VscWS.asmx"/>
  -->
    <add key="INDIX_SERVICE_THUMBPRINT" value="~IDXSVC~"/>
    <add key="wcf:useLegacyCertificateUsagePolicy" value="true" />
    <add key="Owin.AutomaticAppStartup" value="true" />
    ~LiasonKeys~
    <add key="Okta.ClientId" value="0oajjskyr2oqgl3bo0h7" />
    <add key="Okta.ClientSecret" value="UQXljAtS-N0w1j6IHwyZxvn6exY0y6mCiQpt4qG4" />
    <add key="Okta.OrgUri" value="https://dev-assurant.oktapreview.com" />
    <add key="Okta.ResponseType" value="code id_token" />
    <add key="Okta.Scope" value="openid profile email groups" />
    <add key="Okta.RedirectUri" value="http://localhost/elitaplus/signin-oidc" />
    <add key="Okta.PostLogoutRedirectUri" value="http://localhost/elitaplus/Default.aspx" />
  </appSettings>
  <settingsSection file="ElitaSecurity.config">
    <!--"Settings.xml">-->
  </settingsSection>
  <applicationSettings>
    <Assurant.ElitaPlus.ElitaPlusWebApp.My.MySettings>
      <setting name="Assurant_ElitaPlus_WebApp_VscWSRef_VscWS" serializeAs="String">
        <value>http://localhost/ElitaInternalWS/Vsc/VscWS.asmx</value>
      </setting>
      <setting name="Assurant_ElitaPlus_WebApp_OlitaWSRef_OlitaWS"
               serializeAs="String">
        <value>http://localhost/ElitaInternalWS/Olita/OlitaWS.asmx</value>
      </setting>
    </Assurant.ElitaPlus.ElitaPlusWebApp.My.MySettings>
  </applicationSettings>
  <system.web.extensions>
    <scripting>
      <webServices>
        <!-- Uncomment this line to customize maxJsonLength and add a 
         custom converter -->
        <!--
      <jsonSerialization maxJsonLength="500">
        <converters>
          <add name="ConvertMe" 
             type="Acme.SubAcme.ConvertMeTypeConverter"/>
        </converters>
      </jsonSerialization>
        -->
        <jsonSerialization maxJsonLength="1000000">

        </jsonSerialization>
        <!-- Uncomment this line to enable the authentication service. 
           Include requireSSL="true" if appropriate. -->
        <!--
      <authenticationService enabled="true" requireSSL = "true|false"/>
      -->

        <!-- Uncomment these lines to enable the profile service. To 
           allow profile properties to be retrieved
           and modified in ASP.NET AJAX applications, you need to add 
           each property name to the readAccessProperties and
           writeAccessProperties attributes. -->
        <!--
      <profileService enabled="true"
        readAccessProperties="propertyname1,propertyname2"
        writeAccessProperties="propertyname1,propertyname2" />
      -->
      </webServices>
      <!-- 
    <scriptResourceHandler enableCompression="true" 
        enableCaching="true" />
    -->
    </scripting>
  </system.web.extensions>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
      <remove name="ScriptModule"/>
      <add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </modules>
  </system.webServer>
  <system.codedom>
    <compilers>
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.VisualBasic.VBCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" warningLevel="4">
        <providerOption name="CompilerVersion" value="v4.0"/>
        <providerOption name="OptionInfer" value="true"/>
        <providerOption name="WarnAsError" value="false"/>
      </compiler>
    </compilers>
  </system.codedom>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IOlitaWcf" closeTimeout="00:01:00"
                 openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                 allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
                 maxBufferSize="262144" maxBufferPoolSize="524288" maxReceivedMessageSize="262144"
                 messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered"
                 useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="262144" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None"
                       realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
        <binding name="BasicHttpBinding_MaxValueRecovery" >
          <security mode="Transport">
          </security>
        </binding>
        <binding name="GetCandidateAddressesSoapBinding" >
          <security mode="Transport"/>
        </binding>
        <binding name="ValidateAddressGlobalSoapBinding" >
          <security mode="Transport"/>
        </binding>
        <binding name="ValidateAddressLoqateSoapBinding" />
        <binding name="BasicHttpBinding_IUtilityWcf" maxReceivedMessageSize="2147483647" />
      </basicHttpBinding>
      <customBinding>
        <binding name="CustomBinding_IDocument">
          <security authenticationMode="UserNameOverTransport" allowInsecureTransport="true">
            <secureConversationBootstrap />
          </security>
          <mtomMessageEncoding messageVersion="Soap12" maxBufferSize="10485760">
            <readerQuotas maxArrayLength="10485760" maxStringContentLength="10485760" />
          </mtomMessageEncoding>
          <httpTransport maxBufferSize="10485760" maxReceivedMessageSize="10485760"/>
        </binding>
        <binding name="CustomBinding_IWorkQueueService" closeTimeout="00:01:00"
                 openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          <textMessageEncoding messageVersion="Soap12"></textMessageEncoding>
          <security authenticationMode="UserNameOverTransport" allowInsecureTransport="True" />
          <httpTransport maxReceivedMessageSize="104857600" />
          <!--100 MB-->
        </binding>
        <binding name="ElitaHttpServiceBinding">
          <security defaultAlgorithmSuite="Default" authenticationMode="UserNameOverTransport" allowInsecureTransport="true"
            requireDerivedKeys="true" includeTimestamp="true" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
            <localClientSettings detectReplays="false" />
            <localServiceSettings detectReplays="false" />
          </security>
          <textMessageEncoding messageVersion="Soap11" />
          <httpTransport maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" />
        </binding>
        <binding name="ElitaHttpsServiceBinding">
          <security defaultAlgorithmSuite="Default" authenticationMode="UserNameOverTransport"
            requireDerivedKeys="true" includeTimestamp="true" messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
            <localClientSettings detectReplays="false" />
            <localServiceSettings detectReplays="false" />
          </security>
          <textMessageEncoding messageVersion="Soap11" />
          <httpsTransport />
        </binding>
        <binding name="CustomBinding_IAuthorization" closeTimeout="00:01:00"
                 openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          <textMessageEncoding messageVersion="Soap12"></textMessageEncoding>
          <security authenticationMode="UserNameOverTransport" allowInsecureTransport="True" />
          <httpTransport />
        </binding>
        <binding name="CustomBinding_IDocumentAdmin" closeTimeout="00:01:00"
                 openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          <textMessageEncoding messageVersion="Soap12"></textMessageEncoding>
          <security authenticationMode="UserNameOverTransport" allowInsecureTransport="True" />
          <httpTransport />
        </binding>
        <binding name="CustomBinding_FileManagerRelay">
          <security defaultAlgorithmSuite="Default" authenticationMode="UserNameOverTransport"
             requireDerivedKeys="true" includeTimestamp="true" allowInsecureTransport="true"
             messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
            <localClientSettings detectReplays="false" />
            <localServiceSettings detectReplays="false" />
          </security>
          <mtomMessageEncoding messageVersion="Soap11" maxBufferSize="2147483647" />
          <httpTransport maxReceivedMessageSize="2147483647" />
        </binding>
      </customBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="ElitaInternalWS.Test.WcfTestBehaviorSSL">
          <clientCredentials>
            <serviceCertificate>
              <defaultCertificate findValue="3c ca 39 10 2a ac dd b1 96 a8 1a 07 c3 67 cb 93" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySerialNumber"/>
              <authentication certificateValidationMode="PeerOrChainTrust"/>
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <client>
      <endpoint binding="customBinding" bindingConfiguration="CustomBinding_IWorkQueueService" contract="WrkQueue.IWorkQueueService" name="CustomBinding_IWorkQueueService" />
      <endpoint binding="customBinding" bindingConfiguration="CustomBinding_IAuthorization" contract="Auth.IAuthorization" name="CustomBinding_IAuthorization" />
      <endpoint binding="customBinding" bindingConfiguration="CustomBinding_IDocumentAdmin" contract="DocAdmin.IDocumentAdmin" name="CustomBinding_IDocumentAdmin" />
      <endpoint binding="customBinding" bindingConfiguration="CustomBinding_IDocument" contract="Doc.IDocument" name="CustomBinding_IDocument" />
      <endpoint binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_MaxValueRecovery" contract="DRPSystem.MaxValueRecovery" name="BasicHttpBinding_MaxValueRecovery" />
      <endpoint address="http://localhost/ElitaInternalWS/Olita/OlitaWcf.svc?Hub=NO"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IOlitaWcf"
                contract="OlitaWcfRef.IOlitaWcf" name="BasicHttpBinding_IOlitaWcf" />
      <endpoint address="http://atl0wspcd001.cead.prd:8080/soap/GetCandidateAddresses" binding="basicHttpBinding" bindingConfiguration="GetCandidateAddressesSoapBinding" contract="CandidateAddress.GetCandidateAddresses" name="GetCandidateAddressesPort" />
      <endpoint address="http://atl0wspcd001.cead.prd:8080/soap/ValidateAddressGlobal" binding="basicHttpBinding" bindingConfiguration="ValidateAddressGlobalSoapBinding" contract="ValidateAddressGlobal.ValidateAddressGlobal" name="ValidateAddressGlobalPort" />
      <endpoint binding="basicHttpBinding" bindingConfiguration="ValidateAddressLoqateSoapBinding" contract="SpectrumAddressValidation.ValidateAddressLoqate" name="ValidateAddressLoqatePort" />
      
      <endpoint binding="customBinding" bindingConfiguration="~ElitaIisServiceBinding~" contract="ClaimRecordingService.IClaimRecordingService" name="CustomBinding_IClaimRecordingService" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaIisServiceBinding~" contract="GiftCardService.IGiftCardService" name="CustomBinding_IGiftCardService" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaIisServiceBinding~" contract="QuestionService.IQuestionService" name="CustomBinding_IQuestionService" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaIisServiceBinding~" contract="ClaimFulfillmentService.IFulfillmentService" name="CustomBinding_IFulfillmentService" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaIisServiceBinding~" contract="ClaimService.IClaimService" name="CustomBinding_IClaimService" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaIisServiceBinding~" contract="PolicyService.IPolicyService" name="CustomBinding_IPolicyService" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaIisServiceBinding~" contract="LegacyBridgeService.ILegacyBridgeService" name="CustomBinding_ILegacyBridgeService" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaServiceFabricServiceBinding~" contract="FileAdminService.FileAdmin" name="CustomBinding_FileAdmin" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaServiceFabricServiceBinding~" contract="CaseManagementWebAppGatewayService.WebAppGateway" name="CustomBinding_CaseManagementWebAppGateway" />
      <endpoint binding="customBinding" bindingConfiguration="~ElitaServiceFabricServiceBinding~" contract="ClaimFulfillmentWebAppGatewayService.WebAppGateway" name="CustomBinding_WebAppGateway" />
      <endpoint binding="customBinding" bindingConfiguration="CustomBinding_FileManagerRelay" contract="FileManagerAdminService.FileManagerRelay" name="CustomBinding_FileManagerRelay" />
      <endpoint binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IUtilityWcf" contract="UtilityService.IUtilityWcf" name="BasicHttpBinding_IUtilityWcf" />
    </client>
  </system.serviceModel>
  <system.data>
    <DbProviderFactories>
      <remove invariant="Oracle.ManagedDataAccess.Client" />
      <add name="ODP.NET, Managed Driver"
           invariant="Oracle.ManagedDataAccess.Client"
           description="Oracle Data Provider for .NET, Managed Driver"
           type="Oracle.ManagedDataAccess.Client.OracleClientFactory, Oracle.ManagedDataAccess, Version=4.122.1.0, Culture=neutral, PublicKeyToken=89b483f429c47342" />
    </DbProviderFactories>
  </system.data>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <publisherPolicy apply="no" />
        <assemblyIdentity name="Oracle.ManagedDataAccess"
                          publicKeyToken="89b483f429c47342"
                          culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.122.1.0" newVersion="4.122.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Logging" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.3.0.0" newVersion="5.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.IdentityModel.Tokens.Jwt" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Protocols.OpenIdConnect" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Tokens" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Protocols" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Security.Cryptography.Algorithms" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.2.0.0" newVersion="4.2.0.0" />
      </dependentAssembly>
        <dependentAssembly>
            <assemblyIdentity name="System.IO.Compression" publicKeyToken="b77a5c561934e089" culture="neutral" />
            <bindingRedirect oldVersion="0.0.0.0-4.2.0.0" newVersion="4.2.0.0" />
        </dependentAssembly>    </assemblyBinding>
  </runtime>
  <oracle.manageddataaccess.client>
    <version number="*">
      <LDAPsettings>
        <LDAPsetting name="DIRECTORY_SERVERS" value="(tnsnames-atl.assurant.com:389,tnsnames.assurant.com:389)"/>
        <LDAPsetting name="DIRECTORY_SERVER_TYPE" value="oid"/>
        <LDAPsetting name="DEFAULT_ADMIN_CONTEXT" value="dc=act,dc=assurant,dc=com"/>
      </LDAPsettings>
      <settings>
        <setting name="NAMES.DIRECTORY_PATH" value="(LDAP)"/>
      </settings>
    </version>
  </oracle.manageddataaccess.client>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v12.0"/>
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <Unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="ICommonRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICommonRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="CommonRepository" type="Assurant.ElitaPlus.DataAccess.CommonRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="IDealerRepository" type="Assurant.ElitaPlus.DataAccessInterface.IDealerRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="DealerRepository" type="Assurant.ElitaPlus.DataAccess.DealerRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="ICertificateRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICertificateRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="CertificateRepository" type="Assurant.ElitaPlus.DataAccess.CertificateRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="ICompanyRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICompanyRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="CompanyRepository" type="Assurant.ElitaPlus.DataAccess.CompanyRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="ICountryRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICountryRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="CountryRepository" type="Assurant.ElitaPlus.DataAccess.CountryRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="IAddressRepository" type="Assurant.ElitaPlus.DataAccessInterface.IAddressRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="AddressRepository" type="Assurant.ElitaPlus.DataAccess.AddressRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="IEquipmentRepository" type="Assurant.ElitaPlus.DataAccessInterface.IEquipmentRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="EquipmentRepository" type="Assurant.ElitaPlus.DataAccess.EquipmentRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="ICompanyGroupRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICompanyGroupRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="CompanyGroupRepository" type="Assurant.ElitaPlus.DataAccess.CompanyGroupRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="ICurrencyRepository" type="Assurant.ElitaPlus.DataAccessInterface.ICurrencyRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="CurrencyRepository" type="Assurant.ElitaPlus.DataAccess.CurrencyRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <alias alias="IClaimRepository" type="Assurant.ElitaPlus.DataAccessInterface.IClaimRepository`1, Assurant.ElitaPlus.DataAccessInterface"/>
    <alias alias="ClaimRepository" type="Assurant.ElitaPlus.DataAccess.ClaimRepository`1, Assurant.ElitaPlus.DataAccess"/>
    <container>
      <!--Default Container-->
      <register type="ICommonRepository" mapTo="CommonRepository"/>
      <register type="IDealerRepository" mapTo="DealerRepository"/>
      <register type="ICertificateRepository" mapTo="CertificateRepository"/>
      <register type="ICompanyRepository" mapTo="CompanyRepository"/>
      <register type="ICountryRepository" mapTo="CountryRepository"/>
      <register type="IAddressRepository" mapTo="AddressRepository"/>
      <register type="IEquipmentRepository" mapTo="EquipmentRepository"/>
      <register type="ICompanyGroupRepository" mapTo="CompanyGroupRepository"/>
      <register type="ICurrencyRepository" mapTo="CurrencyRepository"/>
      <register type="IClaimRepository" mapTo="ClaimRepository"/>
      <register type="Assurant.ElitaPlus.Business.ICacheFacade, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CacheFacade, Assurant.ElitaPlus.Business">
        <lifetime type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"/>
      </register>
      <register type="Assurant.ElitaPlus.Business.ICertificateManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CertificateManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.ICommonManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CommonManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.IDealerManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.DealerManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.ICompanyManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CompanyManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.ICountryManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CountryManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.IAddressManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.AddressManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.IEquipmentManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.EquipmentManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.ICompanyGroupManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CompanyGroupManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.ICurrencyManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.CurrencyManager, Assurant.ElitaPlus.Business"/>
      <register type="Assurant.ElitaPlus.Business.IClaimManager, Assurant.ElitaPlus.Business" mapTo="Assurant.ElitaPlus.Business.ClaimManager, Assurant.ElitaPlus.Business"/>
    </container>
  </Unity>
  <elitaConfiguration>
    <general integrateWorkQueueImagingServices="~integrateWorkQueueImagingServices~" environment="~environment~" hub="~hub~" machineDomain="~machineDomain~" fileClientDirectory="~fileClientDirectory~" serviceOrderEmailSMTPServer="~serviceOrderEmailSMTPServer~" serviceOrderEmailAttachDirectory="~serviceOrderEmailAttachDirectory~" ceMinTimeOut="~ceMinTimeOut~" cacheMaxAgeInMinutes="~cacheMaxAgeInMinutes~"/>    
    <database userName="~databaseuserName~" password="~databasepassword~" dataSourceName="~dataSourceName~" securedUserName="~securedUserName~" securedPassword="~securedPassword~" dataProtectionUserName="~dataProtectionUserName~" dataProtectionPassword="~dataProtectionPassword~" />
    <security ldapServer="~ldapServer~" dataProtectionGroup="~dataProtectionGroup~" userManagementGroup="~userManagementGroup~" allowedGroups="~allowedLdapGroups~" secureGroup="~secureGroup~" regularGroup="~regularGroup~" />
    <felita felitaUserId="~felitaUserId~" felitaPassword="~felitaPassword~" reconUserId="~reconUserId~" reconPassword="~reconPassword~" wcfUploadEndPoint="~wcfUploadEndPoint~" />
    <smartStream ftpUserId="~SSftpUserId~" ftpPassword="~SSftpPassword~" wcfGLUserId="~wcfGLUserId~" wcfGLPassword="~wcfGLPassword~" wcfGLCertName="~wcfGLCertName~" wcfAPUserId="~wcfAPUserId~" wcfAPPassword="~wcfAPPassword~" wcfAPCertName="~wcfAPCertName~" />
    <unixServer userId="~UnixUserId~" password="~Unixpassword~" interfaceDirectory="~interfaceDirectory~" />    
    <webService userId="~WSUserId~" password="~WSPassword~" group="~WSGroup~" />
    <ssrsReport userId="~SSRSUserId~" password="~SSRSpassword~" rootDirectory="~SSRSRootDirectory~" viewerDirectory="~SSRSViewerDirectory~" destinationDirectory="~SSRSDestinationDirectory~" reportpath="~SSRSReportPath~" reportserverurl="~SSRSReportServerUrl~" domain="~SSRSDomain~" />
  </elitaConfiguration>
  <system.webServer>
    <staticContent>
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="72:00:00" />
    </staticContent>
  </system.webServer>
</configuration>