<?xml version="1.0" encoding="utf-8" ?>

<!-- ********************** THIS FILE HAS BEEN GENERATED FROM TEMPLATE SQLObject.cst (5/7/2009)********************** -->

<SQL>
  <LOAD>
    <![CDATA[	
			SELECT 
				ELP_CRYPT_PW.decrypt_value(user_id) user_id,
				ELP_CRYPT_PW.decrypt_value(password) password,
				env,
				url,
				ELP_CRYPT_PW.decrypt_value(token) token,
				token_created_date,
				created_by,
				created_date,
				modified_by,
				modified_date,
				num_per_process,
				token_duration,
				company_group_id,
				is_external,
				web_pass_id,
				authentication_key,
				hub,
				GENERIC_URL,
        service_type_id
			FROM elp_web_passwd 
			WHERE
				web_pass_id = :web_pass_id
		]]>
  </LOAD>
  <LOAD_ENV_COMPANY_GROUP>
    <![CDATA[	
			SELECT 
				ELP_CRYPT_PW.decrypt_value(user_id) user_id,
				ELP_CRYPT_PW.decrypt_value(password) password,
				env,
				url,
				ELP_CRYPT_PW.decrypt_value(token) token,
				token_created_date,
				created_by,
				created_date,
				modified_by,
				modified_date,
				num_per_process,
				token_duration,
				company_group_id,
				is_external,
				web_pass_id,
				authentication_key,
				hub,
				GENERIC_URL,
        service_type_id
			FROM elp_web_passwd 
			WHERE
				env = :env AND
        (company_group_id = :company_group_id Or company_group_id Is Null) AND
        hub = :hub AND
        is_external = 'Y'
		]]>
  </LOAD_ENV_COMPANY_GROUP>
  <LOAD_WEB_PASSWD>
    <![CDATA[	
			SELECT 
				ELP_CRYPT_PW.decrypt_value(user_id) user_id,
				ELP_CRYPT_PW.decrypt_value(password) password,
				env,
				url,
				ELP_CRYPT_PW.decrypt_value(token) token,
				token_created_date,
				created_by,
				created_date,
				modified_by,
				modified_date,
				num_per_process,
				token_duration,
				company_group_id,
				is_external,
				web_pass_id,
				authentication_key,
				hub,
				GENERIC_URL,
        service_type_id
			FROM elp_web_passwd 
			WHERE
				((:env is null) or (env = :env)) AND
        ((:hub is null) OR (hub = :hub)) AND
        ((:company_group_id is null) OR (company_group_id = :company_group_id)) AND
        is_external = :is_external AND
        ((:service_type_id is null) OR (service_type_id = :service_type_id))
		]]>
  </LOAD_WEB_PASSWD>
  <LOAD_LIST>
  </LOAD_LIST>
  <UPDATE>
    <![CDATA[	
			UPDATE elp_web_passwd SET
				user_id = :user_id,
				password = :password,
				env = :env,
				url = :url,
				token = :token,
				token_created_date = :token_created_date,
				num_per_process = :num_per_process,
				token_duration = :token_duration,
				company_group_id = :company_group_id,
				is_external = :is_external,
				modified_by = :modified_by,
				authentication_key = :authentication_key,
				hub = :hub,
				GENERIC_URL = :GENERIC_URL,
        service_type_id = :service_type_id
			WHERE
				web_pass_id = :web_pass_id
		]]>
  </UPDATE>
  <INSERT>
    INSERT INTO elp_web_passwd
    (
    user_id,
    password,
    env,
    url,
    token,
    token_created_date,
    num_per_process,
    token_duration,
    company_group_id,
    is_external,
    created_by,
    web_pass_id,
    authentication_key,
    hub,
    GENERIC_URL,
    service_type_id
    )
    VALUES
    (
    :user_id,
    :password,
    :env,
    :url,
    :token,
    :token_created_date,
    :num_per_process,
    :token_duration,
    :company_group_id,
    :is_external,
    :created_by,
    :web_pass_id,
    :authentication_key,
    :hub,
    :GENERIC_URL,
    :service_type_id
    )
  </INSERT>
  <DELETE>
    DELETE FROM elp_web_passwd
    WHERE
    web_pass_id = :web_pass_id
  </DELETE>
</SQL>


