<?xml version="1.0" encoding="utf-8" ?>

<!-- ********************** THIS FILE HAS BEEN GENERATED FROM TEMPLATE SQLObject.cst (9/22/2004)********************** -->

<SQL>
	<LOAD>
    elita.elp_tbl_ProductCode_Conv.load
  </LOAD>
  <LOAD_LIST>
    SELECT  pcc.PRODUCT_CONVERSION_ID, d.dealer_name, EXTERNAL_PROD_CODE,
    pc.product_code, pcc.certificate_duration,
    pcc.manufacturer_warranty, pcc.gross_amount, pcc.manufacturer, pcc.model,
    to_char(pcc.effective_date,'dd-mon-yyyy') effective_date,
    to_char(pcc.expiration_date,'dd-mon-yyyy') expiration_date
    FROM	elp_product_conversion pcc, elp_dealer d, elp_product_code pc
    WHERE   d.dealer_id LIKE :dealer_id and
    pc.dealer_id = d.dealer_id and
    pc.product_code_id LIKE :product_code_id and
    pcc.product_code_id = pc.product_code_id and
    pcc.external_prod_code LIKE :external_product_code
    --dynamic_in_clause
    ORDER BY UPPER(d.dealer_name), UPPER(pcc.external_prod_code), UPPER(pc.product_code)

  </LOAD_LIST>
  <LOAD_LIST_MULTIPLE_COMPANIES>
    SELECT  pcc.PRODUCT_CONVERSION_ID, c.code || ' - ' || d.dealer_name dealer_name, EXTERNAL_PROD_CODE,
    pc.product_code, c.code company_code, pcc.certificate_duration,
    pcc.manufacturer_warranty, pcc.gross_amount, pcc.manufacturer, pcc.model,
    to_char(pcc.effective_date,'dd-mon-yyyy') effective_date,
    to_char(pcc.expiration_date,'dd-mon-yyyy') expiration_date
    FROM	elp_product_conversion pcc, elp_dealer d, elp_product_code pc, elp_company c
    WHERE   d.company_id = c.company_id and
    d.dealer_id LIKE :dealer_id and
    pc.dealer_id = d.dealer_id and
    pc.product_code_id LIKE :product_code_id and
    pcc.product_code_id = pc.product_code_id and
    pcc.external_prod_code LIKE :external_product_code
    --dynamic_in_clause
    ORDER BY UPPER(d.dealer_name), UPPER(pcc.external_prod_code), UPPER(pc.product_code)

  </LOAD_LIST_MULTIPLE_COMPANIES>
  <LOAD_LIST_WITH_DESC>
    select p.Product_code_id, ep.EXTERNAL_PROD_CODE , p.PRODUCT_CODE, p.DESCRIPTION,
    EXTERNAL_PROD_CODE || ' - ' || PRODUCT_CODE All_PROD_CODE, GetYesNo(p.BUNDLED_ITEM_ID)BUNDLED_ITEM
    from elp_product_conversion ep
    inner join elp_product_code p on ep.product_code_id = p.product_code_id
    where ep.dealer_id = :dealer_id
    and  not exists (Select pcd.product_code_id
    from  elp_product_code_detail pcd
    where pcd.product_code_id = p.product_code_id)
    order by EXTERNAL_PROD_CODE
  </LOAD_LIST_WITH_DESC>
	<UPDATE>
    elita.elp_tbl_ProductCode_Conv.Modify
  </UPDATE>
	<INSERT>
    elita.elp_tbl_ProductCode_Conv.Add
  </INSERT>
	<DELETE>
    elita.elp_tbl_ProductCode_Conv.DeleteProductCodeConv
  </DELETE>

  <CHK_DEALER_PRODCODE_MFG_COMBINATION>
    elita.elp_tbl_ProductCode_Conv.Check_dealer_prodcode_mgf_comb
  </CHK_DEALER_PRODCODE_MFG_COMBINATION>
  <CHK_OVERLAPPING_PROD_CODE_CONVERSION>
    elita.elp_tbl_ProductCode_Conv.ProductCodeConversionOverlap
  </CHK_OVERLAPPING_PROD_CODE_CONVERSION>
</SQL> 


